{"version":3,"file":"strata-editor.umd.cjs","sources":["../../node_modules/orderedmap/dist/index.js","../../node_modules/prosemirror-model/dist/index.js","../../node_modules/prosemirror-transform/dist/index.js","../../node_modules/prosemirror-state/dist/index.js","../../node_modules/prosemirror-view/dist/index.js","../../node_modules/w3c-keyname/index.js","../../node_modules/prosemirror-keymap/dist/index.js","../../node_modules/prosemirror-commands/dist/index.js","../../node_modules/prosemirror-schema-list/dist/index.js","../../node_modules/@tiptap/core/dist/index.js","../../node_modules/@tiptap/extension-blockquote/dist/index.js","../../node_modules/@tiptap/extension-bold/dist/index.js","../../node_modules/@tiptap/extension-bullet-list/dist/index.js","../../node_modules/@tiptap/extension-code/dist/index.js","../../node_modules/@tiptap/extension-code-block/dist/index.js","../../node_modules/@tiptap/extension-document/dist/index.js","../../node_modules/prosemirror-dropcursor/dist/index.js","../../node_modules/@tiptap/extension-dropcursor/dist/index.js","../../node_modules/prosemirror-gapcursor/dist/index.js","../../node_modules/@tiptap/extension-gapcursor/dist/index.js","../../node_modules/@tiptap/extension-hard-break/dist/index.js","../../node_modules/@tiptap/extension-heading/dist/index.js","../../node_modules/rope-sequence/dist/index.js","../../node_modules/prosemirror-history/dist/index.js","../../node_modules/@tiptap/extension-history/dist/index.js","../../node_modules/@tiptap/extension-horizontal-rule/dist/index.js","../../node_modules/@tiptap/extension-italic/dist/index.js","../../node_modules/@tiptap/extension-list-item/dist/index.js","../../node_modules/@tiptap/extension-ordered-list/dist/index.js","../../node_modules/@tiptap/extension-paragraph/dist/index.js","../../node_modules/@tiptap/extension-strike/dist/index.js","../../node_modules/@tiptap/extension-text/dist/index.js","../../node_modules/@tiptap/starter-kit/dist/index.js","../../node_modules/@tiptap/extension-underline/dist/index.js","../../node_modules/linkifyjs/dist/linkify.mjs","../../node_modules/@tiptap/extension-link/dist/index.js","../../node_modules/@tiptap/extension-placeholder/dist/index.js","../js/editor.js"],"sourcesContent":["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () → Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The child nodes in this fragment.\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", first = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            let nodeText = node.isText ? node.text.slice(Math.max(from, pos) - pos, to - pos)\n                : !node.isLeaf ? \"\"\n                    : leafText ? (typeof leafText === \"function\" ? leafText(node) : leafText)\n                        : node.type.spec.leafText ? node.type.spec.leafText(node)\n                            : \"\";\n            if (node.isBlock && (node.isLeaf && nodeText || node.isTextblock) && blockSeparator) {\n                if (first)\n                    first = false;\n                else\n                    text += blockSeparator;\n            }\n            text += nodeText;\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. @internal\n    */\n    findIndex(pos) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        let mark = type.create(json.attrs);\n        type.checkAttrs(mark.attrs);\n        return mark;\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert, child);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        let cache = resolveCache.get(doc);\n        if (cache) {\n            for (let i = 0; i < cache.elts.length; i++) {\n                let elt = cache.elts[i];\n                if (elt.pos == pos)\n                    return elt;\n            }\n        }\n        else {\n            resolveCache.set(doc, cache = new ResolveCache);\n        }\n        let result = cache.elts[cache.i] = ResolvedPos.resolve(doc, pos);\n        cache.i = (cache.i + 1) % resolveCacheSize;\n        return result;\n    }\n}\nclass ResolveCache {\n    constructor() {\n        this.elts = [];\n        this.i = 0;\n    }\n}\nconst resolveCacheSize = 12, resolveCache = new WeakMap();\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](https://prosemirror.net/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The array of this node's child nodes.\n    */\n    get children() { return this.content.content; }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](https://prosemirror.net/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    position relative to the original node (method receiver),\n    its parent node, and its child index. When the callback returns\n    false for a given node, that node's children will not be\n    recursed over. The last parameter can be used to specify a\n    starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec.leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise an exception when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        this.type.checkAttrs(this.attrs);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++) {\n            let mark = this.marks[i];\n            mark.type.checkAttrs(mark.attrs);\n            copy = mark.addToSet(copy);\n        }\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = undefined;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        let node = schema.nodeType(json.type).create(json.attrs, content, marks);\n        node.type.checkAttrs(node.attrs);\n        return node;\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.isInGroup(name))\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction checkAttrs(attrs, values, type, name) {\n    for (let name in values)\n        if (!(name in attrs))\n            throw new RangeError(`Unsupported attribute ${name} for ${type} of type ${name}`);\n    for (let name in attrs) {\n        let attr = attrs[name];\n        if (attr.validate)\n            attr.validate(values[name]);\n    }\n}\nfunction initAttrs(typeName, attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(typeName, name, attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(name, spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    Return true when this node type is part of the given\n    [group](https://prosemirror.net/docs/ref/#model.NodeSpec.group).\n    */\n    isInGroup(group) {\n        return this.groups.indexOf(group) > -1;\n    }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"node\", this.name);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\nfunction validateType(typeName, attrName, type) {\n    let types = type.split(\"|\");\n    return (value) => {\n        let name = value === null ? \"null\" : typeof value;\n        if (types.indexOf(name) < 0)\n            throw new RangeError(`Expected value of type ${types} for attribute ${attrName} on type ${typeName}, got ${name}`);\n    };\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(typeName, attrName, options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n        this.validate = typeof options.validate == \"string\" ? validateType(typeName, attrName, options.validate) : options.validate;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(name, spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"mark\", this.name);\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        The [linebreak\n        replacement](https://prosemirror.net/docs/ref/#model.NodeSpec.linebreakReplacement) node defined\n        in this schema, if any.\n        */\n        this.linebreakReplacement = null;\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            if (type.spec.linebreakReplacement) {\n                if (this.linebreakReplacement)\n                    throw new RangeError(\"Multiple linebreak nodes defined\");\n                if (!type.isInline || !type.isLeaf)\n                    throw new RangeError(\"Linebreak replacement nodes must be inline leaf nodes\");\n                this.linebreakReplacement = type;\n            }\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = json => Node.fromJSON(this, json);\n        this.markFromJSON = json => Mark.fromJSON(this, json);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\nfunction isTagRule(rule) { return rule.tag != null; }\nfunction isStyleRule(rule) { return rule.style != null; }\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        let matchedStyles = this.matchedStyles = [];\n        rules.forEach(rule => {\n            if (isTagRule(rule)) {\n                this.tags.push(rule);\n            }\n            else if (isStyleRule(rule)) {\n                let prop = /[^=]*/.exec(rule.style)[0];\n                if (matchedStyles.indexOf(prop) < 0)\n                    matchedStyles.push(prop);\n                this.styles.push(rule);\n            }\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.GenericParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, marks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        this.localPreserveWS = false;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom, marks) {\n        if (dom.nodeType == 3)\n            this.addTextNode(dom, marks);\n        else if (dom.nodeType == 1)\n            this.addElement(dom, marks);\n    }\n    addTextNode(dom, marks) {\n        let value = dom.nodeValue;\n        let top = this.top, preserveWS = (top.options & OPT_PRESERVE_WS_FULL) ? \"full\"\n            : this.localPreserveWS || (top.options & OPT_PRESERVE_WS) > 0;\n        if (preserveWS === \"full\" ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!preserveWS) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (preserveWS !== \"full\") {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value), marks, !/\\S/.test(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, marks, matchAfter) {\n        let outerWS = this.localPreserveWS, top = this.top;\n        if (dom.tagName == \"PRE\" || /pre/.test(dom.style && dom.style.whiteSpace))\n            this.localPreserveWS = true;\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        out: if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom, marks);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom, marks);\n                break out;\n            }\n            let innerMarks = rule && rule.skip ? marks : this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addAll(dom, innerMarks);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            let innerMarks = this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addElementByRule(dom, rule, innerMarks, rule.consuming === false ? ruleID : undefined);\n        }\n        this.localPreserveWS = outerWS;\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom, marks) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"), marks);\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom, marks) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"), marks, true);\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an updated array of marks, or null to indicate some of the\n    // styles had a rule with `ignore` set.\n    readStyles(dom, marks) {\n        let styles = dom.style;\n        // Because many properties will only show up in 'normalized' form\n        // in `style.item` (i.e. text-decoration becomes\n        // text-decoration-line, text-decoration-color, etc), we directly\n        // query the styles mentioned in our rules instead of iterating\n        // over the items.\n        if (styles && styles.length)\n            for (let i = 0; i < this.parser.matchedStyles.length; i++) {\n                let name = this.parser.matchedStyles[i], value = styles.getPropertyValue(name);\n                if (value)\n                    for (let after = undefined;;) {\n                        let rule = this.parser.matchStyle(name, value, this, after);\n                        if (!rule)\n                            break;\n                        if (rule.ignore)\n                            return null;\n                        if (rule.clearMark)\n                            marks = marks.filter(m => !rule.clearMark(m));\n                        else\n                            marks = marks.concat(this.parser.schema.marks[rule.mark].create(rule.attrs));\n                        if (rule.consuming === false)\n                            after = rule;\n                        else\n                            break;\n                    }\n            }\n        return marks;\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, marks, continueAfter) {\n        let sync, nodeType;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                let inner = this.enter(nodeType, rule.attrs || null, marks, rule.preserveWhitespace);\n                if (inner) {\n                    sync = true;\n                    marks = inner;\n                }\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs), marks, dom.nodeName == \"BR\")) {\n                this.leafFallback(dom, marks);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            marks = marks.concat(markType.create(rule.attrs));\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, marks, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node, marks, false));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM, marks);\n            this.findAround(dom, contentDOM, false);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, marks, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom, marks);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node, marks, cautious) {\n        let route, sync;\n        for (let depth = this.open, penalty = 0; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length + penalty)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid) {\n                if (cautious)\n                    break;\n                penalty += 2;\n            }\n        }\n        if (!route)\n            return null;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            marks = this.enterInner(route[i], null, marks, false);\n        return marks;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node, marks, cautious) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                marks = this.enterInner(block, null, marks);\n        }\n        let innerMarks = this.findPlace(node, marks, cautious);\n        if (innerMarks) {\n            this.closeExtra();\n            let top = this.top;\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let nodeMarks = Mark.none;\n            for (let m of innerMarks.concat(node.marks))\n                if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, node.type))\n                    nodeMarks = m.addToSet(nodeMarks);\n            top.content.push(node.mark(nodeMarks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, marks, preserveWS) {\n        let innerMarks = this.findPlace(type.create(attrs), marks, false);\n        if (innerMarks)\n            innerMarks = this.enterInner(type, attrs, marks, true, preserveWS);\n        return innerMarks;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs, marks, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        let applyMarks = Mark.none;\n        marks = marks.filter(m => {\n            if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, type)) {\n                applyMarks = m.addToSet(applyMarks);\n                return false;\n            }\n            return true;\n        });\n        this.nodes.push(new NodeContext(type, attrs, applyMarks, solid, null, options));\n        this.open++;\n        return marks;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(!!(this.isOpen || this.options.topOpen));\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--) {\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n            else if (this.localPreserveWS) {\n                this.nodes[i].options |= OPT_PRESERVE_WS;\n            }\n        }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && !next.isInGroup(part)))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = renderSpec(doc(options), this.nodes[node.type.name](node), null, node.attrs);\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && renderSpec(doc(options), toDOM(mark, inline), null, mark.attrs);\n    }\n    static renderSpec(doc, structure, xmlNS = null, blockArraysIn) {\n        return renderSpec(doc, structure, xmlNS, blockArraysIn);\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\nconst suspiciousAttributeCache = new WeakMap();\nfunction suspiciousAttributes(attrs) {\n    let value = suspiciousAttributeCache.get(attrs);\n    if (value === undefined)\n        suspiciousAttributeCache.set(attrs, value = suspiciousAttributesInner(attrs));\n    return value;\n}\nfunction suspiciousAttributesInner(attrs) {\n    let result = null;\n    function scan(value) {\n        if (value && typeof value == \"object\") {\n            if (Array.isArray(value)) {\n                if (typeof value[0] == \"string\") {\n                    if (!result)\n                        result = [];\n                    result.push(value);\n                }\n                else {\n                    for (let i = 0; i < value.length; i++)\n                        scan(value[i]);\n                }\n            }\n            else {\n                for (let prop in value)\n                    scan(value[prop]);\n            }\n        }\n    }\n    scan(attrs);\n    return result;\n}\nfunction renderSpec(doc, structure, xmlNS, blockArraysIn) {\n    if (typeof structure == \"string\")\n        return { dom: doc.createTextNode(structure) };\n    if (structure.nodeType != null)\n        return { dom: structure };\n    if (structure.dom && structure.dom.nodeType != null)\n        return structure;\n    let tagName = structure[0], suspicious;\n    if (typeof tagName != \"string\")\n        throw new RangeError(\"Invalid array passed to renderSpec\");\n    if (blockArraysIn && (suspicious = suspiciousAttributes(blockArraysIn)) &&\n        suspicious.indexOf(structure) > -1)\n        throw new RangeError(\"Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.\");\n    let space = tagName.indexOf(\" \");\n    if (space > 0) {\n        xmlNS = tagName.slice(0, space);\n        tagName = tagName.slice(space + 1);\n    }\n    let contentDOM;\n    let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n    let attrs = structure[1], start = 1;\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n        start = 2;\n        for (let name in attrs)\n            if (attrs[name] != null) {\n                let space = name.indexOf(\" \");\n                if (space > 0)\n                    dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                else if (name == \"style\" && dom.style)\n                    dom.style.cssText = attrs[name];\n                else\n                    dom.setAttribute(name, attrs[name]);\n            }\n    }\n    for (let i = start; i < structure.length; i++) {\n        let child = structure[i];\n        if (child === 0) {\n            if (i < structure.length - 1 || i > start)\n                throw new RangeError(\"Content hole must be the only child of its parent node\");\n            return { dom, contentDOM: dom };\n        }\n        else {\n            let { dom: inner, contentDOM: innerContent } = renderSpec(doc, child, xmlNS, blockArraysIn);\n            dom.appendChild(inner);\n            if (innerContent) {\n                if (contentDOM)\n                    throw new RangeError(\"Multiple content holes\");\n                contentDOM = innerContent;\n            }\n        }\n    }\n    return { dom, contentDOM };\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n","import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](https://prosemirror.net/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(maps, \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps ? maps.length : 0) {\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n        this._maps = maps || [];\n        this.ownData = !(maps || mirror);\n    }\n    /**\n    The step maps in this mapping.\n    */\n    get maps() { return this._maps; }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this._maps, this.mirror, from, to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        if (!this.ownData) {\n            this._maps = this._maps.slice();\n            this.mirror = this.mirror && this.mirror.slice();\n            this.ownData = true;\n        }\n        this.to = this._maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this._maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this._maps.length; i < mapping._maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping._maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this._maps.length + mapping._maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping._maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this._maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this._maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this._maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice, this.structure);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = this.from == this.gapFrom ? from.pos : mapping.map(this.gapFrom, -1);\n        let gapTo = this.to == this.gapTo ? to.pos : mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch, clearNewlines = true) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (clearNewlines && child.isText && parentType.whitespace != \"pre\") {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        let attrsHere = typeof attrs == \"function\" ? attrs(node) : attrs;\n        if (node.isTextblock && !node.hasMarkup(type, attrsHere) &&\n            canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            let convertNewlines = null;\n            if (type.schema.linebreakReplacement) {\n                let pre = type.whitespace == \"pre\", supportLinebreak = !!type.contentMatch.matchType(type.schema.linebreakReplacement);\n                if (pre && !supportLinebreak)\n                    convertNewlines = false;\n                else if (!pre && supportLinebreak)\n                    convertNewlines = true;\n            }\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            if (convertNewlines === false)\n                replaceLinebreaks(tr, node, pos, mapFrom);\n            clearIncompatible(tr, tr.mapping.slice(mapFrom).map(pos, 1), type, undefined, convertNewlines === null);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrsHere, null, node.marks)), 0, 0), 1, true));\n            if (convertNewlines === true)\n                replaceNewlines(tr, node, pos, mapFrom);\n            return false;\n        }\n    });\n}\nfunction replaceNewlines(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.isText) {\n            let m, newline = /\\r?\\n|\\r/g;\n            while (m = newline.exec(child.text)) {\n                let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset + m.index);\n                tr.replaceWith(start, start + 1, node.type.schema.linebreakReplacement.create());\n            }\n        }\n    });\n}\nfunction replaceLinebreaks(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.type == child.type.schema.linebreakReplacement) {\n            let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset);\n            tr.replaceWith(start, start + 1, node.type.schema.text(\"\\n\"));\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction canAppendWithSubstitutedLinebreaks(a, b) {\n    if (!b.content.size)\n        a.type.compatibleContent(b.type);\n    let match = a.contentMatchAt(a.childCount);\n    let { linebreakReplacement } = a.type.schema;\n    for (let i = 0; i < b.childCount; i++) {\n        let child = b.child(i);\n        let type = child.type == linebreakReplacement ? a.type.schema.nodes.text : child.type;\n        match = match.matchType(type);\n        if (!match)\n            return false;\n        if (!a.type.allowsMarks(child.marks))\n            return false;\n    }\n    return match.validEnd;\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && canAppendWithSubstitutedLinebreaks(a, b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let convertNewlines = null;\n    let { linebreakReplacement } = tr.doc.type.schema;\n    let $before = tr.doc.resolve(pos - depth), beforeType = $before.node().type;\n    if (linebreakReplacement && beforeType.inlineContent) {\n        let pre = beforeType.whitespace == \"pre\";\n        let supportLinebreak = !!beforeType.contentMatch.matchType(linebreakReplacement);\n        if (pre && !supportLinebreak)\n            convertNewlines = false;\n        else if (!pre && supportLinebreak)\n            convertNewlines = true;\n    }\n    let mapFrom = tr.steps.length;\n    if (convertNewlines === false) {\n        let $after = tr.doc.resolve(pos + depth);\n        replaceLinebreaks(tr, $after.node(), $after.before(), mapFrom);\n    }\n    if (beforeType.inlineContent)\n        clearIncompatible(tr, pos + depth - 1, beforeType, $before.node().contentMatchAt($before.index()), convertNewlines == null);\n    let mapping = tr.mapping.slice(mapFrom), start = mapping.map(pos - depth);\n    tr.step(new ReplaceStep(start, mapping.map(pos + depth, -1), Slice.empty, true));\n    if (convertNewlines === true) {\n        let $full = tr.doc.resolve(start);\n        replaceNewlines(tr, $full.node(), $full.before(), tr.steps.length);\n    }\n    return tr;\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d &&\n            $from.start(d - 1) == $to.start(d - 1) && $from.node(d - 1).canReplace($from.index(d - 1), $to.index(d - 1)))\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or all marks of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        let node = this.doc.nodeAt(pos);\n        if (!node)\n            throw new RangeError(\"No node at position \" + pos);\n        if (mark instanceof Mark) {\n            if (mark.isInSet(node.marks))\n                this.step(new RemoveNodeMarkStep(pos, mark));\n        }\n        else {\n            let set = node.marks, found, steps = [];\n            while (found = mark.isInSet(set)) {\n                steps.push(new RemoveNodeMarkStep(pos, found));\n                set = found.removeFromSet(set);\n            }\n            for (let i = steps.length - 1; i >= 0; i--)\n                this.step(steps[i]);\n        }\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split (with the outermost nodes coming first).\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n","import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\nconst clearReusedRange = function () {\n    reusedRange = null;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    var _a;\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            let child = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (child.nodeType == 1 && child.contentEditable == \"false\") {\n                if ((_a = child.pmViewDesc) === null || _a === void 0 ? void 0 : _a.ignoreForSelection)\n                    off += dir;\n                else\n                    return false;\n            }\n            else {\n                node = child;\n                off = dir < 0 ? nodeSize(node) : 0;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction textNodeBefore$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction textNodeAfter$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset < node.nodeValue.length)\n            return node;\n        if (node.nodeType == 1 && offset < node.childNodes.length) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node) + 1;\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            // Clip the offset, because Chrome will return a text offset\n            // into <input> nodes, which can't be treated as a regular DOM\n            // offset\n            if (pos)\n                return { node: pos.offsetNode, offset: Math.min(nodeSize(pos.offsetNode), pos.offset) };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: Math.min(nodeSize(range.startContainer), range.startOffset) };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    let vp = doc.defaultView && doc.defaultView.visualViewport;\n    if (vp)\n        return {\n            left: 0, right: vp.width,\n            top: 0, bottom: vp.height\n        };\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;;) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1) {\n            parent = parentNode(parent);\n            continue;\n        }\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        let pos = atTop ? \"fixed\" : getComputedStyle(parent).position;\n        if (/^(fixed|sticky)$/.test(pos))\n            break;\n        parent = pos == \"absolute\" ? parent.offsetParent : parentNode(parent);\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true), rect;\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent || !desc.contentDOM) &&\n            // Ignore elements with zero-size bounding rectangles\n            ((rect = desc.dom.getBoundingClientRect()).width || rect.height)) {\n            if (desc.node.isBlock && desc.parent && !/^T(R|BODY|HEAD|FOOT)$/.test(desc.dom.nodeName)) {\n                // Only apply the horizontal test to the innermost block. Vertical for any parent.\n                if (!sawBlock && rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (!sawBlock && rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n                sawBlock = true;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    if (!sel)\n        return $head.pos == $head.start() || $head.pos == $head.end();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length) {\n                    for (let i = 0; i < child.children.length; i++) {\n                        let inner = child.children[i];\n                        if (inner.size) {\n                            child = inner;\n                            break;\n                        }\n                    }\n                }\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, view, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, view, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = view.root.getSelection();\n        let selRange = view.domSelectionRange();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && selRange.focusNode && selRange.focusNode != headDOM.node && selRange.focusNode.nodeType == 1) {\n            let after = selRange.focusNode.childNodes[selRange.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, selRange.anchorNode, selRange.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, selRange.focusNode, selRange.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n    get ignoreForSelection() { return false; }\n    isText(text) { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get ignoreForSelection() { return !!this.widget.type.spec.relaxedSide; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM, spec) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n        this.spec = spec;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline), null, mark.attrs);\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom, spec);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            let spec = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node), null, node.attrs);\n            ({ dom, contentDOM } = spec);\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let textNode = view.input.compositionNode;\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1) {\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n            if (this.contentDOM || !this.node.type.spec.draggable)\n                this.dom.removeAttribute(\"draggable\");\n        }\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n    isText(text) { return this.node.text == text; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update && (this.node.type == node.type || this.spec.multiType)) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, view, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, view.root)\n            : super.setSelection(anchor, head, view, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.destroyBetween(this.index, i);\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content) ||\n            !sameOuterDeco(outerDeco, next.outerDeco) || !innerDeco.eq(next.innerDeco))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        else {\n            while (decoIndex < locals.length && locals[decoIndex].to < end)\n                decoIndex++;\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        anchor = head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        if (domSel instanceof view.dom.ownerDocument.defaultView.Selection && domSel.rangeCount > 1) {\n            let min = head, max = head;\n            for (let i = 0; i < domSel.rangeCount; i++) {\n                let range = domSel.getRangeAt(i);\n                min = Math.min(min, view.docView.posFromDOM(range.startContainer, range.startOffset, 1));\n                max = Math.max(max, view.docView.posFromDOM(range.endContainer, range.endOffset, -1));\n            }\n            if (min < 0)\n                return null;\n            [anchor, head] = max == view.state.selection.anchor ? [max, min] : [min, max];\n            $head = doc.resolve(head);\n        }\n        else {\n            anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        }\n        if (anchor < 0)\n            return null;\n    }\n    let $anchor = doc.resolve(anchor);\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    if (!domSel)\n        return;\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setStart(node.parentNode, domIndex(node) + 1);\n    else\n        range.setStart(node, 0);\n    range.collapse(true);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (!sel)\n        return;\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text, slice };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nlet _policy = null;\nfunction maybeWrapTrusted(html) {\n    let trustedTypes = window.trustedTypes;\n    if (!trustedTypes)\n        return html;\n    // With the require-trusted-types-for CSP, Chrome will block\n    // innerHTML, even on a detached document. This wraps the string in\n    // a way that makes the browser allow us to use its parser again.\n    if (!_policy)\n        _policy = trustedTypes.defaultPolicy || trustedTypes.createPolicy(\"ProseMirrorClipboard\", { createHTML: (s) => s });\n    return _policy.createHTML(html);\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = maybeWrapTrusted(html);\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\", button: 0 };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastChromeDelete = 0;\n        this.composing = false;\n        this.compositionNode = null;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        let deflt = () => view.state.tr.insertText(text).scrollIntoView();\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text, deflt)))\n            view.dispatch(deflt());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    if (view.state.selection.eq(selection))\n        return;\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier] &&\n        view.input.lastClick.button == event.button) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type, button: event.button };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc && targetDesc.dom.nodeType == 1 ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$to;\n        if (state.selection instanceof TextSelection &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view, !state.selection.empty);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        let sel = view.domSelection();\n                        if (sel)\n                            sel.collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        view.input.compositionNode = null;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction findCompositionNode(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.focusNode)\n        return null;\n    let textBefore = textNodeBefore$1(sel.focusNode, sel.focusOffset);\n    let textAfter = textNodeAfter$1(sel.focusNode, sel.focusOffset);\n    if (textBefore && textAfter && textBefore != textAfter) {\n        let descAfter = textAfter.pmViewDesc, lastChanged = view.domObserver.lastChangedTextNode;\n        if (textBefore == lastChanged || textAfter == lastChanged)\n            return lastChanged;\n        if (!descAfter || !descAfter.isText(textAfter.nodeValue)) {\n            return textAfter;\n        }\n        else if (view.input.compositionNode == textAfter) {\n            let descBefore = textBefore.pmViewDesc;\n            if (!(!descBefore || !descBefore.isText(textBefore.nodeValue)))\n                return textAfter;\n        }\n    }\n    return textBefore || textAfter;\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, restarting = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (restarting || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view), cur = view.state.selection;\n        if (sel && !sel.eq(cur))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else if ((view.markCursor || restarting) && !cur.$from.node(cur.$from.sharedDepth(cur.to)).inlineContent)\n            view.dispatch(view.state.tr.deleteSelection());\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nfunction dragMoves(view, event) {\n    let moves = view.someProp(\"dragCopies\", test => !test(event));\n    return moves != null ? moves : !event[dragCopyModifier];\n}\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let draggedSlice = (node || view.state.selection).content();\n    let { dom, text, slice } = serializeForClipboard(view, draggedSlice);\n    // Pre-120 Chrome versions clear files when calling `clearData` (#1472)\n    if (!event.dataTransfer.files.length || !chrome || chrome_version > 120)\n        event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, dragMoves(view, event), node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && dragMoves(view, event));\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n    forEachSet(f) { f(this); }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n    forEachSet(f) {\n        for (let i = 0; i < this.members.length; i++)\n            this.members[i].forEachSet(f);\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.lastChangedTextNode = null;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let [a, b] = brs;\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n            else {\n                let { focusNode } = this.currentSelection;\n                for (let br of brs) {\n                    let parent = br.parentNode;\n                    if (parent && parent.nodeName == \"LI\" && (!focusNode || blockParent(view, focusNode) != parent))\n                        br.remove();\n                }\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++) {\n                let node = mut.addedNodes[i];\n                added.push(node);\n                if (node.nodeType == 3)\n                    this.lastChangedTextNode = node;\n            }\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            this.lastChangedTextNode = mut.target;\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\nfunction rangeToSelectionRange(view, range) {\n    let anchorNode = range.startContainer, anchorOffset = range.startOffset;\n    let focusNode = range.endContainer, focusOffset = range.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view, selection) {\n    if (selection.getComposedRanges) {\n        let range = selection.getComposedRanges(view.root)[0];\n        if (range)\n            return rangeToSelectionRange(view, range);\n    }\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    return found ? rangeToSelectionRange(view, found) : null;\n}\nfunction blockParent(view, node) {\n    for (let p = node.parentNode; p && p != view.dom; p = p.parentNode) {\n        let desc = view.docView.nearestDesc(p, true);\n        if (desc && desc.node.isBlock)\n            return p;\n    }\n    return null;\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|img|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if (change)\n        view.input.domChangeCount++;\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size &&\n            (!$from.sameParent($to) || !$from.parent.inlineContent) &&\n            !/\\S/.test(parse.doc.textBetween($from.pos, $to.pos, \"\", \"\")) &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head > $from.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeBackspace(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && change.endB == change.start)\n        view.input.lastChromeDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let mkTr = (base) => {\n        let tr = base || view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n        if (parse.sel) {\n            let sel = resolveSelection(view, tr.doc, parse.sel);\n            // Chrome will sometimes, during composition, report the\n            // selection in the wrong place. If it looks like that is\n            // happening, don't update the selection.\n            // Edge just doesn't move the cursor forward when you start typing\n            // in an empty block or between br nodes.\n            if (sel && !(chrome && view.composing && sel.empty &&\n                (change.start != change.endB || view.input.lastChromeDelete < Date.now() - 100) &&\n                (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                ie && sel.empty && sel.head == chFrom))\n                tr.setSelection(sel);\n        }\n        if (compositionID)\n            tr.setMeta(\"composition\", compositionID);\n        return tr.scrollIntoView();\n    };\n    let markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            let tr = mkTr(view.state.tr.delete(chFrom, chTo));\n            let marks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n            if (marks)\n                tr.ensureMarks(marks);\n            view.dispatch(tr);\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            let tr = mkTr(view.state.tr);\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n            view.dispatch(tr);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            let deflt = () => mkTr(view.state.tr.insertText(text, chFrom, chTo));\n            if (!view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text, deflt)))\n                view.dispatch(deflt());\n        }\n    }\n    else {\n        view.dispatch(mkTr());\n    }\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeBackspace(old, start, end, $newStart, $newEnd) {\n    if ( // The content must have shrunk\n    end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Handle the case where, rather than joining blocks, the change just removed an entire block\n    if (!$newStart.parent.isTextblock) {\n        let after = $start.nodeAfter;\n        return after != null && end == start + after.nodeSize;\n    }\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (this.composing)\n                    this.input.compositionNode = findCompositionNode(this);\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco(outerDeco);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (!startDOM || !this.dom.contains(startDOM.nodeType == 1 ? startDOM : startDOM.parentNode)) ;\n        else if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Serialize the given slice as it would be if it was copied from\n    this editor. Returns a DOM element that contains a\n    representation of the slice as its children, a textual\n    representation, and the transformed slice (which can be\n    different from the given input due to hooks like\n    [`transformCopied`](https://prosemirror.net/docs/ref/#view.EditorProps.transformCopied)).\n    */\n    serializeForClipboard(slice) {\n        return serializeForClipboard(this, slice);\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n        clearReusedRange();\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        let sel = this.domSelection();\n        if (!sel)\n            return { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };\n        return safari && this.root.nodeType === 11 &&\n            deepActiveElement(this.dom.ownerDocument) == this.dom && safariShadowSelectionRange(this, sel) || sel;\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nEditorView.prototype.dispatch = function (tr) {\n    let dispatchTransaction = this._props.dispatchTransaction;\n    if (dispatchTransaction)\n        dispatchTransaction.call(this, tr);\n    else\n        this.updateState(this.state.apply(tr));\n};\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.from, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" && /Mac|iP(hone|[oa]d)/.test(navigator.platform);\nconst windows = typeof navigator != \"undefined\" && /Win/.test(navigator.platform);\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.altKey || event.metaKey || event.ctrlKey) &&\n                // Ctrl-Alt may be used for AltGr on Windows\n                !(windows && event.ctrlKey && event.altKey) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060, #1529.\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n","import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection, SelectionRange } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, -1))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        for (let depth = $cursor.depth;; depth--) {\n            let delStep = replaceStep(state.doc, $cursor.before(depth), $cursor.after(depth), Slice.empty);\n            if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n                if (dispatch) {\n                    let tr = state.tr.step(delStep);\n                    tr.setSelection(textblockAt(before, \"end\")\n                        ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                    dispatch(tr.scrollIntoView());\n                }\n                return true;\n            }\n            if (depth == 1 || $cursor.node(depth - 1).childCount > 1)\n                break;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, 1))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.depth)\n            return false;\n        let types = [];\n        let splitDepth, deflt, atEnd = false, atStart = false;\n        for (let d = $from.depth;; d--) {\n            let node = $from.node(d);\n            if (node.isBlock) {\n                atEnd = $from.end(d) == $from.pos + ($from.depth - d);\n                atStart = $from.start(d) == $from.pos - ($from.depth - d);\n                deflt = defaultBlockAt($from.node(d - 1).contentMatchAt($from.indexAfter(d - 1)));\n                let splitType = splitNode && splitNode($to.parent, atEnd, $from);\n                types.unshift(splitType || (atEnd && deflt ? { type: deflt } : null));\n                splitDepth = d;\n                break;\n            }\n            else {\n                if (d == 1)\n                    return false;\n                types.unshift(null);\n            }\n        }\n        let tr = state.tr;\n        if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n            tr.deleteSelection();\n        let splitPos = tr.mapping.map($from.pos);\n        let can = canSplit(tr.doc, splitPos, types.length, types);\n        if (!can) {\n            types[0] = deflt ? { type: deflt } : null;\n            can = canSplit(tr.doc, splitPos, types.length, types);\n        }\n        if (!can)\n            return false;\n        tr.split(splitPos, types.length, types);\n        if (!atEnd && atStart && $from.node(splitDepth).type != deflt) {\n            let first = tr.mapping.map($from.before(splitDepth)), $first = tr.doc.resolve(first);\n            if (deflt && $from.node(splitDepth - 1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                tr.setNodeMarkup(tr.mapping.map($from.before(splitDepth)), deflt);\n        }\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.join($pos.pos).scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch, dir) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    let isolated = before.type.spec.isolating || after.type.spec.isolating;\n    if (!isolated && joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = !isolated && $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let $joinAt = tr.doc.resolve(end + 2 * conn.length);\n            if ($joinAt.nodeAfter && $joinAt.nodeAfter.type == before.type &&\n                canJoin(tr.doc, $joinAt.pos))\n                tr.join($joinAt.pos);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = after.type.spec.isolating || (dir > 0 && isolated) ? null : Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type, enterAtoms) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (can || !enterAtoms && node.isAtom && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\nfunction removeInlineAtoms(ranges) {\n    let result = [];\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        $from.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.isAtom && node.content.size && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos) {\n                if (pos + 1 > $from.pos)\n                    result.push(new SelectionRange($from, $from.doc.resolve(pos + 1)));\n                $from = $from.doc.resolve(pos + 1 + node.content.size);\n                return false;\n            }\n        });\n        if ($from.pos < $to.pos)\n            result.push(new SelectionRange($from, $to));\n    }\n    return result;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null, options) {\n    let removeWhenPresent = (options && options.removeWhenPresent) !== false;\n    let enterAtoms = (options && options.enterInlineAtoms) !== false;\n    let dropSpace = !(options && options.includeWhitespace);\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType, enterAtoms))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let add, tr = state.tr;\n                if (!enterAtoms)\n                    ranges = removeInlineAtoms(ranges);\n                if (removeWhenPresent) {\n                    add = !ranges.some(r => state.doc.rangeHasMark(r.$from.pos, r.$to.pos, markType));\n                }\n                else {\n                    add = !ranges.every(r => {\n                        let missing = false;\n                        tr.doc.nodesBetween(r.$from.pos, r.$to.pos, (node, pos, parent) => {\n                            if (missing)\n                                return false;\n                            missing = !markType.isInSet(node.marks) && !!parent && parent.type.allowsMarkType(markType) &&\n                                !(node.isText && /^\\s*$/.test(node.textBetween(Math.max(0, r.$from.pos - pos), Math.min(node.nodeSize, r.$to.pos - pos))));\n                        });\n                        return !missing;\n                    });\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (!add) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = dropSpace && start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = dropSpace && end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1, validate: \"number\" } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to);\n        if (!range)\n            return false;\n        let tr = dispatch ? state.tr : null;\n        if (!wrapRangeInList(tr, range, listType, attrs))\n            return false;\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nTry to wrap the given node range in a list of the given type.\nReturn `true` when this is possible, `false` otherwise. When `tr`\nis non-null, the wrapping is added to that transaction. When it is\n`null`, the function only queries whether the wrapping is\npossible.\n*/\nfunction wrapRangeInList(tr, range, listType, attrs = null) {\n    let doJoin = false, outerRange = range, doc = range.$from.doc;\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && range.$from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n        // Don't do anything if this is the top of the list\n        if (range.$from.index(range.depth - 1) == 0)\n            return false;\n        let $insert = doc.resolve(range.start - 2);\n        outerRange = new NodeRange($insert, $insert, range.depth);\n        if (range.endIndex < range.parent.childCount)\n            range = new NodeRange(range.$from, doc.resolve(range.$to.end(range.depth)), range.depth);\n        doJoin = true;\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range);\n    if (!wrap)\n        return false;\n    if (tr)\n        doWrapInList(tr, range, wrap, doJoin, listType);\n    return true;\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nActs like [`splitListItem`](https://prosemirror.net/docs/ref/#schema-list.splitListItem), but\nwithout resetting the set of active marks at the cursor.\n*/\nfunction splitListItemKeepMarks(itemType, itemAttrs) {\n    let split = splitListItem(itemType, itemAttrs);\n    return (state, dispatch) => {\n        return split(state, dispatch && (tr => {\n            let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n            if (marks)\n                tr.ensureMarks(marks);\n            dispatch(tr);\n        }));\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let $after = tr.doc.resolve(tr.mapping.map(end, -1) - 1);\n    if (canJoin(tr.doc, $after.pos) && $after.nodeBefore.type == $after.nodeAfter.type)\n        tr.join($after.pos);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, splitListItemKeepMarks, wrapInList, wrapRangeInList };\n","import { Plugin, PluginKey, TextSelection, Selection, AllSelection, NodeSelection, EditorState } from '@tiptap/pm/state';\nimport { EditorView } from '@tiptap/pm/view';\nimport { keymap } from '@tiptap/pm/keymap';\nimport { Schema, DOMSerializer, Fragment, Node as Node$1, DOMParser, Slice } from '@tiptap/pm/model';\nimport { liftTarget, ReplaceStep, ReplaceAroundStep, joinPoint, Transform, canSplit, canJoin, findWrapping } from '@tiptap/pm/transform';\nimport { createParagraphNear as createParagraphNear$1, deleteSelection as deleteSelection$1, exitCode as exitCode$1, joinUp as joinUp$1, joinDown as joinDown$1, joinBackward as joinBackward$1, joinForward as joinForward$1, joinTextblockBackward as joinTextblockBackward$1, joinTextblockForward as joinTextblockForward$1, lift as lift$1, liftEmptyBlock as liftEmptyBlock$1, newlineInCode as newlineInCode$1, selectNodeBackward as selectNodeBackward$1, selectNodeForward as selectNodeForward$1, selectParentNode as selectParentNode$1, selectTextblockEnd as selectTextblockEnd$1, selectTextblockStart as selectTextblockStart$1, setBlockType, wrapIn as wrapIn$1 } from '@tiptap/pm/commands';\nimport { liftListItem as liftListItem$1, sinkListItem as sinkListItem$1, wrapInList as wrapInList$1 } from '@tiptap/pm/schema-list';\n\n/**\n * Takes a Transaction & Editor State and turns it into a chainable state object\n * @param config The transaction and state to create the chainable state from\n * @returns A chainable Editor state object\n */\nfunction createChainableState(config) {\n    const { state, transaction } = config;\n    let { selection } = transaction;\n    let { doc } = transaction;\n    let { storedMarks } = transaction;\n    return {\n        ...state,\n        apply: state.apply.bind(state),\n        applyTransaction: state.applyTransaction.bind(state),\n        plugins: state.plugins,\n        schema: state.schema,\n        reconfigure: state.reconfigure.bind(state),\n        toJSON: state.toJSON.bind(state),\n        get storedMarks() {\n            return storedMarks;\n        },\n        get selection() {\n            return selection;\n        },\n        get doc() {\n            return doc;\n        },\n        get tr() {\n            selection = transaction.selection;\n            doc = transaction.doc;\n            storedMarks = transaction.storedMarks;\n            return transaction;\n        },\n    };\n}\n\nclass CommandManager {\n    constructor(props) {\n        this.editor = props.editor;\n        this.rawCommands = this.editor.extensionManager.commands;\n        this.customState = props.state;\n    }\n    get hasCustomState() {\n        return !!this.customState;\n    }\n    get state() {\n        return this.customState || this.editor.state;\n    }\n    get commands() {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const { tr } = state;\n        const props = this.buildProps(tr);\n        return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n            const method = (...args) => {\n                const callback = command(...args)(props);\n                if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\n                    view.dispatch(tr);\n                }\n                return callback;\n            };\n            return [name, method];\n        }));\n    }\n    get chain() {\n        return () => this.createChain();\n    }\n    get can() {\n        return () => this.createCan();\n    }\n    createChain(startTr, shouldDispatch = true) {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const callbacks = [];\n        const hasStartTransaction = !!startTr;\n        const tr = startTr || state.tr;\n        const run = () => {\n            if (!hasStartTransaction\n                && shouldDispatch\n                && !tr.getMeta('preventDispatch')\n                && !this.hasCustomState) {\n                view.dispatch(tr);\n            }\n            return callbacks.every(callback => callback === true);\n        };\n        const chain = {\n            ...Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n                const chainedCommand = (...args) => {\n                    const props = this.buildProps(tr, shouldDispatch);\n                    const callback = command(...args)(props);\n                    callbacks.push(callback);\n                    return chain;\n                };\n                return [name, chainedCommand];\n            })),\n            run,\n        };\n        return chain;\n    }\n    createCan(startTr) {\n        const { rawCommands, state } = this;\n        const dispatch = false;\n        const tr = startTr || state.tr;\n        const props = this.buildProps(tr, dispatch);\n        const formattedCommands = Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n            return [name, (...args) => command(...args)({ ...props, dispatch: undefined })];\n        }));\n        return {\n            ...formattedCommands,\n            chain: () => this.createChain(tr, dispatch),\n        };\n    }\n    buildProps(tr, shouldDispatch = true) {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const props = {\n            tr,\n            editor,\n            view,\n            state: createChainableState({\n                state,\n                transaction: tr,\n            }),\n            dispatch: shouldDispatch ? () => undefined : undefined,\n            chain: () => this.createChain(tr, shouldDispatch),\n            can: () => this.createCan(tr),\n            get commands() {\n                return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n                    return [name, (...args) => command(...args)(props)];\n                }));\n            },\n        };\n        return props;\n    }\n}\n\nclass EventEmitter {\n    constructor() {\n        this.callbacks = {};\n    }\n    on(event, fn) {\n        if (!this.callbacks[event]) {\n            this.callbacks[event] = [];\n        }\n        this.callbacks[event].push(fn);\n        return this;\n    }\n    emit(event, ...args) {\n        const callbacks = this.callbacks[event];\n        if (callbacks) {\n            callbacks.forEach(callback => callback.apply(this, args));\n        }\n        return this;\n    }\n    off(event, fn) {\n        const callbacks = this.callbacks[event];\n        if (callbacks) {\n            if (fn) {\n                this.callbacks[event] = callbacks.filter(callback => callback !== fn);\n            }\n            else {\n                delete this.callbacks[event];\n            }\n        }\n        return this;\n    }\n    once(event, fn) {\n        const onceFn = (...args) => {\n            this.off(event, onceFn);\n            fn.apply(this, args);\n        };\n        return this.on(event, onceFn);\n    }\n    removeAllListeners() {\n        this.callbacks = {};\n    }\n}\n\n/**\n * Returns a field from an extension\n * @param extension The Tiptap extension\n * @param field The field, for example `renderHTML` or `priority`\n * @param context The context object that should be passed as `this` into the function\n * @returns The field value\n */\nfunction getExtensionField(extension, field, context) {\n    if (extension.config[field] === undefined && extension.parent) {\n        return getExtensionField(extension.parent, field, context);\n    }\n    if (typeof extension.config[field] === 'function') {\n        const value = extension.config[field].bind({\n            ...context,\n            parent: extension.parent\n                ? getExtensionField(extension.parent, field, context)\n                : null,\n        });\n        return value;\n    }\n    return extension.config[field];\n}\n\nfunction splitExtensions(extensions) {\n    const baseExtensions = extensions.filter(extension => extension.type === 'extension');\n    const nodeExtensions = extensions.filter(extension => extension.type === 'node');\n    const markExtensions = extensions.filter(extension => extension.type === 'mark');\n    return {\n        baseExtensions,\n        nodeExtensions,\n        markExtensions,\n    };\n}\n\n/**\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\n * @param extensions List of extensions\n */\nfunction getAttributesFromExtensions(extensions) {\n    const extensionAttributes = [];\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\n    const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions];\n    const defaultAttribute = {\n        default: null,\n        rendered: true,\n        renderHTML: null,\n        parseHTML: null,\n        keepOnSplit: true,\n        isRequired: false,\n    };\n    extensions.forEach(extension => {\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            extensions: nodeAndMarkExtensions,\n        };\n        const addGlobalAttributes = getExtensionField(extension, 'addGlobalAttributes', context);\n        if (!addGlobalAttributes) {\n            return;\n        }\n        const globalAttributes = addGlobalAttributes();\n        globalAttributes.forEach(globalAttribute => {\n            globalAttribute.types.forEach(type => {\n                Object\n                    .entries(globalAttribute.attributes)\n                    .forEach(([name, attribute]) => {\n                    extensionAttributes.push({\n                        type,\n                        name,\n                        attribute: {\n                            ...defaultAttribute,\n                            ...attribute,\n                        },\n                    });\n                });\n            });\n        });\n    });\n    nodeAndMarkExtensions.forEach(extension => {\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n        };\n        const addAttributes = getExtensionField(extension, 'addAttributes', context);\n        if (!addAttributes) {\n            return;\n        }\n        // TODO: remove `as Attributes`\n        const attributes = addAttributes();\n        Object\n            .entries(attributes)\n            .forEach(([name, attribute]) => {\n            const mergedAttr = {\n                ...defaultAttribute,\n                ...attribute,\n            };\n            if (typeof (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === 'function') {\n                mergedAttr.default = mergedAttr.default();\n            }\n            if ((mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.isRequired) && (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === undefined) {\n                delete mergedAttr.default;\n            }\n            extensionAttributes.push({\n                type: extension.name,\n                name,\n                attribute: mergedAttr,\n            });\n        });\n    });\n    return extensionAttributes;\n}\n\nfunction getNodeType(nameOrType, schema) {\n    if (typeof nameOrType === 'string') {\n        if (!schema.nodes[nameOrType]) {\n            throw Error(`There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`);\n        }\n        return schema.nodes[nameOrType];\n    }\n    return nameOrType;\n}\n\nfunction mergeAttributes(...objects) {\n    return objects\n        .filter(item => !!item)\n        .reduce((items, item) => {\n        const mergedAttributes = { ...items };\n        Object.entries(item).forEach(([key, value]) => {\n            const exists = mergedAttributes[key];\n            if (!exists) {\n                mergedAttributes[key] = value;\n                return;\n            }\n            if (key === 'class') {\n                const valueClasses = value ? String(value).split(' ') : [];\n                const existingClasses = mergedAttributes[key] ? mergedAttributes[key].split(' ') : [];\n                const insertClasses = valueClasses.filter(valueClass => !existingClasses.includes(valueClass));\n                mergedAttributes[key] = [...existingClasses, ...insertClasses].join(' ');\n            }\n            else if (key === 'style') {\n                const newStyles = value ? value.split(';').map((style) => style.trim()).filter(Boolean) : [];\n                const existingStyles = mergedAttributes[key] ? mergedAttributes[key].split(';').map((style) => style.trim()).filter(Boolean) : [];\n                const styleMap = new Map();\n                existingStyles.forEach(style => {\n                    const [property, val] = style.split(':').map(part => part.trim());\n                    styleMap.set(property, val);\n                });\n                newStyles.forEach(style => {\n                    const [property, val] = style.split(':').map(part => part.trim());\n                    styleMap.set(property, val);\n                });\n                mergedAttributes[key] = Array.from(styleMap.entries()).map(([property, val]) => `${property}: ${val}`).join('; ');\n            }\n            else {\n                mergedAttributes[key] = value;\n            }\n        });\n        return mergedAttributes;\n    }, {});\n}\n\nfunction getRenderedAttributes(nodeOrMark, extensionAttributes) {\n    return extensionAttributes\n        .filter(attribute => attribute.type === nodeOrMark.type.name)\n        .filter(item => item.attribute.rendered)\n        .map(item => {\n        if (!item.attribute.renderHTML) {\n            return {\n                [item.name]: nodeOrMark.attrs[item.name],\n            };\n        }\n        return item.attribute.renderHTML(nodeOrMark.attrs) || {};\n    })\n        .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {});\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\n/**\n * Optionally calls `value` as a function.\n * Otherwise it is returned directly.\n * @param value Function or any value.\n * @param context Optional context to bind to function.\n * @param props Optional props to pass to function.\n */\nfunction callOrReturn(value, context = undefined, ...props) {\n    if (isFunction(value)) {\n        if (context) {\n            return value.bind(context)(...props);\n        }\n        return value(...props);\n    }\n    return value;\n}\n\nfunction isEmptyObject(value = {}) {\n    return Object.keys(value).length === 0 && value.constructor === Object;\n}\n\nfunction fromString(value) {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\n        return Number(value);\n    }\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    return value;\n}\n\n/**\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\n * Cancels when `getAttrs` returned `false`.\n * @param parseRule ProseMirror ParseRule\n * @param extensionAttributes List of attributes to inject\n */\nfunction injectExtensionAttributesToParseRule(parseRule, extensionAttributes) {\n    if ('style' in parseRule) {\n        return parseRule;\n    }\n    return {\n        ...parseRule,\n        getAttrs: (node) => {\n            const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs;\n            if (oldAttributes === false) {\n                return false;\n            }\n            const newAttributes = extensionAttributes.reduce((items, item) => {\n                const value = item.attribute.parseHTML\n                    ? item.attribute.parseHTML(node)\n                    : fromString((node).getAttribute(item.name));\n                if (value === null || value === undefined) {\n                    return items;\n                }\n                return {\n                    ...items,\n                    [item.name]: value,\n                };\n            }, {});\n            return { ...oldAttributes, ...newAttributes };\n        },\n    };\n}\n\nfunction cleanUpSchemaItem(data) {\n    return Object.fromEntries(\n    // @ts-ignore\n    Object.entries(data).filter(([key, value]) => {\n        if (key === 'attrs' && isEmptyObject(value)) {\n            return false;\n        }\n        return value !== null && value !== undefined;\n    }));\n}\n/**\n * Creates a new Prosemirror schema based on the given extensions.\n * @param extensions An array of Tiptap extensions\n * @param editor The editor instance\n * @returns A Prosemirror schema\n */\nfunction getSchemaByResolvedExtensions(extensions, editor) {\n    var _a;\n    const allAttributes = getAttributesFromExtensions(extensions);\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\n    const topNode = (_a = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))) === null || _a === void 0 ? void 0 : _a.name;\n    const nodes = Object.fromEntries(nodeExtensions.map(extension => {\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n        };\n        const extraNodeFields = extensions.reduce((fields, e) => {\n            const extendNodeSchema = getExtensionField(e, 'extendNodeSchema', context);\n            return {\n                ...fields,\n                ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\n            };\n        }, {});\n        const schema = cleanUpSchemaItem({\n            ...extraNodeFields,\n            content: callOrReturn(getExtensionField(extension, 'content', context)),\n            marks: callOrReturn(getExtensionField(extension, 'marks', context)),\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\n            inline: callOrReturn(getExtensionField(extension, 'inline', context)),\n            atom: callOrReturn(getExtensionField(extension, 'atom', context)),\n            selectable: callOrReturn(getExtensionField(extension, 'selectable', context)),\n            draggable: callOrReturn(getExtensionField(extension, 'draggable', context)),\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\n            whitespace: callOrReturn(getExtensionField(extension, 'whitespace', context)),\n            linebreakReplacement: callOrReturn(getExtensionField(extension, 'linebreakReplacement', context)),\n            defining: callOrReturn(getExtensionField(extension, 'defining', context)),\n            isolating: callOrReturn(getExtensionField(extension, 'isolating', context)),\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\n                var _a;\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\n            })),\n        });\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\n        if (parseHTML) {\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\n        }\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\n        if (renderHTML) {\n            schema.toDOM = node => renderHTML({\n                node,\n                HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\n            });\n        }\n        const renderText = getExtensionField(extension, 'renderText', context);\n        if (renderText) {\n            schema.toText = renderText;\n        }\n        return [extension.name, schema];\n    }));\n    const marks = Object.fromEntries(markExtensions.map(extension => {\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n        };\n        const extraMarkFields = extensions.reduce((fields, e) => {\n            const extendMarkSchema = getExtensionField(e, 'extendMarkSchema', context);\n            return {\n                ...fields,\n                ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\n            };\n        }, {});\n        const schema = cleanUpSchemaItem({\n            ...extraMarkFields,\n            inclusive: callOrReturn(getExtensionField(extension, 'inclusive', context)),\n            excludes: callOrReturn(getExtensionField(extension, 'excludes', context)),\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\n            spanning: callOrReturn(getExtensionField(extension, 'spanning', context)),\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\n                var _a;\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\n            })),\n        });\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\n        if (parseHTML) {\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\n        }\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\n        if (renderHTML) {\n            schema.toDOM = mark => renderHTML({\n                mark,\n                HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\n            });\n        }\n        return [extension.name, schema];\n    }));\n    return new Schema({\n        topNode,\n        nodes,\n        marks,\n    });\n}\n\n/**\n * Tries to get a node or mark type by its name.\n * @param name The name of the node or mark type\n * @param schema The Prosemiror schema to search in\n * @returns The node or mark type, or null if it doesn't exist\n */\nfunction getSchemaTypeByName(name, schema) {\n    return schema.nodes[name] || schema.marks[name] || null;\n}\n\nfunction isExtensionRulesEnabled(extension, enabled) {\n    if (Array.isArray(enabled)) {\n        return enabled.some(enabledExtension => {\n            const name = typeof enabledExtension === 'string'\n                ? enabledExtension\n                : enabledExtension.name;\n            return name === extension.name;\n        });\n    }\n    return enabled;\n}\n\nfunction getHTMLFromFragment(fragment, schema) {\n    const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment);\n    const temporaryDocument = document.implementation.createHTMLDocument();\n    const container = temporaryDocument.createElement('div');\n    container.appendChild(documentFragment);\n    return container.innerHTML;\n}\n\n/**\n * Returns the text content of a resolved prosemirror position\n * @param $from The resolved position to get the text content from\n * @param maxMatch The maximum number of characters to match\n * @returns The text content\n */\nconst getTextContentFromNodes = ($from, maxMatch = 500) => {\n    let textBefore = '';\n    const sliceEndPos = $from.parentOffset;\n    $from.parent.nodesBetween(Math.max(0, sliceEndPos - maxMatch), sliceEndPos, (node, pos, parent, index) => {\n        var _a, _b;\n        const chunk = ((_b = (_a = node.type.spec).toText) === null || _b === void 0 ? void 0 : _b.call(_a, {\n            node,\n            pos,\n            parent,\n            index,\n        }))\n            || node.textContent\n            || '%leaf%';\n        textBefore += node.isAtom && !node.isText ? chunk : chunk.slice(0, Math.max(0, sliceEndPos - pos));\n    });\n    return textBefore;\n};\n\nfunction isRegExp(value) {\n    return Object.prototype.toString.call(value) === '[object RegExp]';\n}\n\nclass InputRule {\n    constructor(config) {\n        this.find = config.find;\n        this.handler = config.handler;\n    }\n}\nconst inputRuleMatcherHandler = (text, find) => {\n    if (isRegExp(find)) {\n        return find.exec(text);\n    }\n    const inputRuleMatch = find(text);\n    if (!inputRuleMatch) {\n        return null;\n    }\n    const result = [inputRuleMatch.text];\n    result.index = inputRuleMatch.index;\n    result.input = text;\n    result.data = inputRuleMatch.data;\n    if (inputRuleMatch.replaceWith) {\n        if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\n            console.warn('[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".');\n        }\n        result.push(inputRuleMatch.replaceWith);\n    }\n    return result;\n};\nfunction run$1(config) {\n    var _a;\n    const { editor, from, to, text, rules, plugin, } = config;\n    const { view } = editor;\n    if (view.composing) {\n        return false;\n    }\n    const $from = view.state.doc.resolve(from);\n    if (\n    // check for code node\n    $from.parent.type.spec.code\n        // check for code mark\n        || !!((_a = ($from.nodeBefore || $from.nodeAfter)) === null || _a === void 0 ? void 0 : _a.marks.find(mark => mark.type.spec.code))) {\n        return false;\n    }\n    let matched = false;\n    const textBefore = getTextContentFromNodes($from) + text;\n    rules.forEach(rule => {\n        if (matched) {\n            return;\n        }\n        const match = inputRuleMatcherHandler(textBefore, rule.find);\n        if (!match) {\n            return;\n        }\n        const tr = view.state.tr;\n        const state = createChainableState({\n            state: view.state,\n            transaction: tr,\n        });\n        const range = {\n            from: from - (match[0].length - text.length),\n            to,\n        };\n        const { commands, chain, can } = new CommandManager({\n            editor,\n            state,\n        });\n        const handler = rule.handler({\n            state,\n            range,\n            match,\n            commands,\n            chain,\n            can,\n        });\n        // stop if there are no changes\n        if (handler === null || !tr.steps.length) {\n            return;\n        }\n        // store transform as meta data\n        // so we can undo input rules within the `undoInputRules` command\n        tr.setMeta(plugin, {\n            transform: tr,\n            from,\n            to,\n            text,\n        });\n        view.dispatch(tr);\n        matched = true;\n    });\n    return matched;\n}\n/**\n * Create an input rules plugin. When enabled, it will cause text\n * input that matches any of the given rules to trigger the rule’s\n * action.\n */\nfunction inputRulesPlugin(props) {\n    const { editor, rules } = props;\n    const plugin = new Plugin({\n        state: {\n            init() {\n                return null;\n            },\n            apply(tr, prev, state) {\n                const stored = tr.getMeta(plugin);\n                if (stored) {\n                    return stored;\n                }\n                // if InputRule is triggered by insertContent()\n                const simulatedInputMeta = tr.getMeta('applyInputRules');\n                const isSimulatedInput = !!simulatedInputMeta;\n                if (isSimulatedInput) {\n                    setTimeout(() => {\n                        let { text } = simulatedInputMeta;\n                        if (typeof text === 'string') {\n                            text = text;\n                        }\n                        else {\n                            text = getHTMLFromFragment(Fragment.from(text), state.schema);\n                        }\n                        const { from } = simulatedInputMeta;\n                        const to = from + text.length;\n                        run$1({\n                            editor,\n                            from,\n                            to,\n                            text,\n                            rules,\n                            plugin,\n                        });\n                    });\n                }\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            },\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run$1({\n                    editor,\n                    from,\n                    to,\n                    text,\n                    rules,\n                    plugin,\n                });\n            },\n            handleDOMEvents: {\n                compositionend: view => {\n                    setTimeout(() => {\n                        const { $cursor } = view.state.selection;\n                        if ($cursor) {\n                            run$1({\n                                editor,\n                                from: $cursor.pos,\n                                to: $cursor.pos,\n                                text: '',\n                                rules,\n                                plugin,\n                            });\n                        }\n                    });\n                    return false;\n                },\n            },\n            // add support for input rules to trigger on enter\n            // this is useful for example for code blocks\n            handleKeyDown(view, event) {\n                if (event.key !== 'Enter') {\n                    return false;\n                }\n                const { $cursor } = view.state.selection;\n                if ($cursor) {\n                    return run$1({\n                        editor,\n                        from: $cursor.pos,\n                        to: $cursor.pos,\n                        text: '\\n',\n                        rules,\n                        plugin,\n                    });\n                }\n                return false;\n            },\n        },\n        // @ts-ignore\n        isInputRules: true,\n    });\n    return plugin;\n}\n\n// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\nfunction getType(value) {\n    return Object.prototype.toString.call(value).slice(8, -1);\n}\nfunction isPlainObject(value) {\n    if (getType(value) !== 'Object') {\n        return false;\n    }\n    return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype;\n}\n\nfunction mergeDeep(target, source) {\n    const output = { ...target };\n    if (isPlainObject(target) && isPlainObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isPlainObject(source[key]) && isPlainObject(target[key])) {\n                output[key] = mergeDeep(target[key], source[key]);\n            }\n            else {\n                output[key] = source[key];\n            }\n        });\n    }\n    return output;\n}\n\n/**\n * The Mark class is used to create custom mark extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Mark {\n    constructor(config = {}) {\n        this.type = 'mark';\n        this.name = 'mark';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Mark(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Mark(extendedConfig);\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n    static handleExit({ editor, mark }) {\n        const { tr } = editor.state;\n        const currentPos = editor.state.selection.$from;\n        const isAtEnd = currentPos.pos === currentPos.end();\n        if (isAtEnd) {\n            const currentMarks = currentPos.marks();\n            const isInMark = !!currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\n            if (!isInMark) {\n                return false;\n            }\n            const removeMark = currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\n            if (removeMark) {\n                tr.removeStoredMark(removeMark);\n            }\n            tr.insertText(' ', currentPos.pos);\n            editor.view.dispatch(tr);\n            return true;\n        }\n        return false;\n    }\n}\n\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * Paste rules are used to react to pasted content.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nclass PasteRule {\n    constructor(config) {\n        this.find = config.find;\n        this.handler = config.handler;\n    }\n}\nconst pasteRuleMatcherHandler = (text, find, event) => {\n    if (isRegExp(find)) {\n        return [...text.matchAll(find)];\n    }\n    const matches = find(text, event);\n    if (!matches) {\n        return [];\n    }\n    return matches.map(pasteRuleMatch => {\n        const result = [pasteRuleMatch.text];\n        result.index = pasteRuleMatch.index;\n        result.input = text;\n        result.data = pasteRuleMatch.data;\n        if (pasteRuleMatch.replaceWith) {\n            if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\n                console.warn('[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".');\n            }\n            result.push(pasteRuleMatch.replaceWith);\n        }\n        return result;\n    });\n};\nfunction run(config) {\n    const { editor, state, from, to, rule, pasteEvent, dropEvent, } = config;\n    const { commands, chain, can } = new CommandManager({\n        editor,\n        state,\n    });\n    const handlers = [];\n    state.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isTextblock || node.type.spec.code) {\n            return;\n        }\n        const resolvedFrom = Math.max(from, pos);\n        const resolvedTo = Math.min(to, pos + node.content.size);\n        const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc');\n        const matches = pasteRuleMatcherHandler(textToMatch, rule.find, pasteEvent);\n        matches.forEach(match => {\n            if (match.index === undefined) {\n                return;\n            }\n            const start = resolvedFrom + match.index + 1;\n            const end = start + match[0].length;\n            const range = {\n                from: state.tr.mapping.map(start),\n                to: state.tr.mapping.map(end),\n            };\n            const handler = rule.handler({\n                state,\n                range,\n                match,\n                commands,\n                chain,\n                can,\n                pasteEvent,\n                dropEvent,\n            });\n            handlers.push(handler);\n        });\n    });\n    const success = handlers.every(handler => handler !== null);\n    return success;\n}\n// When dragging across editors, must get another editor instance to delete selection content.\nlet tiptapDragFromOtherEditor = null;\nconst createClipboardPasteEvent = (text) => {\n    var _a;\n    const event = new ClipboardEvent('paste', {\n        clipboardData: new DataTransfer(),\n    });\n    (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.setData('text/html', text);\n    return event;\n};\n/**\n * Create an paste rules plugin. When enabled, it will cause pasted\n * text that matches any of the given rules to trigger the rule’s\n * action.\n */\nfunction pasteRulesPlugin(props) {\n    const { editor, rules } = props;\n    let dragSourceElement = null;\n    let isPastedFromProseMirror = false;\n    let isDroppedFromProseMirror = false;\n    let pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null;\n    let dropEvent;\n    try {\n        dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null;\n    }\n    catch {\n        dropEvent = null;\n    }\n    const processEvent = ({ state, from, to, rule, pasteEvt, }) => {\n        const tr = state.tr;\n        const chainableState = createChainableState({\n            state,\n            transaction: tr,\n        });\n        const handler = run({\n            editor,\n            state: chainableState,\n            from: Math.max(from - 1, 0),\n            to: to.b - 1,\n            rule,\n            pasteEvent: pasteEvt,\n            dropEvent,\n        });\n        if (!handler || !tr.steps.length) {\n            return;\n        }\n        try {\n            dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null;\n        }\n        catch {\n            dropEvent = null;\n        }\n        pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null;\n        return tr;\n    };\n    const plugins = rules.map(rule => {\n        return new Plugin({\n            // we register a global drag handler to track the current drag source element\n            view(view) {\n                const handleDragstart = (event) => {\n                    var _a;\n                    dragSourceElement = ((_a = view.dom.parentElement) === null || _a === void 0 ? void 0 : _a.contains(event.target))\n                        ? view.dom.parentElement\n                        : null;\n                    if (dragSourceElement) {\n                        tiptapDragFromOtherEditor = editor;\n                    }\n                };\n                const handleDragend = () => {\n                    if (tiptapDragFromOtherEditor) {\n                        tiptapDragFromOtherEditor = null;\n                    }\n                };\n                window.addEventListener('dragstart', handleDragstart);\n                window.addEventListener('dragend', handleDragend);\n                return {\n                    destroy() {\n                        window.removeEventListener('dragstart', handleDragstart);\n                        window.removeEventListener('dragend', handleDragend);\n                    },\n                };\n            },\n            props: {\n                handleDOMEvents: {\n                    drop: (view, event) => {\n                        isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement;\n                        dropEvent = event;\n                        if (!isDroppedFromProseMirror) {\n                            const dragFromOtherEditor = tiptapDragFromOtherEditor;\n                            if (dragFromOtherEditor === null || dragFromOtherEditor === void 0 ? void 0 : dragFromOtherEditor.isEditable) {\n                                // setTimeout to avoid the wrong content after drop, timeout arg can't be empty or 0\n                                setTimeout(() => {\n                                    const selection = dragFromOtherEditor.state.selection;\n                                    if (selection) {\n                                        dragFromOtherEditor.commands.deleteRange({ from: selection.from, to: selection.to });\n                                    }\n                                }, 10);\n                            }\n                        }\n                        return false;\n                    },\n                    paste: (_view, event) => {\n                        var _a;\n                        const html = (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text/html');\n                        pasteEvent = event;\n                        isPastedFromProseMirror = !!(html === null || html === void 0 ? void 0 : html.includes('data-pm-slice'));\n                        return false;\n                    },\n                },\n            },\n            appendTransaction: (transactions, oldState, state) => {\n                const transaction = transactions[0];\n                const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror;\n                const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror;\n                // if PasteRule is triggered by insertContent()\n                const simulatedPasteMeta = transaction.getMeta('applyPasteRules');\n                const isSimulatedPaste = !!simulatedPasteMeta;\n                if (!isPaste && !isDrop && !isSimulatedPaste) {\n                    return;\n                }\n                // Handle simulated paste\n                if (isSimulatedPaste) {\n                    let { text } = simulatedPasteMeta;\n                    if (typeof text === 'string') {\n                        text = text;\n                    }\n                    else {\n                        text = getHTMLFromFragment(Fragment.from(text), state.schema);\n                    }\n                    const { from } = simulatedPasteMeta;\n                    const to = from + text.length;\n                    const pasteEvt = createClipboardPasteEvent(text);\n                    return processEvent({\n                        rule,\n                        state,\n                        from,\n                        to: { b: to },\n                        pasteEvt,\n                    });\n                }\n                // handle actual paste/drop\n                const from = oldState.doc.content.findDiffStart(state.doc.content);\n                const to = oldState.doc.content.findDiffEnd(state.doc.content);\n                // stop if there is no changed range\n                if (!isNumber(from) || !to || from === to.b) {\n                    return;\n                }\n                return processEvent({\n                    rule,\n                    state,\n                    from,\n                    to,\n                    pasteEvt: pasteEvent,\n                });\n            },\n        });\n    });\n    return plugins;\n}\n\nfunction findDuplicates(items) {\n    const filtered = items.filter((el, index) => items.indexOf(el) !== index);\n    return Array.from(new Set(filtered));\n}\n\nclass ExtensionManager {\n    constructor(extensions, editor) {\n        this.splittableMarks = [];\n        this.editor = editor;\n        this.extensions = ExtensionManager.resolve(extensions);\n        this.schema = getSchemaByResolvedExtensions(this.extensions, editor);\n        this.setupExtensions();\n    }\n    /**\n     * Returns a flattened and sorted extension list while\n     * also checking for duplicated extensions and warns the user.\n     * @param extensions An array of Tiptap extensions\n     * @returns An flattened and sorted array of Tiptap extensions\n     */\n    static resolve(extensions) {\n        const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions));\n        const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name));\n        if (duplicatedNames.length) {\n            console.warn(`[tiptap warn]: Duplicate extension names found: [${duplicatedNames\n                .map(item => `'${item}'`)\n                .join(', ')}]. This can lead to issues.`);\n        }\n        return resolvedExtensions;\n    }\n    /**\n     * Create a flattened array of extensions by traversing the `addExtensions` field.\n     * @param extensions An array of Tiptap extensions\n     * @returns A flattened array of Tiptap extensions\n     */\n    static flatten(extensions) {\n        return (extensions\n            .map(extension => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n            };\n            const addExtensions = getExtensionField(extension, 'addExtensions', context);\n            if (addExtensions) {\n                return [extension, ...this.flatten(addExtensions())];\n            }\n            return extension;\n        })\n            // `Infinity` will break TypeScript so we set a number that is probably high enough\n            .flat(10));\n    }\n    /**\n     * Sort extensions by priority.\n     * @param extensions An array of Tiptap extensions\n     * @returns A sorted array of Tiptap extensions by priority\n     */\n    static sort(extensions) {\n        const defaultPriority = 100;\n        return extensions.sort((a, b) => {\n            const priorityA = getExtensionField(a, 'priority') || defaultPriority;\n            const priorityB = getExtensionField(b, 'priority') || defaultPriority;\n            if (priorityA > priorityB) {\n                return -1;\n            }\n            if (priorityA < priorityB) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n    /**\n     * Get all commands from the extensions.\n     * @returns An object with all commands where the key is the command name and the value is the command function\n     */\n    get commands() {\n        return this.extensions.reduce((commands, extension) => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor: this.editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            const addCommands = getExtensionField(extension, 'addCommands', context);\n            if (!addCommands) {\n                return commands;\n            }\n            return {\n                ...commands,\n                ...addCommands(),\n            };\n        }, {});\n    }\n    /**\n     * Get all registered Prosemirror plugins from the extensions.\n     * @returns An array of Prosemirror plugins\n     */\n    get plugins() {\n        const { editor } = this;\n        // With ProseMirror, first plugins within an array are executed first.\n        // In Tiptap, we provide the ability to override plugins,\n        // so it feels more natural to run plugins at the end of an array first.\n        // That’s why we have to reverse the `extensions` array and sort again\n        // based on the `priority` option.\n        const extensions = ExtensionManager.sort([...this.extensions].reverse());\n        const inputRules = [];\n        const pasteRules = [];\n        const allPlugins = extensions\n            .map(extension => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            const plugins = [];\n            const addKeyboardShortcuts = getExtensionField(extension, 'addKeyboardShortcuts', context);\n            let defaultBindings = {};\n            // bind exit handling\n            if (extension.type === 'mark' && getExtensionField(extension, 'exitable', context)) {\n                defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension });\n            }\n            if (addKeyboardShortcuts) {\n                const bindings = Object.fromEntries(Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\n                    return [shortcut, () => method({ editor })];\n                }));\n                defaultBindings = { ...defaultBindings, ...bindings };\n            }\n            const keyMapPlugin = keymap(defaultBindings);\n            plugins.push(keyMapPlugin);\n            const addInputRules = getExtensionField(extension, 'addInputRules', context);\n            if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\n                inputRules.push(...addInputRules());\n            }\n            const addPasteRules = getExtensionField(extension, 'addPasteRules', context);\n            if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\n                pasteRules.push(...addPasteRules());\n            }\n            const addProseMirrorPlugins = getExtensionField(extension, 'addProseMirrorPlugins', context);\n            if (addProseMirrorPlugins) {\n                const proseMirrorPlugins = addProseMirrorPlugins();\n                plugins.push(...proseMirrorPlugins);\n            }\n            return plugins;\n        })\n            .flat();\n        return [\n            inputRulesPlugin({\n                editor,\n                rules: inputRules,\n            }),\n            ...pasteRulesPlugin({\n                editor,\n                rules: pasteRules,\n            }),\n            ...allPlugins,\n        ];\n    }\n    /**\n     * Get all attributes from the extensions.\n     * @returns An array of attributes\n     */\n    get attributes() {\n        return getAttributesFromExtensions(this.extensions);\n    }\n    /**\n     * Get all node views from the extensions.\n     * @returns An object with all node views where the key is the node name and the value is the node view function\n     */\n    get nodeViews() {\n        const { editor } = this;\n        const { nodeExtensions } = splitExtensions(this.extensions);\n        return Object.fromEntries(nodeExtensions\n            .filter(extension => !!getExtensionField(extension, 'addNodeView'))\n            .map(extension => {\n            const extensionAttributes = this.attributes.filter(attribute => attribute.type === extension.name);\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor,\n                type: getNodeType(extension.name, this.schema),\n            };\n            const addNodeView = getExtensionField(extension, 'addNodeView', context);\n            if (!addNodeView) {\n                return [];\n            }\n            const nodeview = (node, view, getPos, decorations, innerDecorations) => {\n                const HTMLAttributes = getRenderedAttributes(node, extensionAttributes);\n                return addNodeView()({\n                    // pass-through\n                    node,\n                    view,\n                    getPos: getPos,\n                    decorations,\n                    innerDecorations,\n                    // tiptap-specific\n                    editor,\n                    extension,\n                    HTMLAttributes,\n                });\n            };\n            return [extension.name, nodeview];\n        }));\n    }\n    /**\n     * Go through all extensions, create extension storages & setup marks\n     * & bind editor event listener.\n     */\n    setupExtensions() {\n        this.extensions.forEach(extension => {\n            var _a;\n            // store extension storage in editor\n            this.editor.extensionStorage[extension.name] = extension.storage;\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor: this.editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            if (extension.type === 'mark') {\n                const keepOnSplit = (_a = callOrReturn(getExtensionField(extension, 'keepOnSplit', context))) !== null && _a !== void 0 ? _a : true;\n                if (keepOnSplit) {\n                    this.splittableMarks.push(extension.name);\n                }\n            }\n            const onBeforeCreate = getExtensionField(extension, 'onBeforeCreate', context);\n            const onCreate = getExtensionField(extension, 'onCreate', context);\n            const onUpdate = getExtensionField(extension, 'onUpdate', context);\n            const onSelectionUpdate = getExtensionField(extension, 'onSelectionUpdate', context);\n            const onTransaction = getExtensionField(extension, 'onTransaction', context);\n            const onFocus = getExtensionField(extension, 'onFocus', context);\n            const onBlur = getExtensionField(extension, 'onBlur', context);\n            const onDestroy = getExtensionField(extension, 'onDestroy', context);\n            if (onBeforeCreate) {\n                this.editor.on('beforeCreate', onBeforeCreate);\n            }\n            if (onCreate) {\n                this.editor.on('create', onCreate);\n            }\n            if (onUpdate) {\n                this.editor.on('update', onUpdate);\n            }\n            if (onSelectionUpdate) {\n                this.editor.on('selectionUpdate', onSelectionUpdate);\n            }\n            if (onTransaction) {\n                this.editor.on('transaction', onTransaction);\n            }\n            if (onFocus) {\n                this.editor.on('focus', onFocus);\n            }\n            if (onBlur) {\n                this.editor.on('blur', onBlur);\n            }\n            if (onDestroy) {\n                this.editor.on('destroy', onDestroy);\n            }\n        });\n    }\n}\n\n/**\n * The Extension class is the base class for all extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Extension {\n    constructor(config = {}) {\n        this.type = 'extension';\n        this.name = 'extension';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Extension(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Extension({ ...this.config, ...extendedConfig });\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n}\n\n/**\n * Gets the text between two positions in a Prosemirror node\n * and serializes it using the given text serializers and block separator (see getText)\n * @param startNode The Prosemirror node to start from\n * @param range The range of the text to get\n * @param options Options for the text serializer & block separator\n * @returns The text between the two positions\n */\nfunction getTextBetween(startNode, range, options) {\n    const { from, to } = range;\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n    let text = '';\n    startNode.nodesBetween(from, to, (node, pos, parent, index) => {\n        var _a;\n        if (node.isBlock && pos > from) {\n            text += blockSeparator;\n        }\n        const textSerializer = textSerializers === null || textSerializers === void 0 ? void 0 : textSerializers[node.type.name];\n        if (textSerializer) {\n            if (parent) {\n                text += textSerializer({\n                    node,\n                    pos,\n                    parent,\n                    index,\n                    range,\n                });\n            }\n            // do not descend into child nodes when there exists a serializer\n            return false;\n        }\n        if (node.isText) {\n            text += (_a = node === null || node === void 0 ? void 0 : node.text) === null || _a === void 0 ? void 0 : _a.slice(Math.max(from, pos) - pos, to - pos); // eslint-disable-line\n        }\n    });\n    return text;\n}\n\n/**\n * Find text serializers `toText` in a Prosemirror schema\n * @param schema The Prosemirror schema to search in\n * @returns A record of text serializers by node name\n */\nfunction getTextSerializersFromSchema(schema) {\n    return Object.fromEntries(Object.entries(schema.nodes)\n        .filter(([, node]) => node.spec.toText)\n        .map(([name, node]) => [name, node.spec.toText]));\n}\n\nconst ClipboardTextSerializer = Extension.create({\n    name: 'clipboardTextSerializer',\n    addOptions() {\n        return {\n            blockSeparator: undefined,\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('clipboardTextSerializer'),\n                props: {\n                    clipboardTextSerializer: () => {\n                        const { editor } = this;\n                        const { state, schema } = editor;\n                        const { doc, selection } = state;\n                        const { ranges } = selection;\n                        const from = Math.min(...ranges.map(range => range.$from.pos));\n                        const to = Math.max(...ranges.map(range => range.$to.pos));\n                        const textSerializers = getTextSerializersFromSchema(schema);\n                        const range = { from, to };\n                        return getTextBetween(doc, range, {\n                            ...(this.options.blockSeparator !== undefined\n                                ? { blockSeparator: this.options.blockSeparator }\n                                : {}),\n                            textSerializers,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst blur = () => ({ editor, view }) => {\n    requestAnimationFrame(() => {\n        var _a;\n        if (!editor.isDestroyed) {\n            view.dom.blur();\n            // Browsers should remove the caret on blur but safari does not.\n            // See: https://github.com/ueberdosis/tiptap/issues/2405\n            (_a = window === null || window === void 0 ? void 0 : window.getSelection()) === null || _a === void 0 ? void 0 : _a.removeAllRanges();\n        }\n    });\n    return true;\n};\n\nconst clearContent = (emitUpdate = false) => ({ commands }) => {\n    return commands.setContent('', emitUpdate);\n};\n\nconst clearNodes = () => ({ state, tr, dispatch }) => {\n    const { selection } = tr;\n    const { ranges } = selection;\n    if (!dispatch) {\n        return true;\n    }\n    ranges.forEach(({ $from, $to }) => {\n        state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.type.isText) {\n                return;\n            }\n            const { doc, mapping } = tr;\n            const $mappedFrom = doc.resolve(mapping.map(pos));\n            const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize));\n            const nodeRange = $mappedFrom.blockRange($mappedTo);\n            if (!nodeRange) {\n                return;\n            }\n            const targetLiftDepth = liftTarget(nodeRange);\n            if (node.type.isTextblock) {\n                const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index());\n                tr.setNodeMarkup(nodeRange.start, defaultType);\n            }\n            if (targetLiftDepth || targetLiftDepth === 0) {\n                tr.lift(nodeRange, targetLiftDepth);\n            }\n        });\n    });\n    return true;\n};\n\nconst command = fn => props => {\n    return fn(props);\n};\n\nconst createParagraphNear = () => ({ state, dispatch }) => {\n    return createParagraphNear$1(state, dispatch);\n};\n\nconst cut = (originRange, targetPos) => ({ editor, tr }) => {\n    const { state } = editor;\n    const contentSlice = state.doc.slice(originRange.from, originRange.to);\n    tr.deleteRange(originRange.from, originRange.to);\n    const newPos = tr.mapping.map(targetPos);\n    tr.insert(newPos, contentSlice.content);\n    tr.setSelection(new TextSelection(tr.doc.resolve(Math.max(newPos - 1, 0))));\n    return true;\n};\n\nconst deleteCurrentNode = () => ({ tr, dispatch }) => {\n    const { selection } = tr;\n    const currentNode = selection.$anchor.node();\n    // if there is content inside the current node, break out of this command\n    if (currentNode.content.size > 0) {\n        return false;\n    }\n    const $pos = tr.selection.$anchor;\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n        const node = $pos.node(depth);\n        if (node.type === currentNode.type) {\n            if (dispatch) {\n                const from = $pos.before(depth);\n                const to = $pos.after(depth);\n                tr.delete(from, to).scrollIntoView();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst deleteNode = typeOrName => ({ tr, state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const $pos = tr.selection.$anchor;\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n        const node = $pos.node(depth);\n        if (node.type === type) {\n            if (dispatch) {\n                const from = $pos.before(depth);\n                const to = $pos.after(depth);\n                tr.delete(from, to).scrollIntoView();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst deleteRange = range => ({ tr, dispatch }) => {\n    const { from, to } = range;\n    if (dispatch) {\n        tr.delete(from, to);\n    }\n    return true;\n};\n\nconst deleteSelection = () => ({ state, dispatch }) => {\n    return deleteSelection$1(state, dispatch);\n};\n\nconst enter = () => ({ commands }) => {\n    return commands.keyboardShortcut('Enter');\n};\n\nconst exitCode = () => ({ state, dispatch }) => {\n    return exitCode$1(state, dispatch);\n};\n\n/**\n * Check if object1 includes object2\n * @param object1 Object\n * @param object2 Object\n */\nfunction objectIncludes(object1, object2, options = { strict: true }) {\n    const keys = Object.keys(object2);\n    if (!keys.length) {\n        return true;\n    }\n    return keys.every(key => {\n        if (options.strict) {\n            return object2[key] === object1[key];\n        }\n        if (isRegExp(object2[key])) {\n            return object2[key].test(object1[key]);\n        }\n        return object2[key] === object1[key];\n    });\n}\n\nfunction findMarkInSet(marks, type, attributes = {}) {\n    return marks.find(item => {\n        return (item.type === type\n            && objectIncludes(\n            // Only check equality for the attributes that are provided\n            Object.fromEntries(Object.keys(attributes).map(k => [k, item.attrs[k]])), attributes));\n    });\n}\nfunction isMarkInSet(marks, type, attributes = {}) {\n    return !!findMarkInSet(marks, type, attributes);\n}\n/**\n * Get the range of a mark at a resolved position.\n */\nfunction getMarkRange(\n/**\n * The position to get the mark range for.\n */\n$pos, \n/**\n * The mark type to get the range for.\n */\ntype, \n/**\n * The attributes to match against.\n * If not provided, only the first mark at the position will be matched.\n */\nattributes) {\n    var _a;\n    if (!$pos || !type) {\n        return;\n    }\n    let start = $pos.parent.childAfter($pos.parentOffset);\n    // If the cursor is at the start of a text node that does not have the mark, look backward\n    if (!start.node || !start.node.marks.some(mark => mark.type === type)) {\n        start = $pos.parent.childBefore($pos.parentOffset);\n    }\n    // If there is no text node with the mark even backward, return undefined\n    if (!start.node || !start.node.marks.some(mark => mark.type === type)) {\n        return;\n    }\n    // Default to only matching against the first mark's attributes\n    attributes = attributes || ((_a = start.node.marks[0]) === null || _a === void 0 ? void 0 : _a.attrs);\n    // We now know that the cursor is either at the start, middle or end of a text node with the specified mark\n    // so we can look it up on the targeted mark\n    const mark = findMarkInSet([...start.node.marks], type, attributes);\n    if (!mark) {\n        return;\n    }\n    let startIndex = start.index;\n    let startPos = $pos.start() + start.offset;\n    let endIndex = startIndex + 1;\n    let endPos = startPos + start.node.nodeSize;\n    while (startIndex > 0\n        && isMarkInSet([...$pos.parent.child(startIndex - 1).marks], type, attributes)) {\n        startIndex -= 1;\n        startPos -= $pos.parent.child(startIndex).nodeSize;\n    }\n    while (endIndex < $pos.parent.childCount\n        && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)) {\n        endPos += $pos.parent.child(endIndex).nodeSize;\n        endIndex += 1;\n    }\n    return {\n        from: startPos,\n        to: endPos,\n    };\n}\n\nfunction getMarkType(nameOrType, schema) {\n    if (typeof nameOrType === 'string') {\n        if (!schema.marks[nameOrType]) {\n            throw Error(`There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`);\n        }\n        return schema.marks[nameOrType];\n    }\n    return nameOrType;\n}\n\nconst extendMarkRange = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    const type = getMarkType(typeOrName, state.schema);\n    const { doc, selection } = tr;\n    const { $from, from, to } = selection;\n    if (dispatch) {\n        const range = getMarkRange($from, type, attributes);\n        if (range && range.from <= from && range.to >= to) {\n            const newSelection = TextSelection.create(doc, range.from, range.to);\n            tr.setSelection(newSelection);\n        }\n    }\n    return true;\n};\n\nconst first = commands => props => {\n    const items = typeof commands === 'function'\n        ? commands(props)\n        : commands;\n    for (let i = 0; i < items.length; i += 1) {\n        if (items[i](props)) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction isTextSelection(value) {\n    return value instanceof TextSelection;\n}\n\nfunction minMax(value = 0, min = 0, max = 0) {\n    return Math.min(Math.max(value, min), max);\n}\n\nfunction resolveFocusPosition(doc, position = null) {\n    if (!position) {\n        return null;\n    }\n    const selectionAtStart = Selection.atStart(doc);\n    const selectionAtEnd = Selection.atEnd(doc);\n    if (position === 'start' || position === true) {\n        return selectionAtStart;\n    }\n    if (position === 'end') {\n        return selectionAtEnd;\n    }\n    const minPos = selectionAtStart.from;\n    const maxPos = selectionAtEnd.to;\n    if (position === 'all') {\n        return TextSelection.create(doc, minMax(0, minPos, maxPos), minMax(doc.content.size, minPos, maxPos));\n    }\n    return TextSelection.create(doc, minMax(position, minPos, maxPos), minMax(position, minPos, maxPos));\n}\n\nfunction isAndroid() {\n    return navigator.platform === 'Android' || /android/i.test(navigator.userAgent);\n}\n\nfunction isiOS() {\n    return [\n        'iPad Simulator',\n        'iPhone Simulator',\n        'iPod Simulator',\n        'iPad',\n        'iPhone',\n        'iPod',\n    ].includes(navigator.platform)\n        // iPad on iOS 13 detection\n        || (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\n}\n\nconst focus = (position = null, options = {}) => ({ editor, view, tr, dispatch, }) => {\n    options = {\n        scrollIntoView: true,\n        ...options,\n    };\n    const delayedFocus = () => {\n        // focus within `requestAnimationFrame` breaks focus on iOS and Android\n        // so we have to call this\n        if (isiOS() || isAndroid()) {\n            view.dom.focus();\n        }\n        // For React we have to focus asynchronously. Otherwise wild things happen.\n        // see: https://github.com/ueberdosis/tiptap/issues/1520\n        requestAnimationFrame(() => {\n            if (!editor.isDestroyed) {\n                view.focus();\n                if (options === null || options === void 0 ? void 0 : options.scrollIntoView) {\n                    editor.commands.scrollIntoView();\n                }\n            }\n        });\n    };\n    if ((view.hasFocus() && position === null) || position === false) {\n        return true;\n    }\n    // we don’t try to resolve a NodeSelection or CellSelection\n    if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\n        delayedFocus();\n        return true;\n    }\n    // pass through tr.doc instead of editor.state.doc\n    // since transactions could change the editors state before this command has been run\n    const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection;\n    const isSameSelection = editor.state.selection.eq(selection);\n    if (dispatch) {\n        if (!isSameSelection) {\n            tr.setSelection(selection);\n        }\n        // `tr.setSelection` resets the stored marks\n        // so we’ll restore them if the selection is the same as before\n        if (isSameSelection && tr.storedMarks) {\n            tr.setStoredMarks(tr.storedMarks);\n        }\n        delayedFocus();\n    }\n    return true;\n};\n\nconst forEach = (items, fn) => props => {\n    return items.every((item, index) => fn(item, { ...props, index }));\n};\n\nconst insertContent = (value, options) => ({ tr, commands }) => {\n    return commands.insertContentAt({ from: tr.selection.from, to: tr.selection.to }, value, options);\n};\n\nconst removeWhitespaces = (node) => {\n    const children = node.childNodes;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n        const child = children[i];\n        if (child.nodeType === 3 && child.nodeValue && /^(\\n\\s\\s|\\n)$/.test(child.nodeValue)) {\n            node.removeChild(child);\n        }\n        else if (child.nodeType === 1) {\n            removeWhitespaces(child);\n        }\n    }\n    return node;\n};\nfunction elementFromString(value) {\n    // add a wrapper to preserve leading and trailing whitespace\n    const wrappedValue = `<body>${value}</body>`;\n    const html = new window.DOMParser().parseFromString(wrappedValue, 'text/html').body;\n    return removeWhitespaces(html);\n}\n\n/**\n * Takes a JSON or HTML content and creates a Prosemirror node or fragment from it.\n * @param content The JSON or HTML content to create the node from\n * @param schema The Prosemirror schema to use for the node\n * @param options Options for the parser\n * @returns The created Prosemirror node or fragment\n */\nfunction createNodeFromContent(content, schema, options) {\n    if (content instanceof Node$1 || content instanceof Fragment) {\n        return content;\n    }\n    options = {\n        slice: true,\n        parseOptions: {},\n        ...options,\n    };\n    const isJSONContent = typeof content === 'object' && content !== null;\n    const isTextContent = typeof content === 'string';\n    if (isJSONContent) {\n        try {\n            const isArrayContent = Array.isArray(content) && content.length > 0;\n            // if the JSON Content is an array of nodes, create a fragment for each node\n            if (isArrayContent) {\n                return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)));\n            }\n            const node = schema.nodeFromJSON(content);\n            if (options.errorOnInvalidContent) {\n                node.check();\n            }\n            return node;\n        }\n        catch (error) {\n            if (options.errorOnInvalidContent) {\n                throw new Error('[tiptap error]: Invalid JSON content', { cause: error });\n            }\n            console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error);\n            return createNodeFromContent('', schema, options);\n        }\n    }\n    if (isTextContent) {\n        // Check for invalid content\n        if (options.errorOnInvalidContent) {\n            let hasInvalidContent = false;\n            let invalidContent = '';\n            // A copy of the current schema with a catch-all node at the end\n            const contentCheckSchema = new Schema({\n                topNode: schema.spec.topNode,\n                marks: schema.spec.marks,\n                // Prosemirror's schemas are executed such that: the last to execute, matches last\n                // This means that we can add a catch-all node at the end of the schema to catch any content that we don't know how to handle\n                nodes: schema.spec.nodes.append({\n                    __tiptap__private__unknown__catch__all__node: {\n                        content: 'inline*',\n                        group: 'block',\n                        parseDOM: [\n                            {\n                                tag: '*',\n                                getAttrs: e => {\n                                    // If this is ever called, we know that the content has something that we don't know how to handle in the schema\n                                    hasInvalidContent = true;\n                                    // Try to stringify the element for a more helpful error message\n                                    invalidContent = typeof e === 'string' ? e : e.outerHTML;\n                                    return null;\n                                },\n                            },\n                        ],\n                    },\n                }),\n            });\n            if (options.slice) {\n                DOMParser.fromSchema(contentCheckSchema).parseSlice(elementFromString(content), options.parseOptions);\n            }\n            else {\n                DOMParser.fromSchema(contentCheckSchema).parse(elementFromString(content), options.parseOptions);\n            }\n            if (options.errorOnInvalidContent && hasInvalidContent) {\n                throw new Error('[tiptap error]: Invalid HTML content', { cause: new Error(`Invalid element found: ${invalidContent}`) });\n            }\n        }\n        const parser = DOMParser.fromSchema(schema);\n        if (options.slice) {\n            return parser.parseSlice(elementFromString(content), options.parseOptions).content;\n        }\n        return parser.parse(elementFromString(content), options.parseOptions);\n    }\n    return createNodeFromContent('', schema, options);\n}\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    const last = tr.steps.length - 1;\n    if (last < startLen) {\n        return;\n    }\n    const step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n        return;\n    }\n    const map = tr.mapping.maps[last];\n    let end = 0;\n    map.forEach((_from, _to, _newFrom, newTo) => {\n        if (end === 0) {\n            end = newTo;\n        }\n    });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst isFragment = (nodeOrFragment) => {\n    return !('type' in nodeOrFragment);\n};\nconst insertContentAt = (position, value, options) => ({ tr, dispatch, editor }) => {\n    var _a;\n    if (dispatch) {\n        options = {\n            parseOptions: editor.options.parseOptions,\n            updateSelection: true,\n            applyInputRules: false,\n            applyPasteRules: false,\n            ...options,\n        };\n        let content;\n        const emitContentError = (error) => {\n            editor.emit('contentError', {\n                editor,\n                error,\n                disableCollaboration: () => {\n                    if (editor.storage.collaboration) {\n                        editor.storage.collaboration.isDisabled = true;\n                    }\n                },\n            });\n        };\n        const parseOptions = {\n            preserveWhitespace: 'full',\n            ...options.parseOptions,\n        };\n        // If `emitContentError` is enabled, we want to check the content for errors\n        // but ignore them (do not remove the invalid content from the document)\n        if (!options.errorOnInvalidContent && !editor.options.enableContentCheck && editor.options.emitContentError) {\n            try {\n                createNodeFromContent(value, editor.schema, {\n                    parseOptions,\n                    errorOnInvalidContent: true,\n                });\n            }\n            catch (e) {\n                emitContentError(e);\n            }\n        }\n        try {\n            content = createNodeFromContent(value, editor.schema, {\n                parseOptions,\n                errorOnInvalidContent: (_a = options.errorOnInvalidContent) !== null && _a !== void 0 ? _a : editor.options.enableContentCheck,\n            });\n        }\n        catch (e) {\n            emitContentError(e);\n            return false;\n        }\n        let { from, to } = typeof position === 'number' ? { from: position, to: position } : { from: position.from, to: position.to };\n        let isOnlyTextContent = true;\n        let isOnlyBlockContent = true;\n        const nodes = isFragment(content) ? content : [content];\n        nodes.forEach(node => {\n            // check if added node is valid\n            node.check();\n            isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false;\n            isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false;\n        });\n        // check if we can replace the wrapping node by\n        // the newly inserted content\n        // example:\n        // replace an empty paragraph by an inserted image\n        // instead of inserting the image below the paragraph\n        if (from === to && isOnlyBlockContent) {\n            const { parent } = tr.doc.resolve(from);\n            const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount;\n            if (isEmptyTextBlock) {\n                from -= 1;\n                to += 1;\n            }\n        }\n        let newContent;\n        // if there is only plain text we have to use `insertText`\n        // because this will keep the current marks\n        if (isOnlyTextContent) {\n            // if value is string, we can use it directly\n            // otherwise if it is an array, we have to join it\n            if (Array.isArray(value)) {\n                newContent = value.map(v => v.text || '').join('');\n            }\n            else if (value instanceof Fragment) {\n                let text = '';\n                value.forEach(node => {\n                    if (node.text) {\n                        text += node.text;\n                    }\n                });\n                newContent = text;\n            }\n            else if (typeof value === 'object' && !!value && !!value.text) {\n                newContent = value.text;\n            }\n            else {\n                newContent = value;\n            }\n            tr.insertText(newContent, from, to);\n        }\n        else {\n            newContent = content;\n            tr.replaceWith(from, to, newContent);\n        }\n        // set cursor at end of inserted content\n        if (options.updateSelection) {\n            selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\n        }\n        if (options.applyInputRules) {\n            tr.setMeta('applyInputRules', { from, text: newContent });\n        }\n        if (options.applyPasteRules) {\n            tr.setMeta('applyPasteRules', { from, text: newContent });\n        }\n    }\n    return true;\n};\n\nconst joinUp = () => ({ state, dispatch }) => {\n    return joinUp$1(state, dispatch);\n};\nconst joinDown = () => ({ state, dispatch }) => {\n    return joinDown$1(state, dispatch);\n};\nconst joinBackward = () => ({ state, dispatch }) => {\n    return joinBackward$1(state, dispatch);\n};\nconst joinForward = () => ({ state, dispatch }) => {\n    return joinForward$1(state, dispatch);\n};\n\nconst joinItemBackward = () => ({ state, dispatch, tr, }) => {\n    try {\n        const point = joinPoint(state.doc, state.selection.$from.pos, -1);\n        if (point === null || point === undefined) {\n            return false;\n        }\n        tr.join(point, 2);\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n\nconst joinItemForward = () => ({ state, dispatch, tr, }) => {\n    try {\n        const point = joinPoint(state.doc, state.selection.$from.pos, +1);\n        if (point === null || point === undefined) {\n            return false;\n        }\n        tr.join(point, 2);\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n\nconst joinTextblockBackward = () => ({ state, dispatch }) => {\n    return joinTextblockBackward$1(state, dispatch);\n};\n\nconst joinTextblockForward = () => ({ state, dispatch }) => {\n    return joinTextblockForward$1(state, dispatch);\n};\n\nfunction isMacOS() {\n    return typeof navigator !== 'undefined'\n        ? /Mac/.test(navigator.platform)\n        : false;\n}\n\nfunction normalizeKeyName(name) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result === 'Space') {\n        result = ' ';\n    }\n    let alt;\n    let ctrl;\n    let shift;\n    let meta;\n    for (let i = 0; i < parts.length - 1; i += 1) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod)) {\n            meta = true;\n        }\n        else if (/^a(lt)?$/i.test(mod)) {\n            alt = true;\n        }\n        else if (/^(c|ctrl|control)$/i.test(mod)) {\n            ctrl = true;\n        }\n        else if (/^s(hift)?$/i.test(mod)) {\n            shift = true;\n        }\n        else if (/^mod$/i.test(mod)) {\n            if (isiOS() || isMacOS()) {\n                meta = true;\n            }\n            else {\n                ctrl = true;\n            }\n        }\n        else {\n            throw new Error(`Unrecognized modifier name: ${mod}`);\n        }\n    }\n    if (alt) {\n        result = `Alt-${result}`;\n    }\n    if (ctrl) {\n        result = `Ctrl-${result}`;\n    }\n    if (meta) {\n        result = `Meta-${result}`;\n    }\n    if (shift) {\n        result = `Shift-${result}`;\n    }\n    return result;\n}\nconst keyboardShortcut = name => ({ editor, view, tr, dispatch, }) => {\n    const keys = normalizeKeyName(name).split(/-(?!$)/);\n    const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item));\n    const event = new KeyboardEvent('keydown', {\n        key: key === 'Space'\n            ? ' '\n            : key,\n        altKey: keys.includes('Alt'),\n        ctrlKey: keys.includes('Ctrl'),\n        metaKey: keys.includes('Meta'),\n        shiftKey: keys.includes('Shift'),\n        bubbles: true,\n        cancelable: true,\n    });\n    const capturedTransaction = editor.captureTransaction(() => {\n        view.someProp('handleKeyDown', f => f(view, event));\n    });\n    capturedTransaction === null || capturedTransaction === void 0 ? void 0 : capturedTransaction.steps.forEach(step => {\n        const newStep = step.map(tr.mapping);\n        if (newStep && dispatch) {\n            tr.maybeStep(newStep);\n        }\n    });\n    return true;\n};\n\nfunction isNodeActive(state, typeOrName, attributes = {}) {\n    const { from, to, empty } = state.selection;\n    const type = typeOrName ? getNodeType(typeOrName, state.schema) : null;\n    const nodeRanges = [];\n    state.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isText) {\n            return;\n        }\n        const relativeFrom = Math.max(from, pos);\n        const relativeTo = Math.min(to, pos + node.nodeSize);\n        nodeRanges.push({\n            node,\n            from: relativeFrom,\n            to: relativeTo,\n        });\n    });\n    const selectionRange = to - from;\n    const matchedNodeRanges = nodeRanges\n        .filter(nodeRange => {\n        if (!type) {\n            return true;\n        }\n        return type.name === nodeRange.node.type.name;\n    })\n        .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }));\n    if (empty) {\n        return !!matchedNodeRanges.length;\n    }\n    const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0);\n    return range >= selectionRange;\n}\n\nconst lift = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    if (!isActive) {\n        return false;\n    }\n    return lift$1(state, dispatch);\n};\n\nconst liftEmptyBlock = () => ({ state, dispatch }) => {\n    return liftEmptyBlock$1(state, dispatch);\n};\n\nconst liftListItem = typeOrName => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return liftListItem$1(type)(state, dispatch);\n};\n\nconst newlineInCode = () => ({ state, dispatch }) => {\n    return newlineInCode$1(state, dispatch);\n};\n\n/**\n * Get the type of a schema item by its name.\n * @param name The name of the schema item\n * @param schema The Prosemiror schema to search in\n * @returns The type of the schema item (`node` or `mark`), or null if it doesn't exist\n */\nfunction getSchemaTypeNameByName(name, schema) {\n    if (schema.nodes[name]) {\n        return 'node';\n    }\n    if (schema.marks[name]) {\n        return 'mark';\n    }\n    return null;\n}\n\n/**\n * Remove a property or an array of properties from an object\n * @param obj Object\n * @param key Key to remove\n */\nfunction deleteProps(obj, propOrProps) {\n    const props = typeof propOrProps === 'string'\n        ? [propOrProps]\n        : propOrProps;\n    return Object\n        .keys(obj)\n        .reduce((newObj, prop) => {\n        if (!props.includes(prop)) {\n            newObj[prop] = obj[prop];\n        }\n        return newObj;\n    }, {});\n}\n\nconst resetAttributes = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\n    let nodeType = null;\n    let markType = null;\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (!schemaType) {\n        return false;\n    }\n    if (schemaType === 'node') {\n        nodeType = getNodeType(typeOrName, state.schema);\n    }\n    if (schemaType === 'mark') {\n        markType = getMarkType(typeOrName, state.schema);\n    }\n    if (dispatch) {\n        tr.selection.ranges.forEach(range => {\n            state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\n                if (nodeType && nodeType === node.type) {\n                    tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes));\n                }\n                if (markType && node.marks.length) {\n                    node.marks.forEach(mark => {\n                        if (markType === mark.type) {\n                            tr.addMark(pos, pos + node.nodeSize, markType.create(deleteProps(mark.attrs, attributes)));\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return true;\n};\n\nconst scrollIntoView = () => ({ tr, dispatch }) => {\n    if (dispatch) {\n        tr.scrollIntoView();\n    }\n    return true;\n};\n\nconst selectAll = () => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const selection = new AllSelection(tr.doc);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst selectNodeBackward = () => ({ state, dispatch }) => {\n    return selectNodeBackward$1(state, dispatch);\n};\n\nconst selectNodeForward = () => ({ state, dispatch }) => {\n    return selectNodeForward$1(state, dispatch);\n};\n\nconst selectParentNode = () => ({ state, dispatch }) => {\n    return selectParentNode$1(state, dispatch);\n};\n\n// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nconst selectTextblockEnd = () => ({ state, dispatch }) => {\n    return selectTextblockEnd$1(state, dispatch);\n};\n\n// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nconst selectTextblockStart = () => ({ state, dispatch }) => {\n    return selectTextblockStart$1(state, dispatch);\n};\n\n/**\n * Create a new Prosemirror document node from content.\n * @param content The JSON or HTML content to create the document from\n * @param schema The Prosemirror schema to use for the document\n * @param parseOptions Options for the parser\n * @returns The created Prosemirror document node\n */\nfunction createDocument(content, schema, parseOptions = {}, options = {}) {\n    return createNodeFromContent(content, schema, {\n        slice: false,\n        parseOptions,\n        errorOnInvalidContent: options.errorOnInvalidContent,\n    });\n}\n\nconst setContent = (content, emitUpdate = false, parseOptions = {}, options = {}) => ({ editor, tr, dispatch, commands, }) => {\n    var _a, _b;\n    const { doc } = tr;\n    // This is to keep backward compatibility with the previous behavior\n    // TODO remove this in the next major version\n    if (parseOptions.preserveWhitespace !== 'full') {\n        const document = createDocument(content, editor.schema, parseOptions, {\n            errorOnInvalidContent: (_a = options.errorOnInvalidContent) !== null && _a !== void 0 ? _a : editor.options.enableContentCheck,\n        });\n        if (dispatch) {\n            tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate);\n        }\n        return true;\n    }\n    if (dispatch) {\n        tr.setMeta('preventUpdate', !emitUpdate);\n    }\n    return commands.insertContentAt({ from: 0, to: doc.content.size }, content, {\n        parseOptions,\n        errorOnInvalidContent: (_b = options.errorOnInvalidContent) !== null && _b !== void 0 ? _b : editor.options.enableContentCheck,\n    });\n};\n\nfunction getMarkAttributes(state, typeOrName) {\n    const type = getMarkType(typeOrName, state.schema);\n    const { from, to, empty } = state.selection;\n    const marks = [];\n    if (empty) {\n        if (state.storedMarks) {\n            marks.push(...state.storedMarks);\n        }\n        marks.push(...state.selection.$head.marks());\n    }\n    else {\n        state.doc.nodesBetween(from, to, node => {\n            marks.push(...node.marks);\n        });\n    }\n    const mark = marks.find(markItem => markItem.type.name === type.name);\n    if (!mark) {\n        return {};\n    }\n    return { ...mark.attrs };\n}\n\n/**\n * Returns a new `Transform` based on all steps of the passed transactions.\n * @param oldDoc The Prosemirror node to start from\n * @param transactions The transactions to combine\n * @returns A new `Transform` with all steps of the passed transactions\n */\nfunction combineTransactionSteps(oldDoc, transactions) {\n    const transform = new Transform(oldDoc);\n    transactions.forEach(transaction => {\n        transaction.steps.forEach(step => {\n            transform.step(step);\n        });\n    });\n    return transform;\n}\n\n/**\n * Gets the default block type at a given match\n * @param match The content match to get the default block type from\n * @returns The default block type or null\n */\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i += 1) {\n        const { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs()) {\n            return type;\n        }\n    }\n    return null;\n}\n\n/**\n * Find children inside a Prosemirror node that match a predicate.\n * @param node The Prosemirror node to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nfunction findChildren(node, predicate) {\n    const nodesWithPos = [];\n    node.descendants((child, pos) => {\n        if (predicate(child)) {\n            nodesWithPos.push({\n                node: child,\n                pos,\n            });\n        }\n    });\n    return nodesWithPos;\n}\n\n/**\n * Same as `findChildren` but searches only within a `range`.\n * @param node The Prosemirror node to search in\n * @param range The range to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nfunction findChildrenInRange(node, range, predicate) {\n    const nodesWithPos = [];\n    // if (range.from === range.to) {\n    //   const nodeAt = node.nodeAt(range.from)\n    //   if (nodeAt) {\n    //     nodesWithPos.push({\n    //       node: nodeAt,\n    //       pos: range.from,\n    //     })\n    //   }\n    // }\n    node.nodesBetween(range.from, range.to, (child, pos) => {\n        if (predicate(child)) {\n            nodesWithPos.push({\n                node: child,\n                pos,\n            });\n        }\n    });\n    return nodesWithPos;\n}\n\n/**\n * Finds the closest parent node to a resolved position that matches a predicate.\n * @param $pos The resolved position to search from\n * @param predicate The predicate to match\n * @returns The closest parent node to the resolved position that matches the predicate\n * @example ```js\n * findParentNodeClosestToPos($from, node => node.type.name === 'paragraph')\n * ```\n */\nfunction findParentNodeClosestToPos($pos, predicate) {\n    for (let i = $pos.depth; i > 0; i -= 1) {\n        const node = $pos.node(i);\n        if (predicate(node)) {\n            return {\n                pos: i > 0 ? $pos.before(i) : 0,\n                start: $pos.start(i),\n                depth: i,\n                node,\n            };\n        }\n    }\n}\n\n/**\n * Finds the closest parent node to the current selection that matches a predicate.\n * @param predicate The predicate to match\n * @returns A command that finds the closest parent node to the current selection that matches the predicate\n * @example ```js\n * findParentNode(node => node.type.name === 'paragraph')\n * ```\n */\nfunction findParentNode(predicate) {\n    return (selection) => findParentNodeClosestToPos(selection.$from, predicate);\n}\n\nfunction getSchema(extensions, editor) {\n    const resolvedExtensions = ExtensionManager.resolve(extensions);\n    return getSchemaByResolvedExtensions(resolvedExtensions, editor);\n}\n\n/**\n * Generate HTML from a JSONContent\n * @param doc The JSONContent to generate HTML from\n * @param extensions The extensions to use for the schema\n * @returns The generated HTML\n */\nfunction generateHTML(doc, extensions) {\n    const schema = getSchema(extensions);\n    const contentNode = Node$1.fromJSON(schema, doc);\n    return getHTMLFromFragment(contentNode.content, schema);\n}\n\n/**\n * Generate JSONContent from HTML\n * @param html The HTML to generate JSONContent from\n * @param extensions The extensions to use for the schema\n * @returns The generated JSONContent\n */\nfunction generateJSON(html, extensions) {\n    const schema = getSchema(extensions);\n    const dom = elementFromString(html);\n    return DOMParser.fromSchema(schema).parse(dom).toJSON();\n}\n\n/**\n * Gets the text of a Prosemirror node\n * @param node The Prosemirror node\n * @param options Options for the text serializer & block separator\n * @returns The text of the node\n * @example ```js\n * const text = getText(node, { blockSeparator: '\\n' })\n * ```\n */\nfunction getText(node, options) {\n    const range = {\n        from: 0,\n        to: node.content.size,\n    };\n    return getTextBetween(node, range, options);\n}\n\n/**\n * Generate raw text from a JSONContent\n * @param doc The JSONContent to generate text from\n * @param extensions The extensions to use for the schema\n * @param options Options for the text generation f.e. blockSeparator or textSerializers\n * @returns The generated text\n */\nfunction generateText(doc, extensions, options) {\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n    const schema = getSchema(extensions);\n    const contentNode = Node$1.fromJSON(schema, doc);\n    return getText(contentNode, {\n        blockSeparator,\n        textSerializers: {\n            ...getTextSerializersFromSchema(schema),\n            ...textSerializers,\n        },\n    });\n}\n\nfunction getNodeAttributes(state, typeOrName) {\n    const type = getNodeType(typeOrName, state.schema);\n    const { from, to } = state.selection;\n    const nodes = [];\n    state.doc.nodesBetween(from, to, node => {\n        nodes.push(node);\n    });\n    const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name);\n    if (!node) {\n        return {};\n    }\n    return { ...node.attrs };\n}\n\n/**\n * Get node or mark attributes by type or name on the current editor state\n * @param state The current editor state\n * @param typeOrName The node or mark type or name\n * @returns The attributes of the node or mark or an empty object\n */\nfunction getAttributes(state, typeOrName) {\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (schemaType === 'node') {\n        return getNodeAttributes(state, typeOrName);\n    }\n    if (schemaType === 'mark') {\n        return getMarkAttributes(state, typeOrName);\n    }\n    return {};\n}\n\n/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nfunction removeDuplicates(array, by = JSON.stringify) {\n    const seen = {};\n    return array.filter(item => {\n        const key = by(item);\n        return Object.prototype.hasOwnProperty.call(seen, key)\n            ? false\n            : (seen[key] = true);\n    });\n}\n\n/**\n * Removes duplicated ranges and ranges that are\n * fully captured by other ranges.\n */\nfunction simplifyChangedRanges(changes) {\n    const uniqueChanges = removeDuplicates(changes);\n    return uniqueChanges.length === 1\n        ? uniqueChanges\n        : uniqueChanges.filter((change, index) => {\n            const rest = uniqueChanges.filter((_, i) => i !== index);\n            return !rest.some(otherChange => {\n                return change.oldRange.from >= otherChange.oldRange.from\n                    && change.oldRange.to <= otherChange.oldRange.to\n                    && change.newRange.from >= otherChange.newRange.from\n                    && change.newRange.to <= otherChange.newRange.to;\n            });\n        });\n}\n/**\n * Returns a list of changed ranges\n * based on the first and last state of all steps.\n */\nfunction getChangedRanges(transform) {\n    const { mapping, steps } = transform;\n    const changes = [];\n    mapping.maps.forEach((stepMap, index) => {\n        const ranges = [];\n        // This accounts for step changes where no range was actually altered\n        // e.g. when setting a mark, node attribute, etc.\n        // @ts-ignore\n        if (!stepMap.ranges.length) {\n            const { from, to } = steps[index];\n            if (from === undefined || to === undefined) {\n                return;\n            }\n            ranges.push({ from, to });\n        }\n        else {\n            stepMap.forEach((from, to) => {\n                ranges.push({ from, to });\n            });\n        }\n        ranges.forEach(({ from, to }) => {\n            const newStart = mapping.slice(index).map(from, -1);\n            const newEnd = mapping.slice(index).map(to);\n            const oldStart = mapping.invert().map(newStart, -1);\n            const oldEnd = mapping.invert().map(newEnd);\n            changes.push({\n                oldRange: {\n                    from: oldStart,\n                    to: oldEnd,\n                },\n                newRange: {\n                    from: newStart,\n                    to: newEnd,\n                },\n            });\n        });\n    });\n    return simplifyChangedRanges(changes);\n}\n\nfunction getDebugJSON(node, startOffset = 0) {\n    const isTopNode = node.type === node.type.schema.topNodeType;\n    const increment = isTopNode ? 0 : 1;\n    const from = startOffset;\n    const to = from + node.nodeSize;\n    const marks = node.marks.map(mark => {\n        const output = {\n            type: mark.type.name,\n        };\n        if (Object.keys(mark.attrs).length) {\n            output.attrs = { ...mark.attrs };\n        }\n        return output;\n    });\n    const attrs = { ...node.attrs };\n    const output = {\n        type: node.type.name,\n        from,\n        to,\n    };\n    if (Object.keys(attrs).length) {\n        output.attrs = attrs;\n    }\n    if (marks.length) {\n        output.marks = marks;\n    }\n    if (node.content.childCount) {\n        output.content = [];\n        node.forEach((child, offset) => {\n            var _a;\n            (_a = output.content) === null || _a === void 0 ? void 0 : _a.push(getDebugJSON(child, startOffset + offset + increment));\n        });\n    }\n    if (node.text) {\n        output.text = node.text;\n    }\n    return output;\n}\n\nfunction getMarksBetween(from, to, doc) {\n    const marks = [];\n    // get all inclusive marks on empty selection\n    if (from === to) {\n        doc\n            .resolve(from)\n            .marks()\n            .forEach(mark => {\n            const $pos = doc.resolve(from);\n            const range = getMarkRange($pos, mark.type);\n            if (!range) {\n                return;\n            }\n            marks.push({\n                mark,\n                ...range,\n            });\n        });\n    }\n    else {\n        doc.nodesBetween(from, to, (node, pos) => {\n            if (!node || (node === null || node === void 0 ? void 0 : node.nodeSize) === undefined) {\n                return;\n            }\n            marks.push(...node.marks.map(mark => ({\n                from: pos,\n                to: pos + node.nodeSize,\n                mark,\n            })));\n        });\n    }\n    return marks;\n}\n\n/**\n * Finds the first node of a given type or name in the current selection.\n * @param state The editor state.\n * @param typeOrName The node type or name.\n * @param pos The position to start searching from.\n * @param maxDepth The maximum depth to search.\n * @returns The node and the depth as an array.\n */\nconst getNodeAtPosition = (state, typeOrName, pos, maxDepth = 20) => {\n    const $pos = state.doc.resolve(pos);\n    let currentDepth = maxDepth;\n    let node = null;\n    while (currentDepth > 0 && node === null) {\n        const currentNode = $pos.node(currentDepth);\n        if ((currentNode === null || currentNode === void 0 ? void 0 : currentNode.type.name) === typeOrName) {\n            node = currentNode;\n        }\n        else {\n            currentDepth -= 1;\n        }\n    }\n    return [node, currentDepth];\n};\n\n/**\n * Return attributes of an extension that should be splitted by keepOnSplit flag\n * @param extensionAttributes Array of extension attributes\n * @param typeName The type of the extension\n * @param attributes The attributes of the extension\n * @returns The splitted attributes\n */\nfunction getSplittedAttributes(extensionAttributes, typeName, attributes) {\n    return Object.fromEntries(Object\n        .entries(attributes)\n        .filter(([name]) => {\n        const extensionAttribute = extensionAttributes.find(item => {\n            return item.type === typeName && item.name === name;\n        });\n        if (!extensionAttribute) {\n            return false;\n        }\n        return extensionAttribute.attribute.keepOnSplit;\n    }));\n}\n\nfunction isMarkActive(state, typeOrName, attributes = {}) {\n    const { empty, ranges } = state.selection;\n    const type = typeOrName ? getMarkType(typeOrName, state.schema) : null;\n    if (empty) {\n        return !!(state.storedMarks || state.selection.$from.marks())\n            .filter(mark => {\n            if (!type) {\n                return true;\n            }\n            return type.name === mark.type.name;\n        })\n            .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }));\n    }\n    let selectionRange = 0;\n    const markRanges = [];\n    ranges.forEach(({ $from, $to }) => {\n        const from = $from.pos;\n        const to = $to.pos;\n        state.doc.nodesBetween(from, to, (node, pos) => {\n            if (!node.isText && !node.marks.length) {\n                return;\n            }\n            const relativeFrom = Math.max(from, pos);\n            const relativeTo = Math.min(to, pos + node.nodeSize);\n            const range = relativeTo - relativeFrom;\n            selectionRange += range;\n            markRanges.push(...node.marks.map(mark => ({\n                mark,\n                from: relativeFrom,\n                to: relativeTo,\n            })));\n        });\n    });\n    if (selectionRange === 0) {\n        return false;\n    }\n    // calculate range of matched mark\n    const matchedRange = markRanges\n        .filter(markRange => {\n        if (!type) {\n            return true;\n        }\n        return type.name === markRange.mark.type.name;\n    })\n        .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\n    // calculate range of marks that excludes the searched mark\n    // for example `code` doesn’t allow any other marks\n    const excludedRange = markRanges\n        .filter(markRange => {\n        if (!type) {\n            return true;\n        }\n        return markRange.mark.type !== type && markRange.mark.type.excludes(type);\n    })\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\n    // we only include the result of `excludedRange`\n    // if there is a match at all\n    const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange;\n    return range >= selectionRange;\n}\n\nfunction isActive(state, name, attributes = {}) {\n    if (!name) {\n        return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes);\n    }\n    const schemaType = getSchemaTypeNameByName(name, state.schema);\n    if (schemaType === 'node') {\n        return isNodeActive(state, name, attributes);\n    }\n    if (schemaType === 'mark') {\n        return isMarkActive(state, name, attributes);\n    }\n    return false;\n}\n\nconst isAtEndOfNode = (state, nodeType) => {\n    const { $from, $to, $anchor } = state.selection;\n    if (nodeType) {\n        const parentNode = findParentNode(node => node.type.name === nodeType)(state.selection);\n        if (!parentNode) {\n            return false;\n        }\n        const $parentPos = state.doc.resolve(parentNode.pos + 1);\n        if ($anchor.pos + 1 === $parentPos.end()) {\n            return true;\n        }\n        return false;\n    }\n    if ($to.parentOffset < $to.parent.nodeSize - 2 || $from.pos !== $to.pos) {\n        return false;\n    }\n    return true;\n};\n\nconst isAtStartOfNode = (state) => {\n    const { $from, $to } = state.selection;\n    if ($from.parentOffset > 0 || $from.pos !== $to.pos) {\n        return false;\n    }\n    return true;\n};\n\nfunction isList(name, extensions) {\n    const { nodeExtensions } = splitExtensions(extensions);\n    const extension = nodeExtensions.find(item => item.name === name);\n    if (!extension) {\n        return false;\n    }\n    const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n    };\n    const group = callOrReturn(getExtensionField(extension, 'group', context));\n    if (typeof group !== 'string') {\n        return false;\n    }\n    return group.split(' ').includes('list');\n}\n\n/**\n * Returns true if the given prosemirror node is empty.\n */\nfunction isNodeEmpty(node, { checkChildren = true, ignoreWhitespace = false, } = {}) {\n    var _a;\n    if (ignoreWhitespace) {\n        if (node.type.name === 'hardBreak') {\n            // Hard breaks are considered empty\n            return true;\n        }\n        if (node.isText) {\n            return /^\\s*$/m.test((_a = node.text) !== null && _a !== void 0 ? _a : '');\n        }\n    }\n    if (node.isText) {\n        return !node.text;\n    }\n    if (node.isAtom || node.isLeaf) {\n        return false;\n    }\n    if (node.content.childCount === 0) {\n        return true;\n    }\n    if (checkChildren) {\n        let isContentEmpty = true;\n        node.content.forEach(childNode => {\n            if (isContentEmpty === false) {\n                // Exit early for perf\n                return;\n            }\n            if (!isNodeEmpty(childNode, { ignoreWhitespace, checkChildren })) {\n                isContentEmpty = false;\n            }\n        });\n        return isContentEmpty;\n    }\n    return false;\n}\n\nfunction isNodeSelection(value) {\n    return value instanceof NodeSelection;\n}\n\nfunction posToDOMRect(view, from, to) {\n    const minPos = 0;\n    const maxPos = view.state.doc.content.size;\n    const resolvedFrom = minMax(from, minPos, maxPos);\n    const resolvedEnd = minMax(to, minPos, maxPos);\n    const start = view.coordsAtPos(resolvedFrom);\n    const end = view.coordsAtPos(resolvedEnd, -1);\n    const top = Math.min(start.top, end.top);\n    const bottom = Math.max(start.bottom, end.bottom);\n    const left = Math.min(start.left, end.left);\n    const right = Math.max(start.right, end.right);\n    const width = right - left;\n    const height = bottom - top;\n    const x = left;\n    const y = top;\n    const data = {\n        top,\n        bottom,\n        left,\n        right,\n        width,\n        height,\n        x,\n        y,\n    };\n    return {\n        ...data,\n        toJSON: () => data,\n    };\n}\n\n/**\n * The actual implementation of the rewriteUnknownContent function\n */\nfunction rewriteUnknownContentInner({ json, validMarks, validNodes, options, rewrittenContent = [], }) {\n    if (json.marks && Array.isArray(json.marks)) {\n        json.marks = json.marks.filter(mark => {\n            const name = typeof mark === 'string' ? mark : mark.type;\n            if (validMarks.has(name)) {\n                return true;\n            }\n            rewrittenContent.push({\n                original: JSON.parse(JSON.stringify(mark)),\n                unsupported: name,\n            });\n            // Just ignore any unknown marks\n            return false;\n        });\n    }\n    if (json.content && Array.isArray(json.content)) {\n        json.content = json.content\n            .map(value => rewriteUnknownContentInner({\n            json: value,\n            validMarks,\n            validNodes,\n            options,\n            rewrittenContent,\n        }).json)\n            .filter(a => a !== null && a !== undefined);\n    }\n    if (json.type && !validNodes.has(json.type)) {\n        rewrittenContent.push({\n            original: JSON.parse(JSON.stringify(json)),\n            unsupported: json.type,\n        });\n        if (json.content && Array.isArray(json.content) && ((options === null || options === void 0 ? void 0 : options.fallbackToParagraph) !== false)) {\n            // Just treat it like a paragraph and hope for the best\n            json.type = 'paragraph';\n            return {\n                json,\n                rewrittenContent,\n            };\n        }\n        // or just omit it entirely\n        return {\n            json: null,\n            rewrittenContent,\n        };\n    }\n    return { json, rewrittenContent };\n}\n/**\n * Rewrite unknown nodes and marks within JSON content\n * Allowing for user within the editor\n */\nfunction rewriteUnknownContent(\n/**\n * The JSON content to clean of unknown nodes and marks\n */\njson, \n/**\n * The schema to use for validation\n */\nschema, \n/**\n * Options for the cleaning process\n */\noptions) {\n    return rewriteUnknownContentInner({\n        json,\n        validNodes: new Set(Object.keys(schema.nodes)),\n        validMarks: new Set(Object.keys(schema.marks)),\n        options,\n    });\n}\n\nfunction canSetMark(state, tr, newMarkType) {\n    var _a;\n    const { selection } = tr;\n    let cursor = null;\n    if (isTextSelection(selection)) {\n        cursor = selection.$cursor;\n    }\n    if (cursor) {\n        const currentMarks = (_a = state.storedMarks) !== null && _a !== void 0 ? _a : cursor.marks();\n        // There can be no current marks that exclude the new mark\n        return (!!newMarkType.isInSet(currentMarks)\n            || !currentMarks.some(mark => mark.type.excludes(newMarkType)));\n    }\n    const { ranges } = selection;\n    return ranges.some(({ $from, $to }) => {\n        let someNodeSupportsMark = $from.depth === 0\n            ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\n            : false;\n        state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\n            // If we already found a mark that we can enable, return false to bypass the remaining search\n            if (someNodeSupportsMark) {\n                return false;\n            }\n            if (node.isInline) {\n                const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType);\n                const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\n                    || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType));\n                someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType;\n            }\n            return !someNodeSupportsMark;\n        });\n        return someNodeSupportsMark;\n    });\n}\nconst setMark = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    const { selection } = tr;\n    const { empty, ranges } = selection;\n    const type = getMarkType(typeOrName, state.schema);\n    if (dispatch) {\n        if (empty) {\n            const oldAttributes = getMarkAttributes(state, type);\n            tr.addStoredMark(type.create({\n                ...oldAttributes,\n                ...attributes,\n            }));\n        }\n        else {\n            ranges.forEach(range => {\n                const from = range.$from.pos;\n                const to = range.$to.pos;\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    const trimmedFrom = Math.max(pos, from);\n                    const trimmedTo = Math.min(pos + node.nodeSize, to);\n                    const someHasMark = node.marks.find(mark => mark.type === type);\n                    // if there is already a mark of this type\n                    // we know that we have to merge its attributes\n                    // otherwise we add a fresh new mark\n                    if (someHasMark) {\n                        node.marks.forEach(mark => {\n                            if (type === mark.type) {\n                                tr.addMark(trimmedFrom, trimmedTo, type.create({\n                                    ...mark.attrs,\n                                    ...attributes,\n                                }));\n                            }\n                        });\n                    }\n                    else {\n                        tr.addMark(trimmedFrom, trimmedTo, type.create(attributes));\n                    }\n                });\n            });\n        }\n    }\n    return canSetMark(state, tr, type);\n};\n\nconst setMeta = (key, value) => ({ tr }) => {\n    tr.setMeta(key, value);\n    return true;\n};\n\nconst setNode = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    let attributesToCopy;\n    if (state.selection.$anchor.sameParent(state.selection.$head)) {\n        // only copy attributes if the selection is pointing to a node of the same type\n        attributesToCopy = state.selection.$anchor.parent.attrs;\n    }\n    // TODO: use a fallback like insertContent?\n    if (!type.isTextblock) {\n        console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.');\n        return false;\n    }\n    return (chain()\n        // try to convert node to default node if needed\n        .command(({ commands }) => {\n        const canSetBlock = setBlockType(type, { ...attributesToCopy, ...attributes })(state);\n        if (canSetBlock) {\n            return true;\n        }\n        return commands.clearNodes();\n    })\n        .command(({ state: updatedState }) => {\n        return setBlockType(type, { ...attributesToCopy, ...attributes })(updatedState, dispatch);\n    })\n        .run());\n};\n\nconst setNodeSelection = position => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const { doc } = tr;\n        const from = minMax(position, 0, doc.content.size);\n        const selection = NodeSelection.create(doc, from);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst setTextSelection = position => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const { doc } = tr;\n        const { from, to } = typeof position === 'number' ? { from: position, to: position } : position;\n        const minPos = TextSelection.atStart(doc).from;\n        const maxPos = TextSelection.atEnd(doc).to;\n        const resolvedFrom = minMax(from, minPos, maxPos);\n        const resolvedEnd = minMax(to, minPos, maxPos);\n        const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst sinkListItem = typeOrName => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return sinkListItem$1(type)(state, dispatch);\n};\n\nfunction ensureMarks(state, splittableMarks) {\n    const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n    if (marks) {\n        const filteredMarks = marks.filter(mark => splittableMarks === null || splittableMarks === void 0 ? void 0 : splittableMarks.includes(mark.type.name));\n        state.tr.ensureMarks(filteredMarks);\n    }\n}\nconst splitBlock = ({ keepMarks = true } = {}) => ({ tr, state, dispatch, editor, }) => {\n    const { selection, doc } = tr;\n    const { $from, $to } = selection;\n    const extensionAttributes = editor.extensionManager.attributes;\n    const newAttributes = getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs);\n    if (selection instanceof NodeSelection && selection.node.isBlock) {\n        if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\n            return false;\n        }\n        if (dispatch) {\n            if (keepMarks) {\n                ensureMarks(state, editor.extensionManager.splittableMarks);\n            }\n            tr.split($from.pos).scrollIntoView();\n        }\n        return true;\n    }\n    if (!$from.parent.isBlock) {\n        return false;\n    }\n    const atEnd = $to.parentOffset === $to.parent.content.size;\n    const deflt = $from.depth === 0\n        ? undefined\n        : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n    let types = atEnd && deflt\n        ? [\n            {\n                type: deflt,\n                attrs: newAttributes,\n            },\n        ]\n        : undefined;\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n    if (!types\n        && !can\n        && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n        can = true;\n        types = deflt\n            ? [\n                {\n                    type: deflt,\n                    attrs: newAttributes,\n                },\n            ]\n            : undefined;\n    }\n    if (dispatch) {\n        if (can) {\n            if (selection instanceof TextSelection) {\n                tr.deleteSelection();\n            }\n            tr.split(tr.mapping.map($from.pos), 1, types);\n            if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\n                const first = tr.mapping.map($from.before());\n                const $first = tr.doc.resolve(first);\n                if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\n                    tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n        }\n        if (keepMarks) {\n            ensureMarks(state, editor.extensionManager.splittableMarks);\n        }\n        tr.scrollIntoView();\n    }\n    return can;\n};\n\nconst splitListItem = (typeOrName, overrideAttrs = {}) => ({ tr, state, dispatch, editor, }) => {\n    var _a;\n    const type = getNodeType(typeOrName, state.schema);\n    const { $from, $to } = state.selection;\n    // @ts-ignore\n    // eslint-disable-next-line\n    const node = state.selection.node;\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n        return false;\n    }\n    const grandParent = $from.node(-1);\n    if (grandParent.type !== type) {\n        return false;\n    }\n    const extensionAttributes = editor.extensionManager.attributes;\n    if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n        // In an empty block. If this is a nested list, the wrapping\n        // list item should be split. Otherwise, bail out and let next\n        // command handle lifting.\n        if ($from.depth === 2\n            || $from.node(-3).type !== type\n            || $from.index(-2) !== $from.node(-2).childCount - 1) {\n            return false;\n        }\n        if (dispatch) {\n            let wrap = Fragment.empty;\n            // eslint-disable-next-line\n            const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n            // Build a fragment containing empty versions of the structure\n            // from the outer list item to the parent node of the cursor\n            for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\n                wrap = Fragment.from($from.node(d).copy(wrap));\n            }\n            // eslint-disable-next-line\n            const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n            // Add a second list item with an empty default start node\n            const newNextTypeAttributes = {\n                ...getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs),\n                ...overrideAttrs,\n            };\n            const nextType = ((_a = type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.createAndFill(newNextTypeAttributes)) || undefined;\n            wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined));\n            const start = $from.before($from.depth - (depthBefore - 1));\n            tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n            let sel = -1;\n            tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\n                if (sel > -1) {\n                    return false;\n                }\n                if (n.isTextblock && n.content.size === 0) {\n                    sel = pos + 1;\n                }\n            });\n            if (sel > -1) {\n                tr.setSelection(TextSelection.near(tr.doc.resolve(sel)));\n            }\n            tr.scrollIntoView();\n        }\n        return true;\n    }\n    const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n    const newTypeAttributes = {\n        ...getSplittedAttributes(extensionAttributes, grandParent.type.name, grandParent.attrs),\n        ...overrideAttrs,\n    };\n    const newNextTypeAttributes = {\n        ...getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs),\n        ...overrideAttrs,\n    };\n    tr.delete($from.pos, $to.pos);\n    const types = nextType\n        ? [\n            { type, attrs: newTypeAttributes },\n            { type: nextType, attrs: newNextTypeAttributes },\n        ]\n        : [{ type, attrs: newTypeAttributes }];\n    if (!canSplit(tr.doc, $from.pos, 2)) {\n        return false;\n    }\n    if (dispatch) {\n        const { selection, storedMarks } = state;\n        const { splittableMarks } = editor.extensionManager;\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n        tr.split($from.pos, 2, types).scrollIntoView();\n        if (!marks || !dispatch) {\n            return true;\n        }\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n        tr.ensureMarks(filteredMarks);\n    }\n    return true;\n};\n\nconst joinListBackwards = (tr, listType) => {\n    const list = findParentNode(node => node.type === listType)(tr.selection);\n    if (!list) {\n        return true;\n    }\n    const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth);\n    if (before === undefined) {\n        return true;\n    }\n    const nodeBefore = tr.doc.nodeAt(before);\n    const canJoinBackwards = list.node.type === (nodeBefore === null || nodeBefore === void 0 ? void 0 : nodeBefore.type) && canJoin(tr.doc, list.pos);\n    if (!canJoinBackwards) {\n        return true;\n    }\n    tr.join(list.pos);\n    return true;\n};\nconst joinListForwards = (tr, listType) => {\n    const list = findParentNode(node => node.type === listType)(tr.selection);\n    if (!list) {\n        return true;\n    }\n    const after = tr.doc.resolve(list.start).after(list.depth);\n    if (after === undefined) {\n        return true;\n    }\n    const nodeAfter = tr.doc.nodeAt(after);\n    const canJoinForwards = list.node.type === (nodeAfter === null || nodeAfter === void 0 ? void 0 : nodeAfter.type) && canJoin(tr.doc, after);\n    if (!canJoinForwards) {\n        return true;\n    }\n    tr.join(after);\n    return true;\n};\nconst toggleList = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({ editor, tr, state, dispatch, chain, commands, can, }) => {\n    const { extensions, splittableMarks } = editor.extensionManager;\n    const listType = getNodeType(listTypeOrName, state.schema);\n    const itemType = getNodeType(itemTypeOrName, state.schema);\n    const { selection, storedMarks } = state;\n    const { $from, $to } = selection;\n    const range = $from.blockRange($to);\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n    if (!range) {\n        return false;\n    }\n    const parentList = findParentNode(node => isList(node.type.name, extensions))(selection);\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n        // remove list\n        if (parentList.node.type === listType) {\n            return commands.liftListItem(itemType);\n        }\n        // change list type\n        if (isList(parentList.node.type.name, extensions)\n            && listType.validContent(parentList.node.content)\n            && dispatch) {\n            return chain()\n                .command(() => {\n                tr.setNodeMarkup(parentList.pos, listType);\n                return true;\n            })\n                .command(() => joinListBackwards(tr, listType))\n                .command(() => joinListForwards(tr, listType))\n                .run();\n        }\n    }\n    if (!keepMarks || !marks || !dispatch) {\n        return chain()\n            // try to convert node to default node if needed\n            .command(() => {\n            const canWrapInList = can().wrapInList(listType, attributes);\n            if (canWrapInList) {\n                return true;\n            }\n            return commands.clearNodes();\n        })\n            .wrapInList(listType, attributes)\n            .command(() => joinListBackwards(tr, listType))\n            .command(() => joinListForwards(tr, listType))\n            .run();\n    }\n    return (chain()\n        // try to convert node to default node if needed\n        .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes);\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n        tr.ensureMarks(filteredMarks);\n        if (canWrapInList) {\n            return true;\n        }\n        return commands.clearNodes();\n    })\n        .wrapInList(listType, attributes)\n        .command(() => joinListBackwards(tr, listType))\n        .command(() => joinListForwards(tr, listType))\n        .run());\n};\n\nconst toggleMark = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\n    const { extendEmptyMarkRange = false } = options;\n    const type = getMarkType(typeOrName, state.schema);\n    const isActive = isMarkActive(state, type, attributes);\n    if (isActive) {\n        return commands.unsetMark(type, { extendEmptyMarkRange });\n    }\n    return commands.setMark(type, attributes);\n};\n\nconst toggleNode = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const toggleType = getNodeType(toggleTypeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    let attributesToCopy;\n    if (state.selection.$anchor.sameParent(state.selection.$head)) {\n        // only copy attributes if the selection is pointing to a node of the same type\n        attributesToCopy = state.selection.$anchor.parent.attrs;\n    }\n    if (isActive) {\n        return commands.setNode(toggleType, attributesToCopy);\n    }\n    // If the node is not active, we want to set the new node type with the given attributes\n    // Copying over the attributes from the current node if the selection is pointing to a node of the same type\n    return commands.setNode(type, { ...attributesToCopy, ...attributes });\n};\n\nconst toggleWrap = (typeOrName, attributes = {}) => ({ state, commands }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    if (isActive) {\n        return commands.lift(type);\n    }\n    return commands.wrapIn(type, attributes);\n};\n\nconst undoInputRule = () => ({ state, dispatch }) => {\n    const plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i += 1) {\n        const plugin = plugins[i];\n        let undoable;\n        // @ts-ignore\n        // eslint-disable-next-line\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                const tr = state.tr;\n                const toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                }\n                if (undoable.text) {\n                    const marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst unsetAllMarks = () => ({ tr, dispatch }) => {\n    const { selection } = tr;\n    const { empty, ranges } = selection;\n    if (empty) {\n        return true;\n    }\n    if (dispatch) {\n        ranges.forEach(range => {\n            tr.removeMark(range.$from.pos, range.$to.pos);\n        });\n    }\n    return true;\n};\n\nconst unsetMark = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\n    var _a;\n    const { extendEmptyMarkRange = false } = options;\n    const { selection } = tr;\n    const type = getMarkType(typeOrName, state.schema);\n    const { $from, empty, ranges } = selection;\n    if (!dispatch) {\n        return true;\n    }\n    if (empty && extendEmptyMarkRange) {\n        let { from, to } = selection;\n        const attrs = (_a = $from.marks().find(mark => mark.type === type)) === null || _a === void 0 ? void 0 : _a.attrs;\n        const range = getMarkRange($from, type, attrs);\n        if (range) {\n            from = range.from;\n            to = range.to;\n        }\n        tr.removeMark(from, to, type);\n    }\n    else {\n        ranges.forEach(range => {\n            tr.removeMark(range.$from.pos, range.$to.pos, type);\n        });\n    }\n    tr.removeStoredMark(type);\n    return true;\n};\n\nconst updateAttributes = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    let nodeType = null;\n    let markType = null;\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (!schemaType) {\n        return false;\n    }\n    if (schemaType === 'node') {\n        nodeType = getNodeType(typeOrName, state.schema);\n    }\n    if (schemaType === 'mark') {\n        markType = getMarkType(typeOrName, state.schema);\n    }\n    if (dispatch) {\n        tr.selection.ranges.forEach((range) => {\n            const from = range.$from.pos;\n            const to = range.$to.pos;\n            let lastPos;\n            let lastNode;\n            let trimmedFrom;\n            let trimmedTo;\n            if (tr.selection.empty) {\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    if (nodeType && nodeType === node.type) {\n                        trimmedFrom = Math.max(pos, from);\n                        trimmedTo = Math.min(pos + node.nodeSize, to);\n                        lastPos = pos;\n                        lastNode = node;\n                    }\n                });\n            }\n            else {\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    if (pos < from && nodeType && nodeType === node.type) {\n                        trimmedFrom = Math.max(pos, from);\n                        trimmedTo = Math.min(pos + node.nodeSize, to);\n                        lastPos = pos;\n                        lastNode = node;\n                    }\n                    if (pos >= from && pos <= to) {\n                        if (nodeType && nodeType === node.type) {\n                            tr.setNodeMarkup(pos, undefined, {\n                                ...node.attrs,\n                                ...attributes,\n                            });\n                        }\n                        if (markType && node.marks.length) {\n                            node.marks.forEach((mark) => {\n                                if (markType === mark.type) {\n                                    const trimmedFrom2 = Math.max(pos, from);\n                                    const trimmedTo2 = Math.min(pos + node.nodeSize, to);\n                                    tr.addMark(trimmedFrom2, trimmedTo2, markType.create({\n                                        ...mark.attrs,\n                                        ...attributes,\n                                    }));\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n            if (lastNode) {\n                if (lastPos !== undefined) {\n                    tr.setNodeMarkup(lastPos, undefined, {\n                        ...lastNode.attrs,\n                        ...attributes,\n                    });\n                }\n                if (markType && lastNode.marks.length) {\n                    lastNode.marks.forEach((mark) => {\n                        if (markType === mark.type) {\n                            tr.addMark(trimmedFrom, trimmedTo, markType.create({\n                                ...mark.attrs,\n                                ...attributes,\n                            }));\n                        }\n                    });\n                }\n            }\n        });\n    }\n    return true;\n};\n\nconst wrapIn = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return wrapIn$1(type, attributes)(state, dispatch);\n};\n\nconst wrapInList = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return wrapInList$1(type, attributes)(state, dispatch);\n};\n\nvar commands = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  blur: blur,\n  clearContent: clearContent,\n  clearNodes: clearNodes,\n  command: command,\n  createParagraphNear: createParagraphNear,\n  cut: cut,\n  deleteCurrentNode: deleteCurrentNode,\n  deleteNode: deleteNode,\n  deleteRange: deleteRange,\n  deleteSelection: deleteSelection,\n  enter: enter,\n  exitCode: exitCode,\n  extendMarkRange: extendMarkRange,\n  first: first,\n  focus: focus,\n  forEach: forEach,\n  insertContent: insertContent,\n  insertContentAt: insertContentAt,\n  joinBackward: joinBackward,\n  joinDown: joinDown,\n  joinForward: joinForward,\n  joinItemBackward: joinItemBackward,\n  joinItemForward: joinItemForward,\n  joinTextblockBackward: joinTextblockBackward,\n  joinTextblockForward: joinTextblockForward,\n  joinUp: joinUp,\n  keyboardShortcut: keyboardShortcut,\n  lift: lift,\n  liftEmptyBlock: liftEmptyBlock,\n  liftListItem: liftListItem,\n  newlineInCode: newlineInCode,\n  resetAttributes: resetAttributes,\n  scrollIntoView: scrollIntoView,\n  selectAll: selectAll,\n  selectNodeBackward: selectNodeBackward,\n  selectNodeForward: selectNodeForward,\n  selectParentNode: selectParentNode,\n  selectTextblockEnd: selectTextblockEnd,\n  selectTextblockStart: selectTextblockStart,\n  setContent: setContent,\n  setMark: setMark,\n  setMeta: setMeta,\n  setNode: setNode,\n  setNodeSelection: setNodeSelection,\n  setTextSelection: setTextSelection,\n  sinkListItem: sinkListItem,\n  splitBlock: splitBlock,\n  splitListItem: splitListItem,\n  toggleList: toggleList,\n  toggleMark: toggleMark,\n  toggleNode: toggleNode,\n  toggleWrap: toggleWrap,\n  undoInputRule: undoInputRule,\n  unsetAllMarks: unsetAllMarks,\n  unsetMark: unsetMark,\n  updateAttributes: updateAttributes,\n  wrapIn: wrapIn,\n  wrapInList: wrapInList\n});\n\nconst Commands = Extension.create({\n    name: 'commands',\n    addCommands() {\n        return {\n            ...commands,\n        };\n    },\n});\n\nconst Drop = Extension.create({\n    name: 'drop',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tiptapDrop'),\n                props: {\n                    handleDrop: (_, e, slice, moved) => {\n                        this.editor.emit('drop', {\n                            editor: this.editor,\n                            event: e,\n                            slice,\n                            moved,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Editable = Extension.create({\n    name: 'editable',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('editable'),\n                props: {\n                    editable: () => this.editor.options.editable,\n                },\n            }),\n        ];\n    },\n});\n\nconst focusEventsPluginKey = new PluginKey('focusEvents');\nconst FocusEvents = Extension.create({\n    name: 'focusEvents',\n    addProseMirrorPlugins() {\n        const { editor } = this;\n        return [\n            new Plugin({\n                key: focusEventsPluginKey,\n                props: {\n                    handleDOMEvents: {\n                        focus: (view, event) => {\n                            editor.isFocused = true;\n                            const transaction = editor.state.tr\n                                .setMeta('focus', { event })\n                                .setMeta('addToHistory', false);\n                            view.dispatch(transaction);\n                            return false;\n                        },\n                        blur: (view, event) => {\n                            editor.isFocused = false;\n                            const transaction = editor.state.tr\n                                .setMeta('blur', { event })\n                                .setMeta('addToHistory', false);\n                            view.dispatch(transaction);\n                            return false;\n                        },\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Keymap = Extension.create({\n    name: 'keymap',\n    addKeyboardShortcuts() {\n        const handleBackspace = () => this.editor.commands.first(({ commands }) => [\n            () => commands.undoInputRule(),\n            // maybe convert first text block node to default node\n            () => commands.command(({ tr }) => {\n                const { selection, doc } = tr;\n                const { empty, $anchor } = selection;\n                const { pos, parent } = $anchor;\n                const $parentPos = $anchor.parent.isTextblock && pos > 0 ? tr.doc.resolve(pos - 1) : $anchor;\n                const parentIsIsolating = $parentPos.parent.type.spec.isolating;\n                const parentPos = $anchor.pos - $anchor.parentOffset;\n                const isAtStart = (parentIsIsolating && $parentPos.parent.childCount === 1)\n                    ? parentPos === $anchor.pos\n                    : Selection.atStart(doc).from === pos;\n                if (!empty\n                    || !parent.type.isTextblock\n                    || parent.textContent.length\n                    || !isAtStart\n                    || (isAtStart && $anchor.parent.type.name === 'paragraph') // prevent clearNodes when no nodes to clear, otherwise history stack is appended\n                ) {\n                    return false;\n                }\n                return commands.clearNodes();\n            }),\n            () => commands.deleteSelection(),\n            () => commands.joinBackward(),\n            () => commands.selectNodeBackward(),\n        ]);\n        const handleDelete = () => this.editor.commands.first(({ commands }) => [\n            () => commands.deleteSelection(),\n            () => commands.deleteCurrentNode(),\n            () => commands.joinForward(),\n            () => commands.selectNodeForward(),\n        ]);\n        const handleEnter = () => this.editor.commands.first(({ commands }) => [\n            () => commands.newlineInCode(),\n            () => commands.createParagraphNear(),\n            () => commands.liftEmptyBlock(),\n            () => commands.splitBlock(),\n        ]);\n        const baseKeymap = {\n            Enter: handleEnter,\n            'Mod-Enter': () => this.editor.commands.exitCode(),\n            Backspace: handleBackspace,\n            'Mod-Backspace': handleBackspace,\n            'Shift-Backspace': handleBackspace,\n            Delete: handleDelete,\n            'Mod-Delete': handleDelete,\n            'Mod-a': () => this.editor.commands.selectAll(),\n        };\n        const pcKeymap = {\n            ...baseKeymap,\n        };\n        const macKeymap = {\n            ...baseKeymap,\n            'Ctrl-h': handleBackspace,\n            'Alt-Backspace': handleBackspace,\n            'Ctrl-d': handleDelete,\n            'Ctrl-Alt-Backspace': handleDelete,\n            'Alt-Delete': handleDelete,\n            'Alt-d': handleDelete,\n            'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\n            'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\n        };\n        if (isiOS() || isMacOS()) {\n            return macKeymap;\n        }\n        return pcKeymap;\n    },\n    addProseMirrorPlugins() {\n        return [\n            // With this plugin we check if the whole document was selected and deleted.\n            // In this case we will additionally call `clearNodes()` to convert e.g. a heading\n            // to a paragraph if necessary.\n            // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well\n            // with many other commands.\n            new Plugin({\n                key: new PluginKey('clearDocument'),\n                appendTransaction: (transactions, oldState, newState) => {\n                    if (transactions.some(tr => tr.getMeta('composition'))) {\n                        return;\n                    }\n                    const docChanges = transactions.some(transaction => transaction.docChanged)\n                        && !oldState.doc.eq(newState.doc);\n                    const ignoreTr = transactions.some(transaction => transaction.getMeta('preventClearDocument'));\n                    if (!docChanges || ignoreTr) {\n                        return;\n                    }\n                    const { empty, from, to } = oldState.selection;\n                    const allFrom = Selection.atStart(oldState.doc).from;\n                    const allEnd = Selection.atEnd(oldState.doc).to;\n                    const allWasSelected = from === allFrom && to === allEnd;\n                    if (empty || !allWasSelected) {\n                        return;\n                    }\n                    const isEmpty = isNodeEmpty(newState.doc);\n                    if (!isEmpty) {\n                        return;\n                    }\n                    const tr = newState.tr;\n                    const state = createChainableState({\n                        state: newState,\n                        transaction: tr,\n                    });\n                    const { commands } = new CommandManager({\n                        editor: this.editor,\n                        state,\n                    });\n                    commands.clearNodes();\n                    if (!tr.steps.length) {\n                        return;\n                    }\n                    return tr;\n                },\n            }),\n        ];\n    },\n});\n\nconst Paste = Extension.create({\n    name: 'paste',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tiptapPaste'),\n                props: {\n                    handlePaste: (_view, e, slice) => {\n                        this.editor.emit('paste', {\n                            editor: this.editor,\n                            event: e,\n                            slice,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Tabindex = Extension.create({\n    name: 'tabindex',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tabindex'),\n                props: {\n                    attributes: () => (this.editor.isEditable ? { tabindex: '0' } : {}),\n                },\n            }),\n        ];\n    },\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ClipboardTextSerializer: ClipboardTextSerializer,\n  Commands: Commands,\n  Drop: Drop,\n  Editable: Editable,\n  FocusEvents: FocusEvents,\n  Keymap: Keymap,\n  Paste: Paste,\n  Tabindex: Tabindex,\n  focusEventsPluginKey: focusEventsPluginKey\n});\n\nclass NodePos {\n    get name() {\n        return this.node.type.name;\n    }\n    constructor(pos, editor, isBlock = false, node = null) {\n        this.currentNode = null;\n        this.actualDepth = null;\n        this.isBlock = isBlock;\n        this.resolvedPos = pos;\n        this.editor = editor;\n        this.currentNode = node;\n    }\n    get node() {\n        return this.currentNode || this.resolvedPos.node();\n    }\n    get element() {\n        return this.editor.view.domAtPos(this.pos).node;\n    }\n    get depth() {\n        var _a;\n        return (_a = this.actualDepth) !== null && _a !== void 0 ? _a : this.resolvedPos.depth;\n    }\n    get pos() {\n        return this.resolvedPos.pos;\n    }\n    get content() {\n        return this.node.content;\n    }\n    set content(content) {\n        let from = this.from;\n        let to = this.to;\n        if (this.isBlock) {\n            if (this.content.size === 0) {\n                console.error(`You can’t set content on a block node. Tried to set content on ${this.name} at ${this.pos}`);\n                return;\n            }\n            from = this.from + 1;\n            to = this.to - 1;\n        }\n        this.editor.commands.insertContentAt({ from, to }, content);\n    }\n    get attributes() {\n        return this.node.attrs;\n    }\n    get textContent() {\n        return this.node.textContent;\n    }\n    get size() {\n        return this.node.nodeSize;\n    }\n    get from() {\n        if (this.isBlock) {\n            return this.pos;\n        }\n        return this.resolvedPos.start(this.resolvedPos.depth);\n    }\n    get range() {\n        return {\n            from: this.from,\n            to: this.to,\n        };\n    }\n    get to() {\n        if (this.isBlock) {\n            return this.pos + this.size;\n        }\n        return this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1);\n    }\n    get parent() {\n        if (this.depth === 0) {\n            return null;\n        }\n        const parentPos = this.resolvedPos.start(this.resolvedPos.depth - 1);\n        const $pos = this.resolvedPos.doc.resolve(parentPos);\n        return new NodePos($pos, this.editor);\n    }\n    get before() {\n        let $pos = this.resolvedPos.doc.resolve(this.from - (this.isBlock ? 1 : 2));\n        if ($pos.depth !== this.depth) {\n            $pos = this.resolvedPos.doc.resolve(this.from - 3);\n        }\n        return new NodePos($pos, this.editor);\n    }\n    get after() {\n        let $pos = this.resolvedPos.doc.resolve(this.to + (this.isBlock ? 2 : 1));\n        if ($pos.depth !== this.depth) {\n            $pos = this.resolvedPos.doc.resolve(this.to + 3);\n        }\n        return new NodePos($pos, this.editor);\n    }\n    get children() {\n        const children = [];\n        this.node.content.forEach((node, offset) => {\n            const isBlock = node.isBlock && !node.isTextblock;\n            const isNonTextAtom = node.isAtom && !node.isText;\n            const targetPos = this.pos + offset + (isNonTextAtom ? 0 : 1);\n            // Check if targetPos is within valid document range\n            if (targetPos < 0 || targetPos > this.resolvedPos.doc.nodeSize - 2) {\n                return;\n            }\n            const $pos = this.resolvedPos.doc.resolve(targetPos);\n            if (!isBlock && $pos.depth <= this.depth) {\n                return;\n            }\n            const childNodePos = new NodePos($pos, this.editor, isBlock, isBlock ? node : null);\n            if (isBlock) {\n                childNodePos.actualDepth = this.depth + 1;\n            }\n            children.push(new NodePos($pos, this.editor, isBlock, isBlock ? node : null));\n        });\n        return children;\n    }\n    get firstChild() {\n        return this.children[0] || null;\n    }\n    get lastChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    closest(selector, attributes = {}) {\n        let node = null;\n        let currentNode = this.parent;\n        while (currentNode && !node) {\n            if (currentNode.node.type.name === selector) {\n                if (Object.keys(attributes).length > 0) {\n                    const nodeAttributes = currentNode.node.attrs;\n                    const attrKeys = Object.keys(attributes);\n                    for (let index = 0; index < attrKeys.length; index += 1) {\n                        const key = attrKeys[index];\n                        if (nodeAttributes[key] !== attributes[key]) {\n                            break;\n                        }\n                    }\n                }\n                else {\n                    node = currentNode;\n                }\n            }\n            currentNode = currentNode.parent;\n        }\n        return node;\n    }\n    querySelector(selector, attributes = {}) {\n        return this.querySelectorAll(selector, attributes, true)[0] || null;\n    }\n    querySelectorAll(selector, attributes = {}, firstItemOnly = false) {\n        let nodes = [];\n        if (!this.children || this.children.length === 0) {\n            return nodes;\n        }\n        const attrKeys = Object.keys(attributes);\n        /**\n         * Finds all children recursively that match the selector and attributes\n         * If firstItemOnly is true, it will return the first item found\n         */\n        this.children.forEach(childPos => {\n            // If we already found a node and we only want the first item, we dont need to keep going\n            if (firstItemOnly && nodes.length > 0) {\n                return;\n            }\n            if (childPos.node.type.name === selector) {\n                const doesAllAttributesMatch = attrKeys.every(key => attributes[key] === childPos.node.attrs[key]);\n                if (doesAllAttributesMatch) {\n                    nodes.push(childPos);\n                }\n            }\n            // If we already found a node and we only want the first item, we can stop here and skip the recursion\n            if (firstItemOnly && nodes.length > 0) {\n                return;\n            }\n            nodes = nodes.concat(childPos.querySelectorAll(selector, attributes, firstItemOnly));\n        });\n        return nodes;\n    }\n    setAttribute(attributes) {\n        const { tr } = this.editor.state;\n        tr.setNodeMarkup(this.from, undefined, {\n            ...this.node.attrs,\n            ...attributes,\n        });\n        this.editor.view.dispatch(tr);\n    }\n}\n\nconst style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 0 !important;\n  height: 0 !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`;\n\nfunction createStyleTag(style, nonce, suffix) {\n    const tiptapStyleTag = document.querySelector(`style[data-tiptap-style${suffix ? `-${suffix}` : ''}]`);\n    if (tiptapStyleTag !== null) {\n        return tiptapStyleTag;\n    }\n    const styleNode = document.createElement('style');\n    if (nonce) {\n        styleNode.setAttribute('nonce', nonce);\n    }\n    styleNode.setAttribute(`data-tiptap-style${suffix ? `-${suffix}` : ''}`, '');\n    styleNode.innerHTML = style;\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\n    return styleNode;\n}\n\nclass Editor extends EventEmitter {\n    constructor(options = {}) {\n        super();\n        this.isFocused = false;\n        /**\n         * The editor is considered initialized after the `create` event has been emitted.\n         */\n        this.isInitialized = false;\n        this.extensionStorage = {};\n        this.options = {\n            element: document.createElement('div'),\n            content: '',\n            injectCSS: true,\n            injectNonce: undefined,\n            extensions: [],\n            autofocus: false,\n            editable: true,\n            editorProps: {},\n            parseOptions: {},\n            coreExtensionOptions: {},\n            enableInputRules: true,\n            enablePasteRules: true,\n            enableCoreExtensions: true,\n            enableContentCheck: false,\n            emitContentError: false,\n            onBeforeCreate: () => null,\n            onCreate: () => null,\n            onUpdate: () => null,\n            onSelectionUpdate: () => null,\n            onTransaction: () => null,\n            onFocus: () => null,\n            onBlur: () => null,\n            onDestroy: () => null,\n            onContentError: ({ error }) => { throw error; },\n            onPaste: () => null,\n            onDrop: () => null,\n        };\n        this.isCapturingTransaction = false;\n        this.capturedTransaction = null;\n        this.setOptions(options);\n        this.createExtensionManager();\n        this.createCommandManager();\n        this.createSchema();\n        this.on('beforeCreate', this.options.onBeforeCreate);\n        this.emit('beforeCreate', { editor: this });\n        this.on('contentError', this.options.onContentError);\n        this.createView();\n        this.injectCSS();\n        this.on('create', this.options.onCreate);\n        this.on('update', this.options.onUpdate);\n        this.on('selectionUpdate', this.options.onSelectionUpdate);\n        this.on('transaction', this.options.onTransaction);\n        this.on('focus', this.options.onFocus);\n        this.on('blur', this.options.onBlur);\n        this.on('destroy', this.options.onDestroy);\n        this.on('drop', ({ event, slice, moved }) => this.options.onDrop(event, slice, moved));\n        this.on('paste', ({ event, slice }) => this.options.onPaste(event, slice));\n        window.setTimeout(() => {\n            if (this.isDestroyed) {\n                return;\n            }\n            this.commands.focus(this.options.autofocus);\n            this.emit('create', { editor: this });\n            this.isInitialized = true;\n        }, 0);\n    }\n    /**\n     * Returns the editor storage.\n     */\n    get storage() {\n        return this.extensionStorage;\n    }\n    /**\n     * An object of all registered commands.\n     */\n    get commands() {\n        return this.commandManager.commands;\n    }\n    /**\n     * Create a command chain to call multiple commands at once.\n     */\n    chain() {\n        return this.commandManager.chain();\n    }\n    /**\n     * Check if a command or a command chain can be executed. Without executing it.\n     */\n    can() {\n        return this.commandManager.can();\n    }\n    /**\n     * Inject CSS styles.\n     */\n    injectCSS() {\n        if (this.options.injectCSS && document) {\n            this.css = createStyleTag(style, this.options.injectNonce);\n        }\n    }\n    /**\n     * Update editor options.\n     *\n     * @param options A list of options\n     */\n    setOptions(options = {}) {\n        this.options = {\n            ...this.options,\n            ...options,\n        };\n        if (!this.view || !this.state || this.isDestroyed) {\n            return;\n        }\n        if (this.options.editorProps) {\n            this.view.setProps(this.options.editorProps);\n        }\n        this.view.updateState(this.state);\n    }\n    /**\n     * Update editable state of the editor.\n     */\n    setEditable(editable, emitUpdate = true) {\n        this.setOptions({ editable });\n        if (emitUpdate) {\n            this.emit('update', { editor: this, transaction: this.state.tr });\n        }\n    }\n    /**\n     * Returns whether the editor is editable.\n     */\n    get isEditable() {\n        // since plugins are applied after creating the view\n        // `editable` is always `true` for one tick.\n        // that’s why we also have to check for `options.editable`\n        return this.options.editable && this.view && this.view.editable;\n    }\n    /**\n     * Returns the editor state.\n     */\n    get state() {\n        return this.view.state;\n    }\n    /**\n     * Register a ProseMirror plugin.\n     *\n     * @param plugin A ProseMirror plugin\n     * @param handlePlugins Control how to merge the plugin into the existing plugins.\n     * @returns The new editor state\n     */\n    registerPlugin(plugin, handlePlugins) {\n        const plugins = isFunction(handlePlugins)\n            ? handlePlugins(plugin, [...this.state.plugins])\n            : [...this.state.plugins, plugin];\n        const state = this.state.reconfigure({ plugins });\n        this.view.updateState(state);\n        return state;\n    }\n    /**\n     * Unregister a ProseMirror plugin.\n     *\n     * @param nameOrPluginKeyToRemove The plugins name\n     * @returns The new editor state or undefined if the editor is destroyed\n     */\n    unregisterPlugin(nameOrPluginKeyToRemove) {\n        if (this.isDestroyed) {\n            return undefined;\n        }\n        const prevPlugins = this.state.plugins;\n        let plugins = prevPlugins;\n        [].concat(nameOrPluginKeyToRemove).forEach(nameOrPluginKey => {\n            // @ts-ignore\n            const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key;\n            // @ts-ignore\n            plugins = plugins.filter(plugin => !plugin.key.startsWith(name));\n        });\n        if (prevPlugins.length === plugins.length) {\n            // No plugin was removed, so we don’t need to update the state\n            return undefined;\n        }\n        const state = this.state.reconfigure({\n            plugins,\n        });\n        this.view.updateState(state);\n        return state;\n    }\n    /**\n     * Creates an extension manager.\n     */\n    createExtensionManager() {\n        var _a, _b;\n        const coreExtensions = this.options.enableCoreExtensions ? [\n            Editable,\n            ClipboardTextSerializer.configure({\n                blockSeparator: (_b = (_a = this.options.coreExtensionOptions) === null || _a === void 0 ? void 0 : _a.clipboardTextSerializer) === null || _b === void 0 ? void 0 : _b.blockSeparator,\n            }),\n            Commands,\n            FocusEvents,\n            Keymap,\n            Tabindex,\n            Drop,\n            Paste,\n        ].filter(ext => {\n            if (typeof this.options.enableCoreExtensions === 'object') {\n                return this.options.enableCoreExtensions[ext.name] !== false;\n            }\n            return true;\n        }) : [];\n        const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\n            return ['extension', 'node', 'mark'].includes(extension === null || extension === void 0 ? void 0 : extension.type);\n        });\n        this.extensionManager = new ExtensionManager(allExtensions, this);\n    }\n    /**\n     * Creates an command manager.\n     */\n    createCommandManager() {\n        this.commandManager = new CommandManager({\n            editor: this,\n        });\n    }\n    /**\n     * Creates a ProseMirror schema.\n     */\n    createSchema() {\n        this.schema = this.extensionManager.schema;\n    }\n    /**\n     * Creates a ProseMirror view.\n     */\n    createView() {\n        var _a;\n        let doc;\n        try {\n            doc = createDocument(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: this.options.enableContentCheck });\n        }\n        catch (e) {\n            if (!(e instanceof Error) || !['[tiptap error]: Invalid JSON content', '[tiptap error]: Invalid HTML content'].includes(e.message)) {\n                // Not the content error we were expecting\n                throw e;\n            }\n            this.emit('contentError', {\n                editor: this,\n                error: e,\n                disableCollaboration: () => {\n                    if (this.storage.collaboration) {\n                        this.storage.collaboration.isDisabled = true;\n                    }\n                    // To avoid syncing back invalid content, reinitialize the extensions without the collaboration extension\n                    this.options.extensions = this.options.extensions.filter(extension => extension.name !== 'collaboration');\n                    // Restart the initialization process by recreating the extension manager with the new set of extensions\n                    this.createExtensionManager();\n                },\n            });\n            // Content is invalid, but attempt to create it anyway, stripping out the invalid parts\n            doc = createDocument(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: false });\n        }\n        const selection = resolveFocusPosition(doc, this.options.autofocus);\n        this.view = new EditorView(this.options.element, {\n            ...this.options.editorProps,\n            attributes: {\n                // add `role=\"textbox\"` to the editor element\n                role: 'textbox',\n                ...(_a = this.options.editorProps) === null || _a === void 0 ? void 0 : _a.attributes,\n            },\n            dispatchTransaction: this.dispatchTransaction.bind(this),\n            state: EditorState.create({\n                doc,\n                selection: selection || undefined,\n            }),\n        });\n        // `editor.view` is not yet available at this time.\n        // Therefore we will add all plugins and node views directly afterwards.\n        const newState = this.state.reconfigure({\n            plugins: this.extensionManager.plugins,\n        });\n        this.view.updateState(newState);\n        this.createNodeViews();\n        this.prependClass();\n        // Let’s store the editor instance in the DOM element.\n        // So we’ll have access to it for tests.\n        // @ts-ignore\n        const dom = this.view.dom;\n        dom.editor = this;\n    }\n    /**\n     * Creates all node views.\n     */\n    createNodeViews() {\n        if (this.view.isDestroyed) {\n            return;\n        }\n        this.view.setProps({\n            nodeViews: this.extensionManager.nodeViews,\n        });\n    }\n    /**\n     * Prepend class name to element.\n     */\n    prependClass() {\n        this.view.dom.className = `tiptap ${this.view.dom.className}`;\n    }\n    captureTransaction(fn) {\n        this.isCapturingTransaction = true;\n        fn();\n        this.isCapturingTransaction = false;\n        const tr = this.capturedTransaction;\n        this.capturedTransaction = null;\n        return tr;\n    }\n    /**\n     * The callback over which to send transactions (state updates) produced by the view.\n     *\n     * @param transaction An editor state transaction\n     */\n    dispatchTransaction(transaction) {\n        // if the editor / the view of the editor was destroyed\n        // the transaction should not be dispatched as there is no view anymore.\n        if (this.view.isDestroyed) {\n            return;\n        }\n        if (this.isCapturingTransaction) {\n            if (!this.capturedTransaction) {\n                this.capturedTransaction = transaction;\n                return;\n            }\n            transaction.steps.forEach(step => { var _a; return (_a = this.capturedTransaction) === null || _a === void 0 ? void 0 : _a.step(step); });\n            return;\n        }\n        const state = this.state.apply(transaction);\n        const selectionHasChanged = !this.state.selection.eq(state.selection);\n        this.emit('beforeTransaction', {\n            editor: this,\n            transaction,\n            nextState: state,\n        });\n        this.view.updateState(state);\n        this.emit('transaction', {\n            editor: this,\n            transaction,\n        });\n        if (selectionHasChanged) {\n            this.emit('selectionUpdate', {\n                editor: this,\n                transaction,\n            });\n        }\n        const focus = transaction.getMeta('focus');\n        const blur = transaction.getMeta('blur');\n        if (focus) {\n            this.emit('focus', {\n                editor: this,\n                event: focus.event,\n                transaction,\n            });\n        }\n        if (blur) {\n            this.emit('blur', {\n                editor: this,\n                event: blur.event,\n                transaction,\n            });\n        }\n        if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n            return;\n        }\n        this.emit('update', {\n            editor: this,\n            transaction,\n        });\n    }\n    /**\n     * Get attributes of the currently selected node or mark.\n     */\n    getAttributes(nameOrType) {\n        return getAttributes(this.state, nameOrType);\n    }\n    isActive(nameOrAttributes, attributesOrUndefined) {\n        const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null;\n        const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes;\n        return isActive(this.state, name, attributes);\n    }\n    /**\n     * Get the document as JSON.\n     */\n    getJSON() {\n        return this.state.doc.toJSON();\n    }\n    /**\n     * Get the document as HTML.\n     */\n    getHTML() {\n        return getHTMLFromFragment(this.state.doc.content, this.schema);\n    }\n    /**\n     * Get the document as text.\n     */\n    getText(options) {\n        const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n        return getText(this.state.doc, {\n            blockSeparator,\n            textSerializers: {\n                ...getTextSerializersFromSchema(this.schema),\n                ...textSerializers,\n            },\n        });\n    }\n    /**\n     * Check if there is no content.\n     */\n    get isEmpty() {\n        return isNodeEmpty(this.state.doc);\n    }\n    /**\n     * Get the number of characters for the current document.\n     *\n     * @deprecated\n     */\n    getCharacterCount() {\n        console.warn('[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.');\n        return this.state.doc.content.size - 2;\n    }\n    /**\n     * Destroy the editor.\n     */\n    destroy() {\n        this.emit('destroy');\n        if (this.view) {\n            // Cleanup our reference to prevent circular references which caused memory leaks\n            // @ts-ignore\n            const dom = this.view.dom;\n            if (dom && dom.editor) {\n                delete dom.editor;\n            }\n            this.view.destroy();\n        }\n        this.removeAllListeners();\n    }\n    /**\n     * Check if the editor is already destroyed.\n     */\n    get isDestroyed() {\n        var _a;\n        // @ts-ignore\n        return !((_a = this.view) === null || _a === void 0 ? void 0 : _a.docView);\n    }\n    $node(selector, attributes) {\n        var _a;\n        return ((_a = this.$doc) === null || _a === void 0 ? void 0 : _a.querySelector(selector, attributes)) || null;\n    }\n    $nodes(selector, attributes) {\n        var _a;\n        return ((_a = this.$doc) === null || _a === void 0 ? void 0 : _a.querySelectorAll(selector, attributes)) || null;\n    }\n    $pos(pos) {\n        const $pos = this.state.doc.resolve(pos);\n        return new NodePos($pos, this);\n    }\n    get $doc() {\n        return this.$pos(0);\n    }\n}\n\n/**\n * Build an input rule that adds a mark when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction markInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const { tr } = state;\n            const captureGroup = match[match.length - 1];\n            const fullMatch = match[0];\n            if (captureGroup) {\n                const startSpaces = fullMatch.search(/\\S/);\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\n                const textEnd = textStart + captureGroup.length;\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n                    .filter(item => {\n                    // @ts-ignore\n                    const excluded = item.mark.type.excluded;\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\n                })\n                    .filter(item => item.to > textStart);\n                if (excludedMarks.length) {\n                    return null;\n                }\n                if (textEnd < range.to) {\n                    tr.delete(textEnd, range.to);\n                }\n                if (textStart > range.from) {\n                    tr.delete(range.from + startSpaces, textStart);\n                }\n                const markEnd = range.from + startSpaces + captureGroup.length;\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\n                tr.removeStoredMark(config.type);\n            }\n        },\n    });\n}\n\n/**\n * Build an input rule that adds a node when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction nodeInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            const { tr } = state;\n            const start = range.from;\n            let end = range.to;\n            const newNode = config.type.create(attributes);\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                let matchStart = start + offset;\n                if (matchStart > end) {\n                    matchStart = end;\n                }\n                else {\n                    end = matchStart + match[1].length;\n                }\n                // insert last typed character\n                const lastChar = match[0][match[0].length - 1];\n                tr.insertText(lastChar, start + match[0].length - 1);\n                // insert node from input rule\n                tr.replaceWith(matchStart, end, newNode);\n            }\n            else if (match[0]) {\n                const insertionStart = config.type.isInline ? start : start - 1;\n                tr.insert(insertionStart, config.type.create(attributes)).delete(tr.mapping.map(start), tr.mapping.map(end));\n            }\n            tr.scrollIntoView();\n        },\n    });\n}\n\n/**\n * Build an input rule that changes the type of a textblock when the\n * matched text is typed into it. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction textblockTypeInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const $start = state.doc.resolve(range.from);\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\n                return null;\n            }\n            state.tr\n                .delete(range.from, range.to)\n                .setBlockType(range.from, range.from, config.type, attributes);\n        },\n    });\n}\n\n/**\n * Build an input rule that replaces text when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction textInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            let insert = config.replace;\n            let start = range.from;\n            const end = range.to;\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                insert += match[0].slice(offset + match[1].length);\n                start += offset;\n                const cutOff = start - end;\n                if (cutOff > 0) {\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\n                    start = end;\n                }\n            }\n            state.tr.insertText(insert, start, end);\n        },\n    });\n}\n\n/**\n * Build an input rule for automatically wrapping a textblock when a\n * given string is typed. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n *\n * `type` is the type of node to wrap in.\n *\n * By default, if there’s a node with the same type above the newly\n * wrapped node, the rule will try to join those\n * two nodes. You can pass a join predicate, which takes a regular\n * expression match and the node before the wrapped node, and can\n * return a boolean to indicate whether a join should happen.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction wrappingInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match, chain, }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            const tr = state.tr.delete(range.from, range.to);\n            const $start = tr.doc.resolve(range.from);\n            const blockRange = $start.blockRange();\n            const wrapping = blockRange && findWrapping(blockRange, config.type, attributes);\n            if (!wrapping) {\n                return null;\n            }\n            tr.wrap(blockRange, wrapping);\n            if (config.keepMarks && config.editor) {\n                const { selection, storedMarks } = state;\n                const { splittableMarks } = config.editor.extensionManager;\n                const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n                if (marks) {\n                    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n                    tr.ensureMarks(filteredMarks);\n                }\n            }\n            if (config.keepAttributes) {\n                /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\n                const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList';\n                chain().updateAttributes(nodeType, attributes).run();\n            }\n            const before = tr.doc.resolve(range.from - 1).nodeBefore;\n            if (before\n                && before.type === config.type\n                && canJoin(tr.doc, range.from - 1)\n                && (!config.joinPredicate || config.joinPredicate(match, before))) {\n                tr.join(range.from - 1);\n            }\n        },\n    });\n}\n\n/**\n * The Node class is used to create custom node extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Node {\n    constructor(config = {}) {\n        this.type = 'node';\n        this.name = 'node';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Node(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Node(extendedConfig);\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n}\n\n/**\n * Node views are used to customize the rendered DOM structure of a node.\n * @see https://tiptap.dev/guide/node-views\n */\nclass NodeView {\n    constructor(component, props, options) {\n        this.isDragging = false;\n        this.component = component;\n        this.editor = props.editor;\n        this.options = {\n            stopEvent: null,\n            ignoreMutation: null,\n            ...options,\n        };\n        this.extension = props.extension;\n        this.node = props.node;\n        this.decorations = props.decorations;\n        this.innerDecorations = props.innerDecorations;\n        this.view = props.view;\n        this.HTMLAttributes = props.HTMLAttributes;\n        this.getPos = props.getPos;\n        this.mount();\n    }\n    mount() {\n        // eslint-disable-next-line\n        return;\n    }\n    get dom() {\n        return this.editor.view.dom;\n    }\n    get contentDOM() {\n        return null;\n    }\n    onDragStart(event) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const { view } = this.editor;\n        const target = event.target;\n        // get the drag handle element\n        // `closest` is not available for text nodes so we may have to use its parent\n        const dragHandle = target.nodeType === 3\n            ? (_a = target.parentElement) === null || _a === void 0 ? void 0 : _a.closest('[data-drag-handle]')\n            : target.closest('[data-drag-handle]');\n        if (!this.dom || ((_b = this.contentDOM) === null || _b === void 0 ? void 0 : _b.contains(target)) || !dragHandle) {\n            return;\n        }\n        let x = 0;\n        let y = 0;\n        // calculate offset for drag element if we use a different drag handle element\n        if (this.dom !== dragHandle) {\n            const domBox = this.dom.getBoundingClientRect();\n            const handleBox = dragHandle.getBoundingClientRect();\n            // In React, we have to go through nativeEvent to reach offsetX/offsetY.\n            const offsetX = (_c = event.offsetX) !== null && _c !== void 0 ? _c : (_d = event.nativeEvent) === null || _d === void 0 ? void 0 : _d.offsetX;\n            const offsetY = (_e = event.offsetY) !== null && _e !== void 0 ? _e : (_f = event.nativeEvent) === null || _f === void 0 ? void 0 : _f.offsetY;\n            x = handleBox.x - domBox.x + offsetX;\n            y = handleBox.y - domBox.y + offsetY;\n        }\n        const clonedNode = this.dom.cloneNode(true);\n        (_g = event.dataTransfer) === null || _g === void 0 ? void 0 : _g.setDragImage(clonedNode, x, y);\n        const pos = this.getPos();\n        if (typeof pos !== 'number') {\n            return;\n        }\n        // we need to tell ProseMirror that we want to move the whole node\n        // so we create a NodeSelection\n        const selection = NodeSelection.create(view.state.doc, pos);\n        const transaction = view.state.tr.setSelection(selection);\n        view.dispatch(transaction);\n    }\n    stopEvent(event) {\n        var _a;\n        if (!this.dom) {\n            return false;\n        }\n        if (typeof this.options.stopEvent === 'function') {\n            return this.options.stopEvent({ event });\n        }\n        const target = event.target;\n        const isInElement = this.dom.contains(target) && !((_a = this.contentDOM) === null || _a === void 0 ? void 0 : _a.contains(target));\n        // any event from child nodes should be handled by ProseMirror\n        if (!isInElement) {\n            return false;\n        }\n        const isDragEvent = event.type.startsWith('drag');\n        const isDropEvent = event.type === 'drop';\n        const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable;\n        // any input event within node views should be ignored by ProseMirror\n        if (isInput && !isDropEvent && !isDragEvent) {\n            return true;\n        }\n        const { isEditable } = this.editor;\n        const { isDragging } = this;\n        const isDraggable = !!this.node.type.spec.draggable;\n        const isSelectable = NodeSelection.isSelectable(this.node);\n        const isCopyEvent = event.type === 'copy';\n        const isPasteEvent = event.type === 'paste';\n        const isCutEvent = event.type === 'cut';\n        const isClickEvent = event.type === 'mousedown';\n        // ProseMirror tries to drag selectable nodes\n        // even if `draggable` is set to `false`\n        // this fix prevents that\n        if (!isDraggable && isSelectable && isDragEvent && event.target === this.dom) {\n            event.preventDefault();\n        }\n        if (isDraggable && isDragEvent && !isDragging && event.target === this.dom) {\n            event.preventDefault();\n            return false;\n        }\n        // we have to store that dragging started\n        if (isDraggable && isEditable && !isDragging && isClickEvent) {\n            const dragHandle = target.closest('[data-drag-handle]');\n            const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle));\n            if (isValidDragHandle) {\n                this.isDragging = true;\n                document.addEventListener('dragend', () => {\n                    this.isDragging = false;\n                }, { once: true });\n                document.addEventListener('drop', () => {\n                    this.isDragging = false;\n                }, { once: true });\n                document.addEventListener('mouseup', () => {\n                    this.isDragging = false;\n                }, { once: true });\n            }\n        }\n        // these events are handled by prosemirror\n        if (isDragging\n            || isDropEvent\n            || isCopyEvent\n            || isPasteEvent\n            || isCutEvent\n            || (isClickEvent && isSelectable)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Called when a DOM [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver) or a selection change happens within the view.\n     * @return `false` if the editor should re-read the selection or re-parse the range around the mutation\n     * @return `true` if it can safely be ignored.\n     */\n    ignoreMutation(mutation) {\n        if (!this.dom || !this.contentDOM) {\n            return true;\n        }\n        if (typeof this.options.ignoreMutation === 'function') {\n            return this.options.ignoreMutation({ mutation });\n        }\n        // a leaf/atom node is like a black box for ProseMirror\n        // and should be fully handled by the node view\n        if (this.node.isLeaf || this.node.isAtom) {\n            return true;\n        }\n        // ProseMirror should handle any selections\n        if (mutation.type === 'selection') {\n            return false;\n        }\n        // try to prevent a bug on iOS and Android that will break node views on enter\n        // this is because ProseMirror can’t preventDispatch on enter\n        // this will lead to a re-render of the node view on enter\n        // see: https://github.com/ueberdosis/tiptap/issues/1214\n        // see: https://github.com/ueberdosis/tiptap/issues/2534\n        if (this.dom.contains(mutation.target)\n            && mutation.type === 'childList'\n            && (isiOS() || isAndroid())\n            && this.editor.isFocused) {\n            const changedNodes = [\n                ...Array.from(mutation.addedNodes),\n                ...Array.from(mutation.removedNodes),\n            ];\n            // we’ll check if every changed node is contentEditable\n            // to make sure it’s probably mutated by ProseMirror\n            if (changedNodes.every(node => node.isContentEditable)) {\n                return false;\n            }\n        }\n        // we will allow mutation contentDOM with attributes\n        // so we can for example adding classes within our node view\n        if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\n            return true;\n        }\n        // ProseMirror should handle any changes within contentDOM\n        if (this.contentDOM.contains(mutation.target)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Update the attributes of the prosemirror node.\n     */\n    updateAttributes(attributes) {\n        this.editor.commands.command(({ tr }) => {\n            const pos = this.getPos();\n            if (typeof pos !== 'number') {\n                return false;\n            }\n            tr.setNodeMarkup(pos, undefined, {\n                ...this.node.attrs,\n                ...attributes,\n            });\n            return true;\n        });\n    }\n    /**\n     * Delete the node.\n     */\n    deleteNode() {\n        const from = this.getPos();\n        if (typeof from !== 'number') {\n            return;\n        }\n        const to = from + this.node.nodeSize;\n        this.editor.commands.deleteRange({ from, to });\n    }\n}\n\n/**\n * Build an paste rule that adds a mark when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction markPasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler: ({ state, range, match, pasteEvent, }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const { tr } = state;\n            const captureGroup = match[match.length - 1];\n            const fullMatch = match[0];\n            let markEnd = range.to;\n            if (captureGroup) {\n                const startSpaces = fullMatch.search(/\\S/);\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\n                const textEnd = textStart + captureGroup.length;\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n                    .filter(item => {\n                    // @ts-ignore\n                    const excluded = item.mark.type.excluded;\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\n                })\n                    .filter(item => item.to > textStart);\n                if (excludedMarks.length) {\n                    return null;\n                }\n                if (textEnd < range.to) {\n                    tr.delete(textEnd, range.to);\n                }\n                if (textStart > range.from) {\n                    tr.delete(range.from + startSpaces, textStart);\n                }\n                markEnd = range.from + startSpaces + captureGroup.length;\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\n                tr.removeStoredMark(config.type);\n            }\n        },\n    });\n}\n\nfunction canInsertNode(state, nodeType) {\n    const { selection } = state;\n    const { $from } = selection;\n    // Special handling for NodeSelection\n    if (selection instanceof NodeSelection) {\n        const index = $from.index();\n        const parent = $from.parent;\n        // Can we replace the selected node with the horizontal rule?\n        return parent.canReplaceWith(index, index + 1, nodeType);\n    }\n    // Default: check if we can insert at the current position\n    let depth = $from.depth;\n    while (depth >= 0) {\n        const index = $from.index(depth);\n        const parent = $from.node(depth);\n        const match = parent.contentMatchAt(index);\n        if (match.matchType(nodeType)) {\n            return true;\n        }\n        depth -= 1;\n    }\n    return false;\n}\n\n// source: https://stackoverflow.com/a/6969486\nfunction escapeForRegEx(string) {\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\n/**\n * Build an paste rule that adds a node when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction nodePasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler({ match, chain, range, pasteEvent, }) {\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\n            const content = callOrReturn(config.getContent, undefined, attributes);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const node = { type: config.type.name, attrs: attributes };\n            if (content) {\n                node.content = content;\n            }\n            if (match.input) {\n                chain().deleteRange(range).insertContentAt(range.from, node);\n            }\n        },\n    });\n}\n\n/**\n * Build an paste rule that replaces text when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction textPasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            let insert = config.replace;\n            let start = range.from;\n            const end = range.to;\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                insert += match[0].slice(offset + match[1].length);\n                start += offset;\n                const cutOff = start - end;\n                if (cutOff > 0) {\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\n                    start = end;\n                }\n            }\n            state.tr.insertText(insert, start, end);\n        },\n    });\n}\n\nclass Tracker {\n    constructor(transaction) {\n        this.transaction = transaction;\n        this.currentStep = this.transaction.steps.length;\n    }\n    map(position) {\n        let deleted = false;\n        const mappedPosition = this.transaction.steps\n            .slice(this.currentStep)\n            .reduce((newPosition, step) => {\n            const mapResult = step.getMap().mapResult(newPosition);\n            if (mapResult.deleted) {\n                deleted = true;\n            }\n            return mapResult.pos;\n        }, position);\n        return {\n            position: mappedPosition,\n            deleted,\n        };\n    }\n}\n\nexport { CommandManager, Editor, Extension, InputRule, Mark, Node, NodePos, NodeView, PasteRule, Tracker, callOrReturn, canInsertNode, combineTransactionSteps, createChainableState, createDocument, createNodeFromContent, createStyleTag, defaultBlockAt, deleteProps, elementFromString, escapeForRegEx, index as extensions, findChildren, findChildrenInRange, findDuplicates, findParentNode, findParentNodeClosestToPos, fromString, generateHTML, generateJSON, generateText, getAttributes, getAttributesFromExtensions, getChangedRanges, getDebugJSON, getExtensionField, getHTMLFromFragment, getMarkAttributes, getMarkRange, getMarkType, getMarksBetween, getNodeAtPosition, getNodeAttributes, getNodeType, getRenderedAttributes, getSchema, getSchemaByResolvedExtensions, getSchemaTypeByName, getSchemaTypeNameByName, getSplittedAttributes, getText, getTextBetween, getTextContentFromNodes, getTextSerializersFromSchema, injectExtensionAttributesToParseRule, inputRulesPlugin, isActive, isAtEndOfNode, isAtStartOfNode, isEmptyObject, isExtensionRulesEnabled, isFunction, isList, isMacOS, isMarkActive, isNodeActive, isNodeEmpty, isNodeSelection, isNumber, isPlainObject, isRegExp, isString, isTextSelection, isiOS, markInputRule, markPasteRule, mergeAttributes, mergeDeep, minMax, nodeInputRule, nodePasteRule, objectIncludes, pasteRulesPlugin, posToDOMRect, removeDuplicates, resolveFocusPosition, rewriteUnknownContent, selectionToInsertionEnd, splitExtensions, textInputRule, textPasteRule, textblockTypeInputRule, wrappingInputRule };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\n/**\n * Matches a blockquote to a `>` as input.\n */\nconst inputRegex = /^\\s*>\\s$/;\n/**\n * This extension allows you to create blockquotes.\n * @see https://tiptap.dev/api/nodes/blockquote\n */\nconst Blockquote = Node.create({\n    name: 'blockquote',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    content: 'block+',\n    group: 'block',\n    defining: true,\n    parseHTML() {\n        return [\n            { tag: 'blockquote' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setBlockquote: () => ({ commands }) => {\n                return commands.wrapIn(this.name);\n            },\n            toggleBlockquote: () => ({ commands }) => {\n                return commands.toggleWrap(this.name);\n            },\n            unsetBlockquote: () => ({ commands }) => {\n                return commands.lift(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n        };\n    },\n    addInputRules() {\n        return [\n            wrappingInputRule({\n                find: inputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Blockquote, Blockquote as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches bold text via `**` as input.\n */\nconst starInputRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))$/;\n/**\n * Matches bold text via `**` while pasting.\n */\nconst starPasteRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))/g;\n/**\n * Matches bold text via `__` as input.\n */\nconst underscoreInputRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))$/;\n/**\n * Matches bold text via `__` while pasting.\n */\nconst underscorePasteRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))/g;\n/**\n * This extension allows you to mark text as bold.\n * @see https://tiptap.dev/api/marks/bold\n */\nconst Bold = Mark.create({\n    name: 'bold',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'strong',\n            },\n            {\n                tag: 'b',\n                getAttrs: node => node.style.fontWeight !== 'normal' && null,\n            },\n            {\n                style: 'font-weight=400',\n                clearMark: mark => mark.type.name === this.name,\n            },\n            {\n                style: 'font-weight',\n                getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setBold: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleBold: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetBold: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-b': () => this.editor.commands.toggleBold(),\n            'Mod-B': () => this.editor.commands.toggleBold(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: starInputRegex,\n                type: this.type,\n            }),\n            markInputRule({\n                find: underscoreInputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: starPasteRegex,\n                type: this.type,\n            }),\n            markPasteRule({\n                find: underscorePasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Bold, Bold as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\nconst ListItemName = 'listItem';\nconst TextStyleName = 'textStyle';\n/**\n * Matches a bullet list to a dash or asterisk.\n */\nconst inputRegex = /^\\s*([-+*])\\s$/;\n/**\n * This extension allows you to create bullet lists.\n * This requires the ListItem extension\n * @see https://tiptap.dev/api/nodes/bullet-list\n * @see https://tiptap.dev/api/nodes/list-item.\n */\nconst BulletList = Node.create({\n    name: 'bulletList',\n    addOptions() {\n        return {\n            itemTypeName: 'listItem',\n            HTMLAttributes: {},\n            keepMarks: false,\n            keepAttributes: false,\n        };\n    },\n    group: 'block list',\n    content() {\n        return `${this.options.itemTypeName}+`;\n    },\n    parseHTML() {\n        return [\n            { tag: 'ul' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            toggleBulletList: () => ({ commands, chain }) => {\n                if (this.options.keepAttributes) {\n                    return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run();\n                }\n                return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n        };\n    },\n    addInputRules() {\n        let inputRule = wrappingInputRule({\n            find: inputRegex,\n            type: this.type,\n        });\n        if (this.options.keepMarks || this.options.keepAttributes) {\n            inputRule = wrappingInputRule({\n                find: inputRegex,\n                type: this.type,\n                keepMarks: this.options.keepMarks,\n                keepAttributes: this.options.keepAttributes,\n                getAttributes: () => { return this.editor.getAttributes(TextStyleName); },\n                editor: this.editor,\n            });\n        }\n        return [\n            inputRule,\n        ];\n    },\n});\n\nexport { BulletList, BulletList as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Regular expressions to match inline code blocks enclosed in backticks.\n *  It matches:\n *     - An opening backtick, followed by\n *     - Any text that doesn't include a backtick (captured for marking), followed by\n *     - A closing backtick.\n *  This ensures that any text between backticks is formatted as code,\n *  regardless of the surrounding characters (exception being another backtick).\n */\nconst inputRegex = /(^|[^`])`([^`]+)`(?!`)/;\n/**\n * Matches inline code while pasting.\n */\nconst pasteRegex = /(^|[^`])`([^`]+)`(?!`)/g;\n/**\n * This extension allows you to mark text as inline code.\n * @see https://tiptap.dev/api/marks/code\n */\nconst Code = Mark.create({\n    name: 'code',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    excludes: '_',\n    code: true,\n    exitable: true,\n    parseHTML() {\n        return [\n            { tag: 'code' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setCode: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleCode: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetCode: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-e': () => this.editor.commands.toggleCode(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: inputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: pasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Code, Code as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, textblockTypeInputRule } from '@tiptap/core';\nimport { Selection, Plugin, PluginKey, TextSelection } from '@tiptap/pm/state';\n\n/**\n * Matches a code block with backticks.\n */\nconst backtickInputRegex = /^```([a-z]+)?[\\s\\n]$/;\n/**\n * Matches a code block with tildes.\n */\nconst tildeInputRegex = /^~~~([a-z]+)?[\\s\\n]$/;\n/**\n * This extension allows you to create code blocks.\n * @see https://tiptap.dev/api/nodes/code-block\n */\nconst CodeBlock = Node.create({\n    name: 'codeBlock',\n    addOptions() {\n        return {\n            languageClassPrefix: 'language-',\n            exitOnTripleEnter: true,\n            exitOnArrowDown: true,\n            defaultLanguage: null,\n            HTMLAttributes: {},\n        };\n    },\n    content: 'text*',\n    marks: '',\n    group: 'block',\n    code: true,\n    defining: true,\n    addAttributes() {\n        return {\n            language: {\n                default: this.options.defaultLanguage,\n                parseHTML: element => {\n                    var _a;\n                    const { languageClassPrefix } = this.options;\n                    const classNames = [...(((_a = element.firstElementChild) === null || _a === void 0 ? void 0 : _a.classList) || [])];\n                    const languages = classNames\n                        .filter(className => className.startsWith(languageClassPrefix))\n                        .map(className => className.replace(languageClassPrefix, ''));\n                    const language = languages[0];\n                    if (!language) {\n                        return null;\n                    }\n                    return language;\n                },\n                rendered: false,\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'pre',\n                preserveWhitespace: 'full',\n            },\n        ];\n    },\n    renderHTML({ node, HTMLAttributes }) {\n        return [\n            'pre',\n            mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n            [\n                'code',\n                {\n                    class: node.attrs.language\n                        ? this.options.languageClassPrefix + node.attrs.language\n                        : null,\n                },\n                0,\n            ],\n        ];\n    },\n    addCommands() {\n        return {\n            setCodeBlock: attributes => ({ commands }) => {\n                return commands.setNode(this.name, attributes);\n            },\n            toggleCodeBlock: attributes => ({ commands }) => {\n                return commands.toggleNode(this.name, 'paragraph', attributes);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Alt-c': () => this.editor.commands.toggleCodeBlock(),\n            // remove code block when at start of document or code block is empty\n            Backspace: () => {\n                const { empty, $anchor } = this.editor.state.selection;\n                const isAtStart = $anchor.pos === 1;\n                if (!empty || $anchor.parent.type.name !== this.name) {\n                    return false;\n                }\n                if (isAtStart || !$anchor.parent.textContent.length) {\n                    return this.editor.commands.clearNodes();\n                }\n                return false;\n            },\n            // exit node on triple enter\n            Enter: ({ editor }) => {\n                if (!this.options.exitOnTripleEnter) {\n                    return false;\n                }\n                const { state } = editor;\n                const { selection } = state;\n                const { $from, empty } = selection;\n                if (!empty || $from.parent.type !== this.type) {\n                    return false;\n                }\n                const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2;\n                const endsWithDoubleNewline = $from.parent.textContent.endsWith('\\n\\n');\n                if (!isAtEnd || !endsWithDoubleNewline) {\n                    return false;\n                }\n                return editor\n                    .chain()\n                    .command(({ tr }) => {\n                    tr.delete($from.pos - 2, $from.pos);\n                    return true;\n                })\n                    .exitCode()\n                    .run();\n            },\n            // exit node on arrow down\n            ArrowDown: ({ editor }) => {\n                if (!this.options.exitOnArrowDown) {\n                    return false;\n                }\n                const { state } = editor;\n                const { selection, doc } = state;\n                const { $from, empty } = selection;\n                if (!empty || $from.parent.type !== this.type) {\n                    return false;\n                }\n                const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2;\n                if (!isAtEnd) {\n                    return false;\n                }\n                const after = $from.after();\n                if (after === undefined) {\n                    return false;\n                }\n                const nodeAfter = doc.nodeAt(after);\n                if (nodeAfter) {\n                    return editor.commands.command(({ tr }) => {\n                        tr.setSelection(Selection.near(doc.resolve(after)));\n                        return true;\n                    });\n                }\n                return editor.commands.exitCode();\n            },\n        };\n    },\n    addInputRules() {\n        return [\n            textblockTypeInputRule({\n                find: backtickInputRegex,\n                type: this.type,\n                getAttributes: match => ({\n                    language: match[1],\n                }),\n            }),\n            textblockTypeInputRule({\n                find: tildeInputRegex,\n                type: this.type,\n                getAttributes: match => ({\n                    language: match[1],\n                }),\n            }),\n        ];\n    },\n    addProseMirrorPlugins() {\n        return [\n            // this plugin creates a code block for pasted content from VS Code\n            // we can also detect the copied code language\n            new Plugin({\n                key: new PluginKey('codeBlockVSCodeHandler'),\n                props: {\n                    handlePaste: (view, event) => {\n                        if (!event.clipboardData) {\n                            return false;\n                        }\n                        // don’t create a new code block within code blocks\n                        if (this.editor.isActive(this.type.name)) {\n                            return false;\n                        }\n                        const text = event.clipboardData.getData('text/plain');\n                        const vscode = event.clipboardData.getData('vscode-editor-data');\n                        const vscodeData = vscode ? JSON.parse(vscode) : undefined;\n                        const language = vscodeData === null || vscodeData === void 0 ? void 0 : vscodeData.mode;\n                        if (!text || !language) {\n                            return false;\n                        }\n                        const { tr, schema } = view.state;\n                        // prepare a text node\n                        // strip carriage return chars from text pasted as code\n                        // see: https://github.com/ProseMirror/prosemirror-view/commit/a50a6bcceb4ce52ac8fcc6162488d8875613aacd\n                        const textNode = schema.text(text.replace(/\\r\\n?/g, '\\n'));\n                        // create a code block with the text node\n                        // replace selection with the code block\n                        tr.replaceSelectionWith(this.type.create({ language }, textNode));\n                        if (tr.selection.$from.parent.type !== this.type) {\n                            // put cursor inside the newly created code block\n                            tr.setSelection(TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))));\n                        }\n                        // store meta information\n                        // this is useful for other plugins that depends on the paste event\n                        // like the paste rule plugin\n                        tr.setMeta('paste', true);\n                        view.dispatch(tr);\n                        return true;\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nexport { CodeBlock, backtickInputRegex, CodeBlock as default, tildeInputRegex };\n//# sourceMappingURL=index.js.map\n","import { Node } from '@tiptap/core';\n\n/**\n * The default document node which represents the top level node of the editor.\n * @see https://tiptap.dev/api/nodes/document\n */\nconst Document = Node.create({\n    name: 'doc',\n    topNode: true,\n    content: 'block+',\n});\n\nexport { Document, Document as default };\n//# sourceMappingURL=index.js.map\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        let editorDOM = this.editorView.dom, editorRect = editorDOM.getBoundingClientRect();\n        let scaleX = editorRect.width / editorDOM.offsetWidth, scaleY = editorRect.height / editorDOM.offsetHeight;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    let halfWidth = (this.width / 2) * scaleY;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - halfWidth, bottom: top + halfWidth };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            let halfWidth = (this.width / 2) * scaleX;\n            rect = { left: coords.left - halfWidth, right: coords.left + halfWidth, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            let parentScaleX = rect.width / parent.offsetWidth, parentScaleY = rect.height / parent.offsetHeight;\n            parentLeft = rect.left - parent.scrollLeft * parentScaleX;\n            parentTop = rect.top - parent.scrollTop * parentScaleY;\n        }\n        this.element.style.left = (rect.left - parentLeft) / scaleX + \"px\";\n        this.element.style.top = (rect.top - parentTop) / scaleY + \"px\";\n        this.element.style.width = (rect.right - rect.left) / scaleX + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) / scaleY + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\"\n            ? disableDropCursor(this.editorView, pos, event)\n            : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (!this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { Extension } from '@tiptap/core';\nimport { dropCursor } from '@tiptap/pm/dropcursor';\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nconst Dropcursor = Extension.create({\n    name: 'dropCursor',\n    addOptions() {\n        return {\n            color: 'currentColor',\n            width: 1,\n            class: undefined,\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            dropCursor(this.options),\n        ];\n    },\n});\n\nexport { Dropcursor, Dropcursor as default };\n//# sourceMappingURL=index.js.map\n","import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n","import { Extension, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { gapCursor } from '@tiptap/pm/gapcursor';\n\n/**\n * This extension allows you to add a gap cursor to your editor.\n * A gap cursor is a cursor that appears when you click on a place\n * where no content is present, for example inbetween nodes.\n * @see https://tiptap.dev/api/extensions/gapcursor\n */\nconst Gapcursor = Extension.create({\n    name: 'gapCursor',\n    addProseMirrorPlugins() {\n        return [\n            gapCursor(),\n        ];\n    },\n    extendNodeSchema(extension) {\n        var _a;\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n        };\n        return {\n            allowGapCursor: (_a = callOrReturn(getExtensionField(extension, 'allowGapCursor', context))) !== null && _a !== void 0 ? _a : null,\n        };\n    },\n});\n\nexport { Gapcursor, Gapcursor as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nconst HardBreak = Node.create({\n    name: 'hardBreak',\n    addOptions() {\n        return {\n            keepMarks: true,\n            HTMLAttributes: {},\n        };\n    },\n    inline: true,\n    group: 'inline',\n    selectable: false,\n    linebreakReplacement: true,\n    parseHTML() {\n        return [\n            { tag: 'br' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n    },\n    renderText() {\n        return '\\n';\n    },\n    addCommands() {\n        return {\n            setHardBreak: () => ({ commands, chain, state, editor, }) => {\n                return commands.first([\n                    () => commands.exitCode(),\n                    () => commands.command(() => {\n                        const { selection, storedMarks } = state;\n                        if (selection.$from.parent.type.spec.isolating) {\n                            return false;\n                        }\n                        const { keepMarks } = this.options;\n                        const { splittableMarks } = editor.extensionManager;\n                        const marks = storedMarks\n                            || (selection.$to.parentOffset && selection.$from.marks());\n                        return chain()\n                            .insertContent({ type: this.name })\n                            .command(({ tr, dispatch }) => {\n                            if (dispatch && marks && keepMarks) {\n                                const filteredMarks = marks\n                                    .filter(mark => splittableMarks.includes(mark.type.name));\n                                tr.ensureMarks(filteredMarks);\n                            }\n                            return true;\n                        })\n                            .run();\n                    }),\n                ]);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Enter': () => this.editor.commands.setHardBreak(),\n            'Shift-Enter': () => this.editor.commands.setHardBreak(),\n        };\n    },\n});\n\nexport { HardBreak, HardBreak as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, textblockTypeInputRule } from '@tiptap/core';\n\n/**\n * This extension allows you to create headings.\n * @see https://www.tiptap.dev/api/nodes/heading\n */\nconst Heading = Node.create({\n    name: 'heading',\n    addOptions() {\n        return {\n            levels: [1, 2, 3, 4, 5, 6],\n            HTMLAttributes: {},\n        };\n    },\n    content: 'inline*',\n    group: 'block',\n    defining: true,\n    addAttributes() {\n        return {\n            level: {\n                default: 1,\n                rendered: false,\n            },\n        };\n    },\n    parseHTML() {\n        return this.options.levels\n            .map((level) => ({\n            tag: `h${level}`,\n            attrs: { level },\n        }));\n    },\n    renderHTML({ node, HTMLAttributes }) {\n        const hasLevel = this.options.levels.includes(node.attrs.level);\n        const level = hasLevel\n            ? node.attrs.level\n            : this.options.levels[0];\n        return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setHeading: attributes => ({ commands }) => {\n                if (!this.options.levels.includes(attributes.level)) {\n                    return false;\n                }\n                return commands.setNode(this.name, attributes);\n            },\n            toggleHeading: attributes => ({ commands }) => {\n                if (!this.options.levels.includes(attributes.level)) {\n                    return false;\n                }\n                return commands.toggleNode(this.name, 'paragraph', attributes);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return this.options.levels.reduce((items, level) => ({\n            ...items,\n            ...{\n                [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n            },\n        }), {});\n    },\n    addInputRules() {\n        return this.options.levels.map(level => {\n            return textblockTypeInputRule({\n                find: new RegExp(`^(#{${Math.min(...this.options.levels)},${level}})\\\\s$`),\n                type: this.type,\n                getAttributes: {\n                    level,\n                },\n            });\n        });\n    },\n});\n\nexport { Heading, Heading as default };\n//# sourceMappingURL=index.js.map\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(maps) {\n    let result = [];\n    for (let i = maps.length - 1; i >= 0 && result.length == 0; i--)\n        maps[i].forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return null;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    return pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist });\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\nfunction buildCommand(redo, scroll) {\n    return (state, dispatch) => {\n        let hist = historyKey.getState(state);\n        if (!hist || (redo ? hist.undone : hist.done).eventCount == 0)\n            return false;\n        if (dispatch) {\n            let tr = histTransaction(hist, state, redo);\n            if (tr)\n                dispatch(scroll ? tr.scrollIntoView() : tr);\n        }\n        return true;\n    };\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = buildCommand(false, true);\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = buildCommand(true, true);\n/**\nA command function that undoes the last change. Don't scroll the\nselection into view.\n*/\nconst undoNoScroll = buildCommand(false, false);\n/**\nA command function that redoes the last undone change. Don't\nscroll the selection into view.\n*/\nconst redoNoScroll = buildCommand(true, false);\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, redoNoScroll, undo, undoDepth, undoNoScroll };\n","import { Extension } from '@tiptap/core';\nimport { undo, redo, history } from '@tiptap/pm/history';\n\n/**\n * This extension allows you to undo and redo recent changes.\n * @see https://www.tiptap.dev/api/extensions/history\n *\n * **Important**: If the `@tiptap/extension-collaboration` package is used, make sure to remove\n * the `history` extension, as it is not compatible with the `collaboration` extension.\n *\n * `@tiptap/extension-collaboration` uses its own history implementation.\n */\nconst History = Extension.create({\n    name: 'history',\n    addOptions() {\n        return {\n            depth: 100,\n            newGroupDelay: 500,\n        };\n    },\n    addCommands() {\n        return {\n            undo: () => ({ state, dispatch }) => {\n                return undo(state, dispatch);\n            },\n            redo: () => ({ state, dispatch }) => {\n                return redo(state, dispatch);\n            },\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            history(this.options),\n        ];\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-z': () => this.editor.commands.undo(),\n            'Shift-Mod-z': () => this.editor.commands.redo(),\n            'Mod-y': () => this.editor.commands.redo(),\n            // Russian keyboard layouts\n            'Mod-я': () => this.editor.commands.undo(),\n            'Shift-Mod-я': () => this.editor.commands.redo(),\n        };\n    },\n});\n\nexport { History, History as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, canInsertNode, isNodeSelection, nodeInputRule } from '@tiptap/core';\nimport { TextSelection, NodeSelection } from '@tiptap/pm/state';\n\n/**\n * This extension allows you to insert horizontal rules.\n * @see https://www.tiptap.dev/api/nodes/horizontal-rule\n */\nconst HorizontalRule = Node.create({\n    name: 'horizontalRule',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    group: 'block',\n    parseHTML() {\n        return [{ tag: 'hr' }];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n    },\n    addCommands() {\n        return {\n            setHorizontalRule: () => ({ chain, state }) => {\n                // Check if we can insert the node at the current selection\n                if (!canInsertNode(state, state.schema.nodes[this.name])) {\n                    return false;\n                }\n                const { selection } = state;\n                const { $from: $originFrom, $to: $originTo } = selection;\n                const currentChain = chain();\n                if ($originFrom.parentOffset === 0) {\n                    currentChain.insertContentAt({\n                        from: Math.max($originFrom.pos - 1, 0),\n                        to: $originTo.pos,\n                    }, {\n                        type: this.name,\n                    });\n                }\n                else if (isNodeSelection(selection)) {\n                    currentChain.insertContentAt($originTo.pos, {\n                        type: this.name,\n                    });\n                }\n                else {\n                    currentChain.insertContent({ type: this.name });\n                }\n                return (currentChain\n                    // set cursor after horizontal rule\n                    .command(({ tr, dispatch }) => {\n                    var _a;\n                    if (dispatch) {\n                        const { $to } = tr.selection;\n                        const posAfter = $to.end();\n                        if ($to.nodeAfter) {\n                            if ($to.nodeAfter.isTextblock) {\n                                tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1));\n                            }\n                            else if ($to.nodeAfter.isBlock) {\n                                tr.setSelection(NodeSelection.create(tr.doc, $to.pos));\n                            }\n                            else {\n                                tr.setSelection(TextSelection.create(tr.doc, $to.pos));\n                            }\n                        }\n                        else {\n                            // add node after horizontal rule if it’s the end of the document\n                            const node = (_a = $to.parent.type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.create();\n                            if (node) {\n                                tr.insert(posAfter, node);\n                                tr.setSelection(TextSelection.create(tr.doc, posAfter + 1));\n                            }\n                        }\n                        tr.scrollIntoView();\n                    }\n                    return true;\n                })\n                    .run());\n            },\n        };\n    },\n    addInputRules() {\n        return [\n            nodeInputRule({\n                find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { HorizontalRule, HorizontalRule as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches an italic to a *italic* on input.\n */\nconst starInputRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))$/;\n/**\n * Matches an italic to a *italic* on paste.\n */\nconst starPasteRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))/g;\n/**\n * Matches an italic to a _italic_ on input.\n */\nconst underscoreInputRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))$/;\n/**\n * Matches an italic to a _italic_ on paste.\n */\nconst underscorePasteRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))/g;\n/**\n * This extension allows you to create italic text.\n * @see https://www.tiptap.dev/api/marks/italic\n */\nconst Italic = Mark.create({\n    name: 'italic',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'em',\n            },\n            {\n                tag: 'i',\n                getAttrs: node => node.style.fontStyle !== 'normal' && null,\n            },\n            {\n                style: 'font-style=normal',\n                clearMark: mark => mark.type.name === this.name,\n            },\n            {\n                style: 'font-style=italic',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setItalic: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleItalic: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetItalic: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-i': () => this.editor.commands.toggleItalic(),\n            'Mod-I': () => this.editor.commands.toggleItalic(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: starInputRegex,\n                type: this.type,\n            }),\n            markInputRule({\n                find: underscoreInputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: starPasteRegex,\n                type: this.type,\n            }),\n            markPasteRule({\n                find: underscorePasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Italic, Italic as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create list items.\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nconst ListItem = Node.create({\n    name: 'listItem',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n            bulletListTypeName: 'bulletList',\n            orderedListTypeName: 'orderedList',\n        };\n    },\n    content: 'paragraph block*',\n    defining: true,\n    parseHTML() {\n        return [\n            {\n                tag: 'li',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addKeyboardShortcuts() {\n        return {\n            Enter: () => this.editor.commands.splitListItem(this.name),\n            Tab: () => this.editor.commands.sinkListItem(this.name),\n            'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n        };\n    },\n});\n\nexport { ListItem, ListItem as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\nconst ListItemName = 'listItem';\nconst TextStyleName = 'textStyle';\n/**\n * Matches an ordered list to a 1. on input (or any number followed by a dot).\n */\nconst inputRegex = /^(\\d+)\\.\\s$/;\n/**\n * This extension allows you to create ordered lists.\n * This requires the ListItem extension\n * @see https://www.tiptap.dev/api/nodes/ordered-list\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nconst OrderedList = Node.create({\n    name: 'orderedList',\n    addOptions() {\n        return {\n            itemTypeName: 'listItem',\n            HTMLAttributes: {},\n            keepMarks: false,\n            keepAttributes: false,\n        };\n    },\n    group: 'block list',\n    content() {\n        return `${this.options.itemTypeName}+`;\n    },\n    addAttributes() {\n        return {\n            start: {\n                default: 1,\n                parseHTML: element => {\n                    return element.hasAttribute('start')\n                        ? parseInt(element.getAttribute('start') || '', 10)\n                        : 1;\n                },\n            },\n            type: {\n                default: null,\n                parseHTML: element => element.getAttribute('type'),\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'ol',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        const { start, ...attributesWithoutStart } = HTMLAttributes;\n        return start === 1\n            ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0]\n            : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            toggleOrderedList: () => ({ commands, chain }) => {\n                if (this.options.keepAttributes) {\n                    return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run();\n                }\n                return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-7': () => this.editor.commands.toggleOrderedList(),\n        };\n    },\n    addInputRules() {\n        let inputRule = wrappingInputRule({\n            find: inputRegex,\n            type: this.type,\n            getAttributes: match => ({ start: +match[1] }),\n            joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        });\n        if (this.options.keepMarks || this.options.keepAttributes) {\n            inputRule = wrappingInputRule({\n                find: inputRegex,\n                type: this.type,\n                keepMarks: this.options.keepMarks,\n                keepAttributes: this.options.keepAttributes,\n                getAttributes: match => ({ start: +match[1], ...this.editor.getAttributes(TextStyleName) }),\n                joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n                editor: this.editor,\n            });\n        }\n        return [\n            inputRule,\n        ];\n    },\n});\n\nexport { OrderedList, OrderedList as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create paragraphs.\n * @see https://www.tiptap.dev/api/nodes/paragraph\n */\nconst Paragraph = Node.create({\n    name: 'paragraph',\n    priority: 1000,\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    group: 'block',\n    content: 'inline*',\n    parseHTML() {\n        return [\n            { tag: 'p' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setParagraph: () => ({ commands }) => {\n                return commands.setNode(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n        };\n    },\n});\n\nexport { Paragraph, Paragraph as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches a strike to a ~~strike~~ on input.\n */\nconst inputRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))$/;\n/**\n * Matches a strike to a ~~strike~~ on paste.\n */\nconst pasteRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))/g;\n/**\n * This extension allows you to create strike text.\n * @see https://www.tiptap.dev/api/marks/strike\n */\nconst Strike = Mark.create({\n    name: 'strike',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 's',\n            },\n            {\n                tag: 'del',\n            },\n            {\n                tag: 'strike',\n            },\n            {\n                style: 'text-decoration',\n                consuming: false,\n                getAttrs: style => (style.includes('line-through') ? {} : false),\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setStrike: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleStrike: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetStrike: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-s': () => this.editor.commands.toggleStrike(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: inputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: pasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Strike, Strike as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Node } from '@tiptap/core';\n\n/**\n * This extension allows you to create text nodes.\n * @see https://www.tiptap.dev/api/nodes/text\n */\nconst Text = Node.create({\n    name: 'text',\n    group: 'inline',\n});\n\nexport { Text, Text as default };\n//# sourceMappingURL=index.js.map\n","import { Extension } from '@tiptap/core';\nimport { Blockquote } from '@tiptap/extension-blockquote';\nimport { Bold } from '@tiptap/extension-bold';\nimport { BulletList } from '@tiptap/extension-bullet-list';\nimport { Code } from '@tiptap/extension-code';\nimport { CodeBlock } from '@tiptap/extension-code-block';\nimport { Document } from '@tiptap/extension-document';\nimport { Dropcursor } from '@tiptap/extension-dropcursor';\nimport { Gapcursor } from '@tiptap/extension-gapcursor';\nimport { HardBreak } from '@tiptap/extension-hard-break';\nimport { Heading } from '@tiptap/extension-heading';\nimport { History } from '@tiptap/extension-history';\nimport { HorizontalRule } from '@tiptap/extension-horizontal-rule';\nimport { Italic } from '@tiptap/extension-italic';\nimport { ListItem } from '@tiptap/extension-list-item';\nimport { OrderedList } from '@tiptap/extension-ordered-list';\nimport { Paragraph } from '@tiptap/extension-paragraph';\nimport { Strike } from '@tiptap/extension-strike';\nimport { Text } from '@tiptap/extension-text';\n\n/**\n * The starter kit is a collection of essential editor extensions.\n *\n * It’s a good starting point for building your own editor.\n */\nconst StarterKit = Extension.create({\n    name: 'starterKit',\n    addExtensions() {\n        const extensions = [];\n        if (this.options.bold !== false) {\n            extensions.push(Bold.configure(this.options.bold));\n        }\n        if (this.options.blockquote !== false) {\n            extensions.push(Blockquote.configure(this.options.blockquote));\n        }\n        if (this.options.bulletList !== false) {\n            extensions.push(BulletList.configure(this.options.bulletList));\n        }\n        if (this.options.code !== false) {\n            extensions.push(Code.configure(this.options.code));\n        }\n        if (this.options.codeBlock !== false) {\n            extensions.push(CodeBlock.configure(this.options.codeBlock));\n        }\n        if (this.options.document !== false) {\n            extensions.push(Document.configure(this.options.document));\n        }\n        if (this.options.dropcursor !== false) {\n            extensions.push(Dropcursor.configure(this.options.dropcursor));\n        }\n        if (this.options.gapcursor !== false) {\n            extensions.push(Gapcursor.configure(this.options.gapcursor));\n        }\n        if (this.options.hardBreak !== false) {\n            extensions.push(HardBreak.configure(this.options.hardBreak));\n        }\n        if (this.options.heading !== false) {\n            extensions.push(Heading.configure(this.options.heading));\n        }\n        if (this.options.history !== false) {\n            extensions.push(History.configure(this.options.history));\n        }\n        if (this.options.horizontalRule !== false) {\n            extensions.push(HorizontalRule.configure(this.options.horizontalRule));\n        }\n        if (this.options.italic !== false) {\n            extensions.push(Italic.configure(this.options.italic));\n        }\n        if (this.options.listItem !== false) {\n            extensions.push(ListItem.configure(this.options.listItem));\n        }\n        if (this.options.orderedList !== false) {\n            extensions.push(OrderedList.configure(this.options.orderedList));\n        }\n        if (this.options.paragraph !== false) {\n            extensions.push(Paragraph.configure(this.options.paragraph));\n        }\n        if (this.options.strike !== false) {\n            extensions.push(Strike.configure(this.options.strike));\n        }\n        if (this.options.text !== false) {\n            extensions.push(Text.configure(this.options.text));\n        }\n        return extensions;\n    },\n});\n\nexport { StarterKit, StarterKit as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create underline text.\n * @see https://www.tiptap.dev/api/marks/underline\n */\nconst Underline = Mark.create({\n    name: 'underline',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'u',\n            },\n            {\n                style: 'text-decoration',\n                consuming: false,\n                getAttrs: style => (style.includes('underline') ? {} : false),\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setUnderline: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleUnderline: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetUnderline: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-u': () => this.editor.commands.toggleUnderline(),\n            'Mod-U': () => this.editor.commands.toggleUnderline(),\n        };\n    },\n});\n\nexport { Underline, Underline as default };\n//# sourceMappingURL=index.js.map\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4w0s2x0a2z0ure5ba0by2idu3namex4d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dad1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3nd0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0axi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp3ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token = null) {\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly = false) {\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      Object.assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = Object.assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\nconst ASCIINUMERICAL = 'ASCIINUMERICAL'; // contains a-z, 0-9\nconst ALPHANUMERICAL = 'ALPHANUMERICAL'; // contains numbers and letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\nconst FULLWIDTHMIDDLEDOT = 'FULLWIDTHMIDDLEDOT'; // ・\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tALPHANUMERICAL: ALPHANUMERICAL,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASCIINUMERICAL: ASCIINUMERICAL,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEMOJI: EMOJI$1,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHMIDDLEDOT: FULLWIDTHMIDDLEDOT,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tHYPHEN: HYPHEN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tLOCALHOST: LOCALHOST,\n\tNL: NL,\n\tNUM: NUM,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tSCHEME: SCHEME,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tSYM: SYM,\n\tTILDE: TILDE,\n\tTLD: TLD,\n\tUNDERSCORE: UNDERSCORE,\n\tUTLD: UTLD,\n\tUWORD: UWORD,\n\tWORD: WORD,\n\tWS: WS\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tDIGIT: DIGIT,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tLETTER: LETTER,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\n\nconst CR = '\\r'; // carriage-return character\nconst LF = '\\n'; // line-feed character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\nconst OBJECT_REPLACEMENT = '\\ufffc'; // whitespace placeholder that sometimes appears in rich text editors\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes = []) {\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  tt(Start, '・', FULLWIDTHMIDDLEDOT);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n  const Asciinumeric = tr(Num, ASCII_LETTER, ASCIINUMERICAL, {\n    [asciinumeric]: true\n  });\n  const Alphanumeric = tr(Num, LETTER, ALPHANUMERICAL, {\n    [alphanumeric]: true\n  });\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, DIGIT, Asciinumeric);\n  tr(Word, ASCII_LETTER, Word);\n  tr(Asciinumeric, DIGIT, Asciinumeric);\n  tr(Asciinumeric, ASCII_LETTER, Asciinumeric);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, DIGIT, Alphanumeric);\n  tr(UWord, LETTER, UWord);\n  tr(Alphanumeric, DIGIT, Alphanumeric);\n  tr(Alphanumeric, ASCII_LETTER); // Non-accepting\n  tr(Alphanumeric, LETTER, Alphanumeric); // Non-accepting\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Nl = tt(Start, LF, NL, {\n    [whitespace]: true\n  });\n  const Cr = tt(Start, CR, WS, {\n    [whitespace]: true\n  });\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, OBJECT_REPLACEMENT, Ws);\n  tt(Cr, LF, Nl); // \\r\\n\n  tt(Cr, OBJECT_REPLACEMENT, Ws);\n  tr(Cr, SPACE, Ws);\n  tt(Ws, CR); // non-accepting state to avoid mixing whitespaces\n  tt(Ws, LF); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n  tt(Ws, OBJECT_REPLACEMENT, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tt(Emoji, '#'); // no transition, emoji regex seems to match #\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tt(EmojiJoiner, '#');\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word], [DIGIT, Asciinumeric]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord], [DIGIT, Alphanumeric]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: Object.assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender = null) {\n  let o = Object.assign({}, defaults);\n  if (opts) {\n    o = Object.assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tOptions: Options,\n\tdefaults: defaults\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n   */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol = defaults.defaultProtocol) {\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      Object.assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme = defaults.defaultProtocol) {\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBase: MultiToken,\n\tEmail: Email,\n\tMultiToken: MultiToken,\n\tNl: Nl,\n\tText: Text,\n\tUrl: Url,\n\tcreateTokenClass: createTokenClass\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\n\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1({\n  groups\n}) {\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, COLON, COMMA, DOT, EXCLAMATION, PERCENT, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  tt(EmailDomainHyphen, HYPHEN, EmailDomainHyphen);\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  tt(DomainHyphen, HYPHEN, DomainHyphen);\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  tt(SchemeColon, QUERY, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n  return INIT;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} scheme\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash = false) {\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n  return INIT;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\ntokenize.scan = run$1; // for testing\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type = null, opts = null) {\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type = null) {\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, multi as text, tokenize };\n","import { combineTransactionSteps, getChangedRanges, findChildrenInRange, getMarksBetween, getAttributes, Mark, mergeAttributes, markPasteRule } from '@tiptap/core';\nimport { tokenize, find, registerCustomProtocol, reset } from 'linkifyjs';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\n\n// From DOMPurify\n// https://github.com/cure53/DOMPurify/blob/main/src/regexp.ts\nconst UNICODE_WHITESPACE_PATTERN = '[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]';\nconst UNICODE_WHITESPACE_REGEX = new RegExp(UNICODE_WHITESPACE_PATTERN);\nconst UNICODE_WHITESPACE_REGEX_END = new RegExp(`${UNICODE_WHITESPACE_PATTERN}$`);\nconst UNICODE_WHITESPACE_REGEX_GLOBAL = new RegExp(UNICODE_WHITESPACE_PATTERN, 'g');\n\n/**\n * Check if the provided tokens form a valid link structure, which can either be a single link token\n * or a link token surrounded by parentheses or square brackets.\n *\n * This ensures that only complete and valid text is hyperlinked, preventing cases where a valid\n * top-level domain (TLD) is immediately followed by an invalid character, like a number. For\n * example, with the `find` method from Linkify, entering `example.com1` would result in\n * `example.com` being linked and the trailing `1` left as plain text. By using the `tokenize`\n * method, we can perform more comprehensive validation on the input text.\n */\nfunction isValidLinkStructure(tokens) {\n    if (tokens.length === 1) {\n        return tokens[0].isLink;\n    }\n    if (tokens.length === 3 && tokens[1].isLink) {\n        return ['()', '[]'].includes(tokens[0].value + tokens[2].value);\n    }\n    return false;\n}\n/**\n * This plugin allows you to automatically add links to your editor.\n * @param options The plugin options\n * @returns The plugin instance\n */\nfunction autolink(options) {\n    return new Plugin({\n        key: new PluginKey('autolink'),\n        appendTransaction: (transactions, oldState, newState) => {\n            /**\n             * Does the transaction change the document?\n             */\n            const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc);\n            /**\n             * Prevent autolink if the transaction is not a document change or if the transaction has the meta `preventAutolink`.\n             */\n            const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'));\n            /**\n             * Prevent autolink if the transaction is not a document change\n             * or if the transaction has the meta `preventAutolink`.\n             */\n            if (!docChanges || preventAutolink) {\n                return;\n            }\n            const { tr } = newState;\n            const transform = combineTransactionSteps(oldState.doc, [...transactions]);\n            const changes = getChangedRanges(transform);\n            changes.forEach(({ newRange }) => {\n                // Now let’s see if we can add new links.\n                const nodesInChangedRanges = findChildrenInRange(newState.doc, newRange, node => node.isTextblock);\n                let textBlock;\n                let textBeforeWhitespace;\n                if (nodesInChangedRanges.length > 1) {\n                    // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter).\n                    textBlock = nodesInChangedRanges[0];\n                    textBeforeWhitespace = newState.doc.textBetween(textBlock.pos, textBlock.pos + textBlock.node.nodeSize, undefined, ' ');\n                }\n                else if (nodesInChangedRanges.length) {\n                    const endText = newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ');\n                    if (!UNICODE_WHITESPACE_REGEX_END.test(endText)) {\n                        return;\n                    }\n                    textBlock = nodesInChangedRanges[0];\n                    textBeforeWhitespace = newState.doc.textBetween(textBlock.pos, newRange.to, undefined, ' ');\n                }\n                if (textBlock && textBeforeWhitespace) {\n                    const wordsBeforeWhitespace = textBeforeWhitespace.split(UNICODE_WHITESPACE_REGEX).filter(Boolean);\n                    if (wordsBeforeWhitespace.length <= 0) {\n                        return false;\n                    }\n                    const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1];\n                    const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace);\n                    if (!lastWordBeforeSpace) {\n                        return false;\n                    }\n                    const linksBeforeSpace = tokenize(lastWordBeforeSpace).map(t => t.toObject(options.defaultProtocol));\n                    if (!isValidLinkStructure(linksBeforeSpace)) {\n                        return false;\n                    }\n                    linksBeforeSpace\n                        .filter(link => link.isLink)\n                        // Calculate link position.\n                        .map(link => ({\n                        ...link,\n                        from: lastWordAndBlockOffset + link.start + 1,\n                        to: lastWordAndBlockOffset + link.end + 1,\n                    }))\n                        // ignore link inside code mark\n                        .filter(link => {\n                        if (!newState.schema.marks.code) {\n                            return true;\n                        }\n                        return !newState.doc.rangeHasMark(link.from, link.to, newState.schema.marks.code);\n                    })\n                        // validate link\n                        .filter(link => options.validate(link.value))\n                        // check whether should autolink\n                        .filter(link => options.shouldAutoLink(link.value))\n                        // Add link mark.\n                        .forEach(link => {\n                        if (getMarksBetween(link.from, link.to, newState.doc).some(item => item.mark.type === options.type)) {\n                            return;\n                        }\n                        tr.addMark(link.from, link.to, options.type.create({\n                            href: link.href,\n                        }));\n                    });\n                }\n            });\n            if (!tr.steps.length) {\n                return;\n            }\n            return tr;\n        },\n    });\n}\n\nfunction clickHandler(options) {\n    return new Plugin({\n        key: new PluginKey('handleClickLink'),\n        props: {\n            handleClick: (view, pos, event) => {\n                var _a, _b;\n                if (event.button !== 0) {\n                    return false;\n                }\n                if (!view.editable) {\n                    return false;\n                }\n                let a = event.target;\n                const els = [];\n                while (a.nodeName !== 'DIV') {\n                    els.push(a);\n                    a = a.parentNode;\n                }\n                if (!els.find(value => value.nodeName === 'A')) {\n                    return false;\n                }\n                const attrs = getAttributes(view.state, options.type.name);\n                const link = event.target;\n                const href = (_a = link === null || link === void 0 ? void 0 : link.href) !== null && _a !== void 0 ? _a : attrs.href;\n                const target = (_b = link === null || link === void 0 ? void 0 : link.target) !== null && _b !== void 0 ? _b : attrs.target;\n                if (link && href) {\n                    window.open(href, target);\n                    return true;\n                }\n                return false;\n            },\n        },\n    });\n}\n\nfunction pasteHandler(options) {\n    return new Plugin({\n        key: new PluginKey('handlePasteLink'),\n        props: {\n            handlePaste: (view, event, slice) => {\n                const { state } = view;\n                const { selection } = state;\n                const { empty } = selection;\n                if (empty) {\n                    return false;\n                }\n                let textContent = '';\n                slice.content.forEach(node => {\n                    textContent += node.textContent;\n                });\n                const link = find(textContent, { defaultProtocol: options.defaultProtocol }).find(item => item.isLink && item.value === textContent);\n                if (!textContent || !link) {\n                    return false;\n                }\n                return options.editor.commands.setMark(options.type, {\n                    href: link.href,\n                });\n            },\n        },\n    });\n}\n\nconst pasteRegex = /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z]{2,}\\b(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)/gi;\nfunction isAllowedUri(uri, protocols) {\n    const allowedProtocols = [\n        'http',\n        'https',\n        'ftp',\n        'ftps',\n        'mailto',\n        'tel',\n        'callto',\n        'sms',\n        'cid',\n        'xmpp',\n    ];\n    if (protocols) {\n        protocols.forEach(protocol => {\n            const nextProtocol = typeof protocol === 'string' ? protocol : protocol.scheme;\n            if (nextProtocol) {\n                allowedProtocols.push(nextProtocol);\n            }\n        });\n    }\n    return (!uri\n        || uri.replace(UNICODE_WHITESPACE_REGEX_GLOBAL, '').match(new RegExp(\n        // eslint-disable-next-line no-useless-escape\n        `^(?:(?:${allowedProtocols.join('|')}):|[^a-z]|[a-z0-9+.\\-]+(?:[^a-z+.\\-:]|$))`, 'i')));\n}\n/**\n * This extension allows you to create links.\n * @see https://www.tiptap.dev/api/marks/link\n */\nconst Link = Mark.create({\n    name: 'link',\n    priority: 1000,\n    keepOnSplit: false,\n    exitable: true,\n    onCreate() {\n        if (this.options.validate && !this.options.shouldAutoLink) {\n            // Copy the validate function to the shouldAutoLink option\n            this.options.shouldAutoLink = this.options.validate;\n            console.warn('The `validate` option is deprecated. Rename to the `shouldAutoLink` option instead.');\n        }\n        this.options.protocols.forEach(protocol => {\n            if (typeof protocol === 'string') {\n                registerCustomProtocol(protocol);\n                return;\n            }\n            registerCustomProtocol(protocol.scheme, protocol.optionalSlashes);\n        });\n    },\n    onDestroy() {\n        reset();\n    },\n    inclusive() {\n        return this.options.autolink;\n    },\n    addOptions() {\n        return {\n            openOnClick: true,\n            linkOnPaste: true,\n            autolink: true,\n            protocols: [],\n            defaultProtocol: 'http',\n            HTMLAttributes: {\n                target: '_blank',\n                rel: 'noopener noreferrer nofollow',\n                class: null,\n            },\n            isAllowedUri: (url, ctx) => !!isAllowedUri(url, ctx.protocols),\n            validate: url => !!url,\n            shouldAutoLink: url => !!url,\n        };\n    },\n    addAttributes() {\n        return {\n            href: {\n                default: null,\n                parseHTML(element) {\n                    return element.getAttribute('href');\n                },\n            },\n            target: {\n                default: this.options.HTMLAttributes.target,\n            },\n            rel: {\n                default: this.options.HTMLAttributes.rel,\n            },\n            class: {\n                default: this.options.HTMLAttributes.class,\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'a[href]',\n                getAttrs: dom => {\n                    const href = dom.getAttribute('href');\n                    // prevent XSS attacks\n                    if (!href\n                        || !this.options.isAllowedUri(href, {\n                            defaultValidate: url => !!isAllowedUri(url, this.options.protocols),\n                            protocols: this.options.protocols,\n                            defaultProtocol: this.options.defaultProtocol,\n                        })) {\n                        return false;\n                    }\n                    return null;\n                },\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        // prevent XSS attacks\n        if (!this.options.isAllowedUri(HTMLAttributes.href, {\n            defaultValidate: href => !!isAllowedUri(href, this.options.protocols),\n            protocols: this.options.protocols,\n            defaultProtocol: this.options.defaultProtocol,\n        })) {\n            // strip out the href\n            return [\n                'a',\n                mergeAttributes(this.options.HTMLAttributes, { ...HTMLAttributes, href: '' }),\n                0,\n            ];\n        }\n        return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setLink: attributes => ({ chain }) => {\n                const { href } = attributes;\n                if (!this.options.isAllowedUri(href, {\n                    defaultValidate: url => !!isAllowedUri(url, this.options.protocols),\n                    protocols: this.options.protocols,\n                    defaultProtocol: this.options.defaultProtocol,\n                })) {\n                    return false;\n                }\n                return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run();\n            },\n            toggleLink: attributes => ({ chain }) => {\n                const { href } = attributes;\n                if (!this.options.isAllowedUri(href, {\n                    defaultValidate: url => !!isAllowedUri(url, this.options.protocols),\n                    protocols: this.options.protocols,\n                    defaultProtocol: this.options.defaultProtocol,\n                })) {\n                    return false;\n                }\n                return chain()\n                    .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\n                    .setMeta('preventAutolink', true)\n                    .run();\n            },\n            unsetLink: () => ({ chain }) => {\n                return chain()\n                    .unsetMark(this.name, { extendEmptyMarkRange: true })\n                    .setMeta('preventAutolink', true)\n                    .run();\n            },\n        };\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: text => {\n                    const foundLinks = [];\n                    if (text) {\n                        const { protocols, defaultProtocol } = this.options;\n                        const links = find(text).filter(item => item.isLink\n                            && this.options.isAllowedUri(item.value, {\n                                defaultValidate: href => !!isAllowedUri(href, protocols),\n                                protocols,\n                                defaultProtocol,\n                            }));\n                        if (links.length) {\n                            links.forEach(link => foundLinks.push({\n                                text: link.value,\n                                data: {\n                                    href: link.href,\n                                },\n                                index: link.start,\n                            }));\n                        }\n                    }\n                    return foundLinks;\n                },\n                type: this.type,\n                getAttributes: match => {\n                    var _a;\n                    return {\n                        href: (_a = match.data) === null || _a === void 0 ? void 0 : _a.href,\n                    };\n                },\n            }),\n        ];\n    },\n    addProseMirrorPlugins() {\n        const plugins = [];\n        const { protocols, defaultProtocol } = this.options;\n        if (this.options.autolink) {\n            plugins.push(autolink({\n                type: this.type,\n                defaultProtocol: this.options.defaultProtocol,\n                validate: url => this.options.isAllowedUri(url, {\n                    defaultValidate: href => !!isAllowedUri(href, protocols),\n                    protocols,\n                    defaultProtocol,\n                }),\n                shouldAutoLink: this.options.shouldAutoLink,\n            }));\n        }\n        if (this.options.openOnClick === true) {\n            plugins.push(clickHandler({\n                type: this.type,\n            }));\n        }\n        if (this.options.linkOnPaste) {\n            plugins.push(pasteHandler({\n                editor: this.editor,\n                defaultProtocol: this.options.defaultProtocol,\n                type: this.type,\n            }));\n        }\n        return plugins;\n    },\n});\n\nexport { Link, Link as default, isAllowedUri, pasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Extension, isNodeEmpty } from '@tiptap/core';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\nimport { Decoration, DecorationSet } from '@tiptap/pm/view';\n\n/**\n * This extension allows you to add a placeholder to your editor.\n * A placeholder is a text that appears when the editor or a node is empty.\n * @see https://www.tiptap.dev/api/extensions/placeholder\n */\nconst Placeholder = Extension.create({\n    name: 'placeholder',\n    addOptions() {\n        return {\n            emptyEditorClass: 'is-editor-empty',\n            emptyNodeClass: 'is-empty',\n            placeholder: 'Write something …',\n            showOnlyWhenEditable: true,\n            showOnlyCurrent: true,\n            includeChildren: false,\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('placeholder'),\n                props: {\n                    decorations: ({ doc, selection }) => {\n                        const active = this.editor.isEditable || !this.options.showOnlyWhenEditable;\n                        const { anchor } = selection;\n                        const decorations = [];\n                        if (!active) {\n                            return null;\n                        }\n                        const isEmptyDoc = this.editor.isEmpty;\n                        doc.descendants((node, pos) => {\n                            const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize;\n                            const isEmpty = !node.isLeaf && isNodeEmpty(node);\n                            if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\n                                const classes = [this.options.emptyNodeClass];\n                                if (isEmptyDoc) {\n                                    classes.push(this.options.emptyEditorClass);\n                                }\n                                const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                                    class: classes.join(' '),\n                                    'data-placeholder': typeof this.options.placeholder === 'function'\n                                        ? this.options.placeholder({\n                                            editor: this.editor,\n                                            node,\n                                            pos,\n                                            hasAnchor,\n                                        })\n                                        : this.options.placeholder,\n                                });\n                                decorations.push(decoration);\n                            }\n                            return this.options.includeChildren;\n                        });\n                        return DecorationSet.create(doc, decorations);\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nexport { Placeholder, Placeholder as default };\n//# sourceMappingURL=index.js.map\n","import { Editor } from '@tiptap/core'\nimport StarterKit from '@tiptap/starter-kit'\nimport Underline from '@tiptap/extension-underline'\nimport Link from '@tiptap/extension-link'\nimport Placeholder from '@tiptap/extension-placeholder'\n\n/**\n * Strata Editor factory function for Alpine.js integration\n * Creates a rich text editor component with Tiptap\n */\nexport function createStrataEditor(config = {}) {\n  let editor; // Store editor outside Alpine's reactive system\n  \n  return {\n    htmlContent: typeof config.value === 'string' ? config.value : '',\n    updatedAt: Date.now(), // Force Alpine to rerender on editor changes\n    disabled: config.disabled || false,\n    \n    async init() {\n      try {\n        const _this = this;\n        \n        // Create the editor instance\n        editor = new Editor({\n          element: this.$refs.editorElement,\n          extensions: [\n            StarterKit.configure({\n              heading: {\n                levels: [1, 2, 3],\n              },\n            }),\n            Underline,\n            Link.configure({\n              openOnClick: false,\n              HTMLAttributes: {\n                class: 'text-primary hover:text-primary-700 underline cursor-pointer',\n              },\n            }),\n            Placeholder.configure({\n              placeholder: config.placeholder || 'Write something...',\n            }),\n          ],\n          content: _this.htmlContent || '',\n          editable: !config.disabled,\n          editorProps: {\n            attributes: {\n              class: 'prose prose-sm dark:prose-invert max-w-none focus:outline-hidden p-3',\n              style: config.minHeight ? `min-height: ${config.minHeight - 24}px;` : '',\n            },\n          },\n          onCreate({ editor }) {\n            _this.updatedAt = Date.now();\n          },\n          onUpdate({ editor }) {\n            _this.htmlContent = editor.getHTML();\n            _this.updatedAt = Date.now();\n          },\n          onSelectionUpdate({ editor }) {\n            _this.updatedAt = Date.now();\n          },\n        });\n      } catch (error) {\n        console.error('Failed to initialize Strata Editor:', error);\n      }\n    },\n    \n    isLoaded() {\n      return editor;\n    },\n    \n    isActive(type, opts = {}) {\n      return editor ? editor.isActive(type, opts) : false;\n    },\n\n    // Toolbar methods\n    toggleBold() {\n      if (editor) editor.chain().focus().toggleBold().run();\n    },\n\n    toggleItalic() {\n      if (editor) editor.chain().focus().toggleItalic().run();\n    },\n\n    toggleHeading(level) {\n      if (editor) editor.chain().focus().toggleHeading({ level }).run();\n    },\n\n    toggleBulletList() {\n      if (editor) editor.chain().focus().toggleBulletList().run();\n    },\n\n    toggleOrderedList() {\n      if (editor) editor.chain().focus().toggleOrderedList().run();\n    },\n\n    undo() {\n      if (editor) editor.chain().focus().undo().run();\n    },\n\n    redo() {\n      if (editor) editor.chain().focus().redo().run();\n    },\n\n    canUndo() {\n      return editor ? editor.can().undo() : false;\n    },\n\n    canRedo() {\n      return editor ? editor.can().redo() : false;\n    },\n    \n    toggleLink() {\n      if (!editor) return;\n      \n      if (editor.isActive('link')) {\n        editor.chain().focus().unsetLink().run();\n      } else {\n        const url = prompt('Enter URL:');\n        if (url) {\n          editor.chain().focus().setLink({ href: url }).run();\n        }\n      }\n    },\n    \n    destroy() {\n      if (editor) {\n        editor.destroy();\n        editor = null;\n      }\n    }\n  };\n}\n\n// Auto-register with Alpine.js if it's available\nif (typeof window !== 'undefined') {\n  // Wait for Alpine to be available\n  document.addEventListener('alpine:init', () => {\n    if (window.Alpine) {\n      window.Alpine.data('strataEditor', createStrataEditor);\n    }\n  });\n  \n  // Also make it available globally for manual registration\n  window.createStrataEditor = createStrataEditor;\n}"],"names":["OrderedMap","content","key","i","found","value","newKey","self","place","without","f","map","result","prop","findDiffStart","a","b","pos","childA","childB","j","inner","findDiffEnd","posA","posB","iA","iB","size","same","minSize","Fragment","from","to","nodeStart","parent","child","end","start","blockSeparator","leafText","text","first","node","nodeText","other","last","index","current","copy","p","otherPos","retIndex","curPos","cur","n","schema","array","joined","nodes","offset","compareDeep","Mark$1","Mark","type","attrs","set","placed","obj","_","json","mark","marks","ReplaceError","Slice","openStart","openEnd","fragment","insertInto","removeRange","openIsolating","indexTo","offsetTo","dist","insert","replace","$from","$to","slice","replaceOuter","depth","close","prepareSliceForReplace","replaceThreeWay","replaceTwoWay","checkJoin","main","sub","joinable","$before","$after","addNode","target","addRange","$start","$end","startIndex","endIndex","$along","extra","ResolvedPos","path","parentOffset","val","dOff","tmp","after","next","pred","d","NodeRange","str","doc","rem","cache","resolveCache","elt","ResolveCache","resolveCacheSize","emptyAttrs","Node$1","Node","startPos","includeParents","name","wrapMarks","match","replacement","one","two","m","TextNode","base","ContentMatch","validEnd","string","nodeTypes","stream","TokenStream","expr","parseExpr","dfa","nfa","checkForDeadEnds","frag","toEnd","seen","search","types","finished","tp","computed","active","scan","out","tok","exprs","parseExprSeq","parseExprSubscript","parseExprAtom","parseExprRange","parseNum","min","max","resolveName","typeName","connect","compile","edge","term","edges","loop","cmp","nullFrom","labeled","explore","states","state","work","dead","defaultAttrs","defaults","attrName","attr","computeAttrs","built","given","checkAttrs","values","initAttrs","Attribute","NodeType$1","NodeType","spec","group","before","matched","markType","topType","validateType","options","MarkType","rank","Schema","instanceSpec","contentExprCache","contentExpr","markExpr","gatherMarks","excl","ok","isTagRule","rule","isStyleRule","DOMParser","rules","matchedStyles","r","dom","context","ParseContext","matches","style","priority","blockTags","ignoreTags","listTags","OPT_PRESERVE_WS","OPT_PRESERVE_WS_FULL","OPT_OPEN_LEFT","wsOptionsFor","preserveWhitespace","NodeContext","solid","fill","wrap","parser","isOpen","topNode","topContext","topOptions","top","preserveWS","nodeBefore","domNodeBefore","matchAfter","outerWS","ruleID","normalizeList","sync","oldNeedsBlock","innerMarks","styles","continueAfter","nodeType","startIn","contentDOM","cautious","route","penalty","cx","block","nodeMarks","markMayApply","applyMarks","textNode","parts","option","useRoot","minDepth","part","$context","deflt","prevItem","selector","DOMSerializer","keep","rendered","add","markDOM","renderSpec","inline","toDOM","structure","xmlNS","blockArraysIn","gatherToDOM","suspiciousAttributeCache","suspiciousAttributes","suspiciousAttributesInner","tagName","suspicious","space","innerContent","lower16","factor16","makeRecover","recoverIndex","recoverOffset","DEL_BEFORE","DEL_AFTER","DEL_ACROSS","DEL_SIDE","MapResult","delInfo","recover","StepMap","ranges","inverted","diff","assoc","simple","oldIndex","newIndex","oldSize","newSize","side","del","oldStart","newStart","Mapping","maps","mirror","mirrors","mapping","startSize","mirr","totalSize","inverse","corr","stepsByID","Step","id","stepClass","StepResult","failed","message","e","mapFragment","mapped","AddMarkStep","oldSlice","RemoveMarkStep","AddNodeMarkStep","updated","newSet","RemoveNodeMarkStep","ReplaceStep","contentBetween","ReplaceAroundStep","gapFrom","gapTo","gap","inserted","addMark","tr","removed","added","removing","adding","s","removeMark","step","toRemove","clearIncompatible","parentType","clearNewlines","replSteps","allowed","newline","canCut","liftTarget","range","lift","gapStart","gapEnd","splitting","findWrapping","innerRange","around","findWrappingOutside","findWrappingInside","withAttrs","outer","inside","innerMatch","wrappers","setBlockType","mapFrom","attrsHere","canChangeType","convertNewlines","pre","supportLinebreak","replaceLinebreaks","startM","endM","replaceNewlines","$pos","setNodeMarkup","newNode","canSplit","typesAfter","innerType","rest","overrideChild","baseType","split","typeAfter","canJoin","canAppendWithSubstitutedLinebreaks","linebreakReplacement","joinPoint","dir","join","beforeType","$full","insertPoint","dropPoint","pass","bias","insertPos","fits","wrapping","replaceStep","fitsTrivially","Fitter","unplaced","fit","moveInline","placedSize","startDepth","sliceDepth","contentAt","frontierDepth","inject","openAtEnd","dropFromFragment","taken","openEndCount","closeNodeStart","addToFragment","level","contentAfterFits","dropInner","count","open","invalidMarks","definesContent","replaceRange","targetDepths","coveredDepths","preferredTarget","preferredTargetIndex","leftNodes","preferredDepth","leftNode","def","openDepth","targetDepth","expand","closeFragment","startSteps","oldOpen","newOpen","replaceRangeWith","point","deleteRange","covered","AttrStep","DocAttrStep","TransformError","err","Transform","steps","classesById","Selection","$anchor","$head","SelectionRange","lastNode","lastParent","selectionToInsertionEnd","textOnly","TextSelection","findSelectionIn","AllSelection","cls","selectionClass","warnedAboutTextSelection","checkTextSelection","TextBookmark","anchor","head","dPos","NodeSelection","deleted","NodeBookmark","sel","AllBookmark","startLen","_from","_to","_newFrom","newTo","UPDATED_SEL","UPDATED_MARKS","UPDATED_SCROLL","Transaction","selection","time","inheritMarks","bind","FieldDesc","desc","baseFields","config","instance","_marks","_old","prev","Configuration","plugins","plugin","EditorState","ignore","rootTr","trs","newState","haveNew","oldState","newInstance","fields","field","$config","pluginFields","bindProps","Plugin","createKey","keys","PluginKey","domIndex","parentNode","reusedRange","textRange","clearReusedRange","isEquivalentPosition","off","targetNode","targetOff","scanFor","atomElements","_a","nodeSize","hasBlockDesc","textNodeBefore$1","textNodeAfter$1","isOnEdge","atStart","atEnd","selectionCollapsed","domSel","keyEvent","keyCode","event","deepActiveElement","caretFromPoint","x","y","nav","agent","ie_edge","ie_upto10","ie_11up","ie","ie_version","gecko","_chrome","chrome","chrome_version","safari","ios","mac","windows","android","webkit","webkit_version","windowRect","vp","getSide","clientRect","rect","scaleX","scaleY","scrollRectIntoView","view","startDOM","scrollThreshold","scrollMargin","atTop","bounding","moveX","moveY","startX","startY","dX","dY","storeScrollPos","refDOM","refTop","localRect","scrollStack","stack","resetScrollPos","newRefTop","restoreScrollStack","dTop","left","preventScrollSupported","focusPreventScroll","stored","findOffsetInNode","coords","closest","dxClosest","coordsClosest","rowBot","rowTop","firstBelow","coordsBelow","childIndex","rects","dx","findOffsetInText","len","singleRect","inRect","targetKludge","posFromElement","posFromCaret","outsideBlock","sawBlock","elementFromPoint","element","box","startI","posAtCoords","caret","nonZero","BIDI","coordsAtPos","atom","supportEmptyRange","rectBefore","rectAfter","flattenV","takeSide","flattenH","withFlushedState","viewState","endOfTextblockVertical","nearest","boxes","maybeRTL","endOfTextblockHorizontal","oldNode","oldOff","anchorNode","anchorOffset","oldBidiLevel","parentDOM","newOff","cachedState","cachedDir","cachedResult","endOfTextblock","NOT_DIRTY","CHILD_DIRTY","CONTENT_DIRTY","NODE_DIRTY","ViewDesc","children","widget","outerDeco","innerDeco","nodeName","domBefore","domAfter","onlyNodes","nodeDOM","TrailingHackViewDesc","WidgetViewDesc","enter","fromOffset","toOffset","childBase","force","anchorDOM","headDOM","selRange","brKludge","domSelExtended","mutation","startInside","endInside","dirty","stop","CompositionViewDesc","textDOM","mut","MarkViewDesc","custom","replaceNodes","NodeViewDesc","descObj","applyOuterDeco","CustomNodeViewDesc","TextViewDesc","sameOuterDeco","composition","localComposition","compositionInChild","updater","ViewTreeUpdater","iterDeco","insideNode","compIndex","renderDescs","iosHacks","textPos","findTextInFragment","needsWrap","oldDOM","patchOuterDeco","computeOuterDeco","docViewDesc","docView","skip","descs","written","childDOM","rm","OuterDecoLevel","noDeco","outerDOM","prevComputed","curComputed","curDOM","deco","patchAttributes","prevList","curList","lock","preMatch","maxKeep","markDesc","targetDesc","domNode","nextDOM","locked","wrapper","ch","lastChild","hack","parentDesc","curDesc","descI","fI","compareSide","onWidget","onNode","locals","decoIndex","restNode","parentIndex","widgets","cutAt","oldCSS","childStart","selectionFromDOM","origin","nearestDesc","inWidget","nearestDescNode","selectionBetween","editorOwnsSelection","hasSelection","selectionToDOM","syncNodeSelection","curSel","selectCursorWrapper","resetEditableFrom","resetEditableTo","brokenSelectBetweenUneditable","temporarilyEditableNear","resetEditable","removeClassOnSelectionChange","setEditable","img","clearNodeSelection","hasFocusAndSelection","anchorInRightPlace","moveSelectionBlock","$side","apply","selectHorizontally","mods","$newHead","nodePos","nodeLen","isIgnorable","skipIgnoredNodes","skipIgnoredNodesBefore","skipIgnoredNodesAfter","moveNode","moveOffset","isBlockNode","setSelFocus","textNodeAfter","textNodeBefore","findDirection","mid","selectVertically","beyond","stopNativeHorizontalDelete","empty","nextNode","switchEditable","safariDownArrowBug","focusNode","focusOffset","getMods","captureKeyDown","code","serializeForClipboard","serializer","detachedDoc","firstChild","wrapMap","parseFromClipboard","html","plainText","inCode","asText","parsed","readHTML","restoreReplacedSpaces","contextNode","sliceData","inlineParents","addContext","closeSlice","normalizeSiblings","lastWrap","inLast","addToSibling","closeRight","wrapped","withWrappers","sibling","closeRange","_detachedDoc","_policy","maybeWrapTrusted","trustedTypes","metas","firstTag","handlers","editHandlers","passiveHandlers","InputState","initInput","handler","eventBelongsToView","runCustomHandler","ensureListeners","setSelectionOrigin","destroyInput","currentHandlers","dispatchEvent","_event","inOrNearComposition","now","eventCoords","isNear","click","dy","runHandlerOnContext","propName","updateSelection","selectClickedLeaf","selectClickedNode","selectedNode","selectAt","handleSingleClick","selectNode","handleDoubleClick","handleTripleClick","defaultTripleClick","forceDOMFlush","endComposition","selectNodeModifier","flushed","MouseDown","targetPos","timeoutComposition","scheduleComposeEnd","delay","clearComposition","timestampFromCustomEvent","findCompositionNode","textBefore","textAfter","descAfter","lastChanged","descBefore","restarting","captureCopy","brokenClipboardAPI","cut","data","sliceSingleNode","capturePaste","plain","doPaste","preferPlain","singleNode","getText","clipboardData","uris","Dragging","move","dragCopyModifier","dragMoves","moves","test","mouseDown","draggedSlice","dragging","eventPos","$mouse","isNode","beforeInsert","domChangeCount","$cursor","compareObjs","WidgetType","noSpec","span","oldOffset","Decoration","InlineType","none","DecorationSet","local","decorations","buildTree","predicate","childOff","newLocal","mapChildren","byPos","childNode","childOffset","baseOffset","takeSpansForNode","moveSpans","withoutNulls","dec","localSet","DecorationGroup","removeOverlap","members","mappedDecos","member","sorted","oldChildren","moved","oldEnd","newEnd","dSize","mustRebuild","fromLocal","toLocal","mapAndGatherRemainingDecorations","spans","gather","hasNulls","localStart","subtree","working","insertAhead","viewDecorations","observeOptions","useCharData","SelectionState","DOMObserver","handleDOMChange","mutations","take","ancestors","container","newSel","typeOver","brs","br","blockParent","readSel","checkCSS","previousSibling","nextSibling","cssChecked","cssCheckWarned","rangeToSelectionRange","currentAnchor","safariShadowSelectionRange","read","parseBetween","from_","to_","find","startDoc","ruleFromNode","isInline","readDOMChange","addedNodes","compositionID","shared","parse","compare","preferredPos","preferredSide","change","findDiff","resolveSelection","$fromA","inlineChange","nextSel","looksLikeBackspace","chFrom","chTo","mkTr","markChange","isMarkChange","parsedSel","curMarks","prevMarks","update","old","$newStart","$newEnd","skipClosingAndOpening","$next","fromEnd","mayOpen","endA","endB","adjust","isSurrogatePair","EditorView","props","checkStateComponent","getEditable","updateCursorWrapper","buildNodeViews","computeDocDeco","prevProps","redraw","updateSel","pluginsChanged","nodeViews","changedNodeViews","scroll","updateDoc","oldScrollPos","forceSelUpdate","selectionContextChanged","chromeKludge","prevState","pluginView","movedPos","cached","dispatchTransaction","sel1","sel2","nA","nB","shift","keyName","ignoreKey","normalizeKeyName","alt","ctrl","meta","mod","normalize","modifiers","keymap","bindings","keydownHandler","baseName","direct","noShift","fromCode","deleteSelection","dispatch","atBlockStart","joinBackward","$cut","findCutBefore","deleteBarrier","textblockAt","delStep","joinTextblockBackward","joinTextblocksAround","joinTextblockForward","atBlockEnd","findCutAfter","beforeText","beforePos","afterText","afterPos","only","selectNodeBackward","joinForward","selectNodeForward","joinUp","nodeSel","joinDown","newlineInCode","defaultBlockAt","exitCode","above","createParagraphNear","liftEmptyBlock","splitBlockAs","splitNode","splitDepth","splitPos","can","$first","splitBlock","selectParentNode","joinMaybeClear","conn","isolated","canDelAfter","$joinAt","selAfter","at","afterDepth","selectTextblockSide","selectTextblockStart","selectTextblockEnd","wrapIn","applicable","chainCommands","commands","wrapInList","listType","wrapRangeInList","doJoin","outerRange","$insert","doWrapInList","joinBefore","liftListItem","itemType","liftToOuterList","liftOutOfList","endOfList","list","item","indexBefore","sinkListItem","nestedBefore","createChainableState","transaction","storedMarks","CommandManager","rawCommands","editor","command","args","callback","startTr","shouldDispatch","callbacks","hasStartTransaction","run","chain","EventEmitter","fn","onceFn","getExtensionField","extension","splitExtensions","extensions","baseExtensions","nodeExtensions","markExtensions","getAttributesFromExtensions","extensionAttributes","nodeAndMarkExtensions","defaultAttribute","addGlobalAttributes","globalAttribute","attribute","addAttributes","attributes","mergedAttr","getNodeType","nameOrType","mergeAttributes","objects","items","mergedAttributes","valueClasses","existingClasses","insertClasses","valueClass","newStyles","existingStyles","styleMap","property","getRenderedAttributes","nodeOrMark","isFunction","callOrReturn","isEmptyObject","fromString","injectExtensionAttributesToParseRule","parseRule","oldAttributes","newAttributes","cleanUpSchemaItem","getSchemaByResolvedExtensions","allAttributes","extraNodeFields","extendNodeSchema","extensionAttribute","parseHTML","renderHTML","renderText","extraMarkFields","extendMarkSchema","getSchemaTypeByName","isExtensionRulesEnabled","enabled","enabledExtension","getHTMLFromFragment","documentFragment","getTextContentFromNodes","maxMatch","sliceEndPos","_b","chunk","isRegExp","InputRule","inputRuleMatcherHandler","inputRuleMatch","run$1","inputRulesPlugin","simulatedInputMeta","getType","isPlainObject","mergeDeep","source","output","extendedConfig","currentPos","currentMarks","isNumber","PasteRule","pasteRuleMatcherHandler","pasteRuleMatch","pasteEvent","dropEvent","resolvedFrom","resolvedTo","textToMatch","tiptapDragFromOtherEditor","createClipboardPasteEvent","pasteRulesPlugin","dragSourceElement","isPastedFromProseMirror","isDroppedFromProseMirror","processEvent","pasteEvt","chainableState","handleDragstart","handleDragend","dragFromOtherEditor","_view","transactions","isPaste","isDrop","simulatedPasteMeta","isSimulatedPaste","findDuplicates","filtered","el","ExtensionManager","resolvedExtensions","duplicatedNames","addExtensions","priorityA","priorityB","addCommands","inputRules","pasteRules","allPlugins","addKeyboardShortcuts","defaultBindings","shortcut","method","keyMapPlugin","addInputRules","addPasteRules","addProseMirrorPlugins","proseMirrorPlugins","addNodeView","nodeview","getPos","innerDecorations","HTMLAttributes","onBeforeCreate","onCreate","onUpdate","onSelectionUpdate","onTransaction","onFocus","onBlur","onDestroy","Extension","getTextBetween","startNode","textSerializers","textSerializer","getTextSerializersFromSchema","ClipboardTextSerializer","blur","clearContent","emitUpdate","clearNodes","$mappedFrom","$mappedTo","nodeRange","targetLiftDepth","defaultType","createParagraphNear$1","originRange","contentSlice","newPos","deleteCurrentNode","currentNode","deleteNode","typeOrName","deleteSelection$1","exitCode$1","objectIncludes","object1","object2","findMarkInSet","k","isMarkInSet","getMarkRange","endPos","getMarkType","extendMarkRange","newSelection","isTextSelection","minMax","resolveFocusPosition","position","selectionAtStart","selectionAtEnd","minPos","maxPos","isAndroid","isiOS","focus","delayedFocus","isSameSelection","forEach","insertContent","removeWhitespaces","elementFromString","wrappedValue","createNodeFromContent","isJSONContent","isTextContent","error","hasInvalidContent","invalidContent","contentCheckSchema","isFragment","nodeOrFragment","insertContentAt","emitContentError","parseOptions","isOnlyTextContent","isOnlyBlockContent","newContent","v","joinUp$1","joinDown$1","joinBackward$1","joinForward$1","joinItemBackward","joinItemForward","joinTextblockBackward$1","joinTextblockForward$1","isMacOS","keyboardShortcut","capturedTransaction","newStep","isNodeActive","nodeRanges","relativeFrom","relativeTo","selectionRange","matchedNodeRanges","sum","lift$1","liftEmptyBlock$1","liftListItem$1","newlineInCode$1","getSchemaTypeNameByName","deleteProps","propOrProps","newObj","resetAttributes","schemaType","scrollIntoView","selectAll","selectNodeBackward$1","selectNodeForward$1","selectParentNode$1","selectTextblockEnd$1","selectTextblockStart$1","createDocument","setContent","document","getMarkAttributes","markItem","combineTransactionSteps","oldDoc","transform","findChildrenInRange","nodesWithPos","findParentNodeClosestToPos","findParentNode","getNodeAttributes","nodeItem","getAttributes","removeDuplicates","by","simplifyChangedRanges","changes","uniqueChanges","otherChange","getChangedRanges","stepMap","getMarksBetween","getSplittedAttributes","isMarkActive","markRanges","matchedRange","markRange","excludedRange","isActive","isList","isNodeEmpty","checkChildren","ignoreWhitespace","isContentEmpty","isNodeSelection","canSetMark","newMarkType","cursor","someNodeSupportsMark","_pos","parentAllowsMarkType","currentMarksAllowMarkType","otherMark","setMark","trimmedFrom","trimmedTo","setMeta","setNode","attributesToCopy","updatedState","setNodeSelection","setTextSelection","resolvedEnd","sinkListItem$1","ensureMarks","splittableMarks","filteredMarks","keepMarks","splitListItem","overrideAttrs","grandParent","depthBefore","depthAfter","newNextTypeAttributes","nextType","newTypeAttributes","joinListBackwards","joinListForwards","nodeAfter","listTypeOrName","itemTypeOrName","parentList","canWrapInList","extendEmptyMarkRange","toggleTypeOrName","toggleType","undoable","toUndo","lastPos","trimmedFrom2","trimmedTo2","wrapIn$1","wrapInList$1","Commands","Drop","Editable","focusEventsPluginKey","FocusEvents","Keymap","handleBackspace","$parentPos","parentIsIsolating","parentPos","isAtStart","handleDelete","baseKeymap","pcKeymap","macKeymap","docChanges","ignoreTr","allFrom","allEnd","Paste","Tabindex","NodePos","isBlock","isNonTextAtom","childNodePos","nodeAttributes","attrKeys","firstItemOnly","childPos","createStyleTag","nonce","suffix","tiptapStyleTag","styleNode","Editor","editable","handlePlugins","nameOrPluginKeyToRemove","prevPlugins","nameOrPluginKey","allExtensions","ext","selectionHasChanged","nameOrAttributes","attributesOrUndefined","markInputRule","captureGroup","fullMatch","startSpaces","textStart","textEnd","markEnd","nodeInputRule","matchStart","lastChar","insertionStart","textblockTypeInputRule","wrappingInputRule","blockRange","markPasteRule","canInsertNode","inputRegex","Blockquote","starInputRegex","starPasteRegex","underscoreInputRegex","underscorePasteRegex","Bold","ListItemName","TextStyleName","BulletList","inputRule","pasteRegex","Code","backtickInputRegex","tildeInputRegex","CodeBlock","languageClassPrefix","language","className","isAtEnd","endsWithDoubleNewline","vscode","vscodeData","Document","dropCursor","editorView","DropCursorView","editorDOM","editorRect","nodeRect","halfWidth","parentLeft","parentTop","parentScaleX","parentScaleY","timeout","disableDropCursor","disabled","Dropcursor","GapCursor","GapBookmark","closedBefore","closedAfter","override","mustMove","$cur","gapCursor","drawGapCursor","handleClick","handleKeyDown","beforeinput","arrow","axis","dirStr","$found","clickPos","Gapcursor","HardBreak","Heading","GOOD_LEAF_SIZE","RopeSequence","Append","Leaf","prototypeAccessors","right","leftLen","max_empty_items","Branch","eventCount","preserveItems","remap","remaining","addAfter","addBefore","Item","histOptions","newItems","oldItems","lastItem","merged","overflow","DEPTH_OVERFLOW","cutOffEvents","mirrorPos","rebasedTransform","rebasedCount","rebasedItems","newUntil","iRebased","newMaps","branch","upto","events","newItem","cutPoint","mirrorOffset","HistoryState","done","undone","prevRanges","prevTime","prevComposition","applyTransaction","history","historyTr","historyKey","rebased","closeHistoryKey","appended","mustPreserveItems","rangesFor","newGroup","isAdjacentTo","mapRanges","adjacent","histTransaction","redo","pop","newHist","cachedPreserveItems","cachedPreserveItemsPlugins","hist","inputType","undo","buildCommand","History","HorizontalRule","$originFrom","$originTo","currentChain","posAfter","Italic","ListItem","OrderedList","attributesWithoutStart","Paragraph","Strike","Text","StarterKit","Underline","encodedTlds","encodedUtlds","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","groups","addToGroups","t","flags","flagsForToken","c","State","token","input","nextState","regex","exactOnly","inputs","regexp","templateState","allFlags","ta","ts","tt","WORD","UWORD","ASCIINUMERICAL","ALPHANUMERICAL","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL","OPENBRACE","CLOSEBRACE","OPENBRACKET","CLOSEBRACKET","OPENPAREN","CLOSEPAREN","OPENANGLEBRACKET","CLOSEANGLEBRACKET","FULLWIDTHLEFTPAREN","FULLWIDTHRIGHTPAREN","LEFTCORNERBRACKET","RIGHTCORNERBRACKET","LEFTWHITECORNERBRACKET","RIGHTWHITECORNERBRACKET","FULLWIDTHLESSTHAN","FULLWIDTHGREATERTHAN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","FULLWIDTHMIDDLEDOT","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","ASCII_LETTER","LETTER","EMOJI","DIGIT","SPACE","CR","LF","EMOJI_VARIATION","EMOJI_JOINER","OBJECT_REPLACEMENT","tlds","utlds","init$2","customSchemes","Start","decodeTlds","Num","Asciinumeric","Alphanumeric","Word","UWord","Nl","Cr","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","fastts","sch","iterable","stringToArray","charCount","tokens","charCursor","tokenLength","latestAccepting","sinceAccepts","charsSinceAccepts","second","char","defaultt","jr","encoded","words","digits","popDigitCount","popCount","noop","Options","opts","defaultRender","o","ignoredTags","uppercaseIgnoredTags","ir","operator","isCallable","MultiToken","truncate","formatted","protocol","href","formattedHref","rel","eventListeners","createTokenClass","Token","Email","Url","makeState","arg","init$1","qsAccepting","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","bracketPairs","OPEN","CLOSE","UrlOpen","UrlOpenQ","UrlOpenSyms","multis","textTokens","secondState","multiLength","initMultiToken","Multi","subtokens","startIdx","endIdx","warn","warnAdvice","INIT","reset","registerCustomProtocol","optionalSlashSlash","init","tokenize","UNICODE_WHITESPACE_PATTERN","UNICODE_WHITESPACE_REGEX","UNICODE_WHITESPACE_REGEX_END","UNICODE_WHITESPACE_REGEX_GLOBAL","isValidLinkStructure","autolink","preventAutolink","newRange","nodesInChangedRanges","textBlock","textBeforeWhitespace","endText","wordsBeforeWhitespace","lastWordBeforeSpace","lastWordAndBlockOffset","linksBeforeSpace","link","clickHandler","els","pasteHandler","textContent","isAllowedUri","uri","protocols","allowedProtocols","nextProtocol","Link","url","ctx","foundLinks","defaultProtocol","links","Placeholder","isEmptyDoc","hasAnchor","isEmpty","classes","decoration","createStrataEditor","_this"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]}